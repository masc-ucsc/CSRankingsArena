papers:
- abstract: Transformer models achieve state-of-the-art accuracy on natural language
    processing (NLP) and vision tasks, but demand significant computation and memory
    resources, which makes it difficult to perform inference and training (fine-tuning)
    on edge accelerators. Quantization to lower precision data types is a promising
    way to reduce computation and memory resources. Prior work has employed 8-bit
    integer (int8) quantization for Transformer inference, but int8 lacks the precision
    and range required for training. 8-bit floating-point (FP8) quantization has been
    used for Transformer training, but prior work only quantizes the inputs to matrix
    multiplications and leaves the rest of the operations in high precision.
  keywords: ''
  references: "Ron Banner, Itay Hubara, Elad Hoffer, and Daniel Soudry. Scalable methods\
    \ for 8-bit training of neural networks, 2018. arXiv:1805. 11046. Tom B. Brown,\
    \ Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared Kaplan, Prafulla Dhariwal,\
    \ Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda Askell, Sandhini Agarwal,\
    \ Ariel Herbert-Voss, Gretchen Krueger, Tom Henighan, Rewon Child, Aditya Ramesh,\
    \ Daniel M. Ziegler, Jeffrey Wu, Clemens Winter, Christopher Hesse, Mark Chen,\
    \ Eric Sigler, Mateusz Litwin, Scott Gray, Benjamin Chess, Jack Clark, Christopher\
    \ Berner, Sam McCandlish, Alec Radford, Ilya Sutskever, and Dario Amodei. Language\
    \ models are few-shot learners, 2020. arXiv:2005.14165. Gian Carlo Cardarilli,\
    \ Luca Di Nunzio, Rocco Fazzolari, Daniele Giardino, Alberto Nannarelli, Marco\
    \ Re, and Sergio Span\xF2. A pseudo-softmax function for hardware-based high speed\
    \ image classification. Scientific Reports, 11(1):15307, 2021. Nicolas Carion,\
    \ Francisco Massa, Gabriel Synnaeve, Nicolas Usunier, Alexander Kirillov, and\
    \ Sergey Zagoruyko. End-to-end object detection with transformers, 2020. arXiv:2005.12872.\
    \ Xinlei Chen, Saining Xie, and Kaiming He. An empirical study of training self-supervised\
    \ vision transformers, 2021. arXiv:2104.02057. Marco Cococcioni, Federico Rossi,\
    \ Emanuele Ruffaldi, and Sergio Saponara. Fast approximations of activation functions\
    \ in deep neural networks when using posit arithmetic. Sensors, 20(5):1515, 2020.\
    \ Tim Dettmers, Mike Lewis, Younes Belkada, and Luke Zettlemoyer. LLM.int8():\
    \ 8-bit matrix multiplication for transformers at scale, 2022. arXiv:2208.07339.\
    \ Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. BERT: Pre-training\
    \ of deep bidirectional transformers for language understanding. In Proceedings\
    \ of the 2019 Conference of the North American Chapter of the Association for\
    \ Computational Linguistics: Human Language Technologies, Volume 1 (Long and Short\
    \ Papers), pages 4171--4186, Minneapolis, Minnesota, June 2019. Association for\
    \ Computational Linguistics. URL: https://aclanthology.org/N19-1423 Alexey Dosovitskiy,\
    \ Lucas Beyer, Alexander Kolesnikov, Dirk Weissenborn, Xiaohua Zhai, Thomas Unterthiner,\
    \ Mostafa Dehghani, Matthias Minderer, Georg Heigold, Sylvain Gelly, Jakob Uszkoreit,\
    \ and Neil Houlsby. An image is worth 16\xD716 words: Transformers for image recognition\
    \ at scale, 2021. arXiv:2010.11929. John Gustafson and Ivan Yonemoto. Beating\
    \ floating point at its own game: Posit arithmetic. Supercomput. Front. Innov.:\
    \ Int. J., 4(2):71--86, June 2017. Geoffrey Hinton, Oriol Vinyals, and Jeff Dean.\
    \ Distilling the knowledge in a neural network, 2015. arXiv:1503.02531. Neil Houlsby,\
    \ Andrei Giurgiu, Stanislaw Jastrzebski, Bruna Morrone, Quentin De Laroussilhe,\
    \ Andrea Gesmundo, Mona Attariyan, and Sylvain Gelly. Parameter-efficient transfer\
    \ learning for NLP. In Kamalika Chaudhuri and Ruslan Salakhutdinov, editors, Proceedings\
    \ of the 36th International Conference on Machine Learning, volume 97 of Proceedings\
    \ of Machine Learning Research, pages 2790--2799. PMLR, June 2019. URL: https://proceedings.mlr.press/v97/houlsby19a.html.\
    \ Edward J. Hu, Yelong Shen, Phillip Wallis, Zeyuan Allen-Zhu, Yuanzhi Li, Shean\
    \ Wang, Lu Wang, and Weizhu Chen. Lora: Low-rank adaptation of large language\
    \ models, 2021. arXiv:2106.09685. Jeff Johnson. Rethinking floating point for\
    \ deep learning, 2018. arXiv: 1811.01721. Yinhan Liu, Myle Ott, Naman Goyal, Jingfei\
    \ Du, Mandar Joshi, Danqi Chen, Omer Levy, Mike Lewis, Luke Zettlemoyer, and Veselin\
    \ Stoyanov. RoBERTa: A robustly optimized bert pretraining approach, 2019. arXiv:1907.11692.\
    \ Ze Liu, Yutong Lin, Yue Cao, Han Hu, Yixuan Wei, Zheng Zhang, Stephen Lin, and\
    \ Baining Guo. Swin Transformer: Hierarchical vision transformer using shifted\
    \ windows, 2021. arXiv:2103.14030. Jinming Lu, Chao Fang, Mingyang Xu, Jun Lin,\
    \ and Zhongfeng Wang. Evaluations on deep neural networks training using posit\
    \ number system. IEEE Transactions on Computers, 70(2):174--187, 2021. Paulius\
    \ Micikevicius, Sharan Narang, Jonah Alben, Gregory Diamos, Erich Elsen, David\
    \ Garcia, Boris Ginsburg, Michael Houston, Oleksii Kuchaiev, Ganesh Venkatesh,\
    \ and Hao Wu. Mixed precision training, 2018. arXiv:1710.03740. Paulius Micikevicius,\
    \ Dusan Stosic, Neil Burgess, Marius Cornea, Pradeep Dubey, Richard Grisenthwaite,\
    \ Sangwon Ha, Alexander Heinecke, Patrick Judd, John Kamalu, Naveen Mellempudi,\
    \ Stuart Oberman, Mohammad Shoeybi, Michael Siu, and Hao Wu. FP8 formats for deep\
    \ learning, 2022. arXiv:2209.05433. Raul Murillo, Alberto A. Del Barrio, Guillermo\
    \ Botella, Min Soo Kim, HyunJin Kim, and Nader Bagherzadeh. PLAM: A posit logarithm-approximate\
    \ multiplier. IEEE Transactions on Emerging Topics in Computing, 10(4):2079--2085,\
    \ 2022. Vassil Panayotov, Guoguo Chen, Daniel Povey, and Sanjeev Khudanpur. LibriSpeech:\
    \ An ASR corpus based on public domain audio books. In 2015 IEEE International\
    \ Conference on Acoustics, Speech and Signal Processing (ICASSP), pages 5206--5210,\
    \ 2015. Kartik Prabhu, Albert Gural, Zainab F. Khan, Robert M. Radway, Massimo\
    \ Giordano, Kalhan Koul, Rohan Doshi, John W. Kustin, Timothy Liu, Gregorio B.\
    \ Lopes, Victor Turbiner, Win-San Khwa, Yu-Der Chih, Meng-Fan Chang, Gu\xE9nol\xE9\
    \ Lallement, Boris Murmann, Subhasish Mitra, and Priyanka Raina. CHIMERA: A 0.92-TOPS,\
    \ 2.2-TOPS/W edge AI accelerator with 2-MByte on-chip foundry resistive RAM for\
    \ efficient training and inference. IEEE Journal of Solid State Circuits, 57(4):1013--1026,\
    \ 2022. Alec Radford, Jong Wook Kim, Tao Xu, Greg Brockman, Christine McLeavey,\
    \ and Ilya Sutskever. Robust speech recognition via large-scale weak supervision,\
    \ 2022. arXiv:2212.04356. Colin Raffel, Noam Shazeer, Adam Roberts, Katherine\
    \ Lee, Sharan Narang, Michael Matena, Yanqi Zhou, Wei Li, and Peter J. Liu. Exploring\
    \ the limits of transfer learning with a unified text-to-text transformer. Journal\
    \ of Machine Learning Research, 21(140):1--67, 2020. URL: http://jmlr.org/papers/v21/20-074.html.\
    \ Pranav Rajpurkar, Jian Zhang, Konstantin Lopyrev, and Percy Liang. SQuAD: 100,000+\
    \ questions for machine comprehension of text. In Jian Su, Kevin Duh, and Xavier\
    \ Carreras, editors, Proceedings of the 2016 Conference on Empirical Methods in\
    \ Natural Language Processing, pages 2383--2392, Austin, Texas, November 2016.\
    \ Association for Computational Linguistics. URL: https://aclanthology.org/D16-1264\
    \ Gon\xE7alo Raposo, Pedro Tom\xE1s, and Nuno Roma. PositNN: Training deep neural\
    \ networks with mixed low-precision posit. In 2021 IEEE International Conference\
    \ on Acoustics, Speech and Signal Processing (ICASSP), pages 7908--7912, 2021.\
    \ Robin Strudel, Ricardo Garcia, Ivan Laptev, and Cordelia Schmid. Segmenter:\
    \ Transformer for semantic segmentation, 2021. arXiv: 2105.05633. Zhiqing Sun,\
    \ Hongkun Yu, Xiaodan Song, Renjie Liu, Yiming Yang, and Denny Zhou. MobileBERT:\
    \ A compact task-agnostic BERT for resource-limited devices. In Proceedings of\
    \ the 58th Annual Meeting of the Association for Computational Linguistics, pages\
    \ 2158--2170, Online, July 2020. Association for Computational Linguistics. URL:\
    \ https://aclanthology.org/2020.acl-main.195 Ashish Vaswani, Noam Shazeer, Niki\
    \ Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, \u0141 ukasz Kaiser, and\
    \ Illia Polosukhin. Attention is all you need. In I. Guyon, U. Von Luxburg, S.\
    \ Bengio, H. Wallach, R. Fergus, S. Vishwanathan, and R. Garnett, editors, Advances\
    \ in Neural Information Processing Systems, volume 30. Curran Associates, Inc.,\
    \ 2017. Alex Wang, Amanpreet Singh, Julian Michael, Felix Hill, Omer Levy, and\
    \ Samuel Bowman. GLUE: A multi-task benchmark and analysis platform for natural\
    \ language understanding. In Tal Linzen, Grzegorz Chrupa\u0142a, and Afra Alishahi,\
    \ editors, Proceedings of the 2018 EMNLP Workshop BlackboxNLP: Analyzing and Interpreting\
    \ Neural Networks for NLP, pages 353--355, Brussels, Belgium, November 2018. Association\
    \ for Computational Linguistics. URL: https://aclanthology.org/W18-5446 Thomas\
    \ Wolf, Lysandre Debut, Victor Sanh, Julien Chaumond, Clement Delangue, Anthony\
    \ Moi, Pierric Cistac, Tim Rault, R\xE9mi Louf, Morgan Funtowicz, Joe Davison,\
    \ Sam Shleifer, Patrick von Platen, Clara Ma, Yacine Jernite, Julien Plu, Canwen\
    \ Xu, Teven Le Scao, Sylvain Gugger, Mariama Drame, Quentin Lhoest, and Alexander\
    \ M. Rush. HuggingFace's Transformers: State-of-the-art natural language processing,\
    \ 2020. arXiv:1910.03771. Haocheng Xi, Changhao Li, Jianfei Chen, and Jun Zhu.\
    \ Training transformers with 4-bit integers, 2023. arXiv:2306.11987. Guangxuan\
    \ Xiao, Ji Lin, Mickael Seznec, Hao Wu, Julien Demouth, and Song Han. SmoothQuant:\
    \ Accurate and efficient post-training quantization for large language models,\
    \ 2023. arXiv:2211.10438. Elad Ben Zaken, Shauli Ravfogel, and Yoav Goldberg.\
    \ Bitfit: Simple parameter-efficient fine-tuning for transformer-based masked\
    \ language-models, 2022. arXiv:2106.10199."
  title: 8-bit Transformer Inference and Fine-tuning for Edge Accelerators
  url: https://dl.acm.org/doi/10.1145/3620666.3651368
- abstract: Secure memory is a highly desirable property to prevent memory corruption-based
    attacks. The emergence of nonvolatile, storage class memory (SCM) devices presents
    new challenges for secure memory. Metadata for integrity verification, organized
    in a Bonsai Merkle Tree (BMT), is cached on-chip in volatile caches, and may be
    lost on a power failure. As a consequence, care is required to ensure that metadata
    updates are always propagated into SCM. To optimize metadata updates, state-of-the-art
    approaches propose lazy update crash consistent metadata schemes. However, few
    consider the implications of their optimizations on on-chip area, which leads
    to inefficient utilization of scarce on-chip space. In this paper, we propose
    A Midsummer Night's Tree (AMNT), a novel "tree within a tree" approach to provide
    crash consistent integrity with low run-time overhead while limiting on-chip area
    for security metadata. Our approach offloads the potential hardware complexity
    of our technique to software to keep area overheads low. Our proposed mechanism
    results in significant improvements (a 41% reduction in execution overhead on
    average versus the state-of-the-art) for in-memory storage applications while
    significantly reducing the required on-chip area to implement our protocol.
  keywords: ''
  references: "Intel\xAE optane\u2122 persistent memory 200 series brief. https://www.intel.com/content/www/us/en/products/docs/memory-storage/optane-persistent-memory/optane-persistent-memory-200-series-brief.html.\
    \ Accessed: 2023-04-27. Linux kernel documentation. https://www.kernel.org/doc/html/v4.9/kernel-documentation.html.\
    \ Accessed: 2022-07-06. Mart\xEDn Abadi, Mihai Budiu, Ulfar Erlingsson, and Jay\
    \ Ligatti. Control-flow integrity principles, implementations, and applications.\
    \ ACM Transactions on Information and System Security (TISSEC), 13(1):1--40, 2009.\
    \ Mohammad Alshboul, Prakash Ramrakhyani, William Wang, James Tuck, and Yan Solihin.\
    \ Bbb: Simplifying persistent programming using battery-backed buffers. In 2021\
    \ IEEE International Symposium on High-Performance Computer Architecture (HPCA),\
    \ pages 111--124. IEEE, 2021. Mazen Alwadi, Aziz Mohaisen, and Amro Awad. Phoenix:\
    \ Towards persistently secure, recoverable, and nvm friendly tree of counters.\
    \ arXiv preprint arXiv:1911.01922, 2019. Mazen Alwadi, Aziz Mohaisen, and Amro\
    \ Awad. Promt: optimizing integrity tree updates for write-intensive pages in\
    \ secure nvms. In Proceedings of the ACM International Conference on Supercomputing,\
    \ pages 479--490, 2021. Ittai Anati, Shay Gueron, Simon Johnson, and Vincent Scarlata.\
    \ Innovative technology for CPU based attestation and sealing. In Proc. International\
    \ Workshop on Hardware and Architectural Support for Security and Privacy (HASP),\
    \ 2013. Ittai Anati, Frank Mckeen, Shay Gueron, Huang Haitao, Simon Johnson, Rebekah\
    \ Leslie-Hurd, Harish Patil, Carlos Rozas, and Hisham Shafi. Intel software guard\
    \ extensions (Intel SGX). In Tutorial at International Symposium on Computer Architecture\
    \ (ISCA), 2015. Joy Arulraj, Andrew Pavlo, and Subramanya R Dulloor. Let's talk\
    \ about storage & recovery methods for non-volatile memory database systems. In\
    \ Proceedings of the 2015 ACM SIGMOD International Conference on Management of\
    \ Data, pages 707--722, 2015. Amro Awad, Mao Ye, Yan Solihin, Laurent Njilla,\
    \ and Kazi Abu Zubair. Triad-nvm: Persistency for integrity-protected and encrypted\
    \ nonvolatile memories. In Proceedings of the 46th International Symposium on\
    \ Computer Architecture, pages 104--115, 2019. Christian Bienia, Sanjeev Kumar,\
    \ Jaswinder Pal Singh, and Kai Li. The parsec benchmark suite: Characterization\
    \ and architectural implications. In Proceedings of the 17th international conference\
    \ on Parallel architectures and compilation techniques, pages 72--81, 2008. Nathan\
    \ Binkert, Bradford Beckmann, Gabriel Black, Steven K Reinhardt, Ali Saidi, Arkaprava\
    \ Basu, Joel Hestness, Derek R Hower, Tushar Krishna, Somayeh Sardashti, et al.\
    \ The gem5 simulator. ACM SIGARCH computer architecture news, 39(2):1--7, 2011.\
    \ James Bucek, Klaus-Dieter Lange, and J\xF3akim v. Kistowski. Spec cpu2017: Next-generation\
    \ compute benchmark. In Companion of the 2018 ACM/SPEC International Conference\
    \ on Performance Engineering, pages 41--42, 2018. Nathan Burow, Scott A Carr,\
    \ Joseph Nash, Per Larsen, Michael Franz, Stefan Brunthaler, and Mathias Payer.\
    \ Control-flow integrity: Precision, security, and performance. ACM Computing\
    \ Surveys (CSUR), 50(1):1--33, 2017. Miao Cai, Chance C. Coats, and Jian Huang.\
    \ Hoop: Efficient hardware-assisted out-of-place update for non-volatile memory.\
    \ In 2020 ACM/IEEE 47th Annual International Symposium on Computer Architecture\
    \ (ISCA), pages 584--596, 2020. Zora Caklovic, Product Expert, Oliver Rebholz,\
    \ et al. Bringing persistent memory technology to sap hana: Opportunities and\
    \ challenges. Annual SNIA Persistent Memory Summit, 2017. Dhruva R. Chakrabarti,\
    \ Hans-J. Boehm, and Kumud Bhandari. Atlas: Leveraging Locks for Non-volatile\
    \ Memory Consistency. In Proceedings of the 2014 ACM International Conference\
    \ on Object Oriented Programming Systems Languages & Applicat ions, OOPSLA '14,\
    \ pages 433--452, New York, NY, USA, 2014. ACM. Shuo Chen, Jun Xu, Emre Can Sezer,\
    \ Prachi Gauriar, and Ravishankar K Iyer. Non-control-data attacks are realistic\
    \ threats. In USENIX security symposium, volume 5, page 146, 2005. Zhengguo Chen,\
    \ Youtao Zhang, and Nong Xiao. Cachetree: Reducing integrity verification overhead\
    \ of secure nonvolatile memories. IEEE Transactions on Computer-Aided Design of\
    \ Integrated Circuits and Systems, 40(7):1340--1353, 2020. Siddhartha Chhabra,\
    \ Brian Rogers, Yan Solihin, and Milos Prvulovic. Secureme: a hardware-software\
    \ approach to full system security. In Proceedings of the international conference\
    \ on Supercomputing, pages 108--119, 2011. Joel Coburn, Adrian M. Caulfield, Ameen\
    \ Akel, Laura M. Grupp, Rajesh K. Gupta, Ranjit Jhala, and Steven Swanson. NV-Heaps:\
    \ Making persistent objects fast and safe with next-generation, non-volatile memories.\
    \ In Proceedings of the Sixteenth International Conference on Architectural Support\
    \ for Programming Languages and Operating Systems, ASPLOS '11, pages 105--118,\
    \ New York, NY, USA, 2011. ACM. Jeremy Condit, Edmund B. Nightingale, Christopher\
    \ Frost, Engin Ipek, Benjamin Lee, Doug Burger, and Derrick Coetzee. Better i/o\
    \ through byte-addressable, persistent memory. In Proceedings of the ACM SIGOPS\
    \ 22nd Symposium on Operating Systems Principles, SOSP '09, page 133--146, New\
    \ York, NY, USA, 2009. Association for Computing Machinery. Stephen Crane, Christopher\
    \ Liebchen, Andrei Homescu, Lucas Davi, Per Larsen, Ahmad-Reza Sadeghi, Stefan\
    \ Brunthaler, and Michael Franz. Readactor: Practical code randomization resilient\
    \ to memory disclosure. In 2015 IEEE Symposium on Security and Privacy, pages\
    \ 763--780. IEEE, 2015. Fabian Fleischer, Marcel Busch, and Phillip Kuhrt. Memory\
    \ corruption attacks within android tees: a case study based on op-tee. In Proceedings\
    \ of the 15th International Conference on Availability, Reliability and Security,\
    \ pages 1--9, 2020. Alexander Freij, Shougang Yuan, Huiyang Zhou, and Yan Solihin.\
    \ Persist level parallelism: Streamlining integrity tree updates for secure persistent\
    \ memory. In 2020 53rd Annual IEEE/ACM International Symposium on Microarchitecture\
    \ (MICRO), pages 14--27. IEEE, 2020. Alexander Freij, Huiyang Zhou, and Yan Solihin.\
    \ Bonsai merkle forests: Efficiently achieving crash consistency in secure persistent\
    \ memory. In MICRO-54: 54th Annual IEEE/ACM International Symposium on Microarchitecture,\
    \ pages 1227--1240, 2021. Blaise Gassend, G Edward Suh, Dwaine Clarke, Marten\
    \ Van Dijk, and Srinivas Devadas. Caches and hash trees for efficient memory integrity\
    \ verification. In Proc. International Symposium on High Performance Computer\
    \ Architecture (HPCA), 2003. Shay Gueron. A memory encryption engine suitable\
    \ for general purpose processors. Proc. International Association for Cryptologic\
    \ Research (IACR), 2016. Youngkwang Han and John Kim. A novel covert channel attack\
    \ using memory encryption engine cache. In Proceedings of the 56th Annual Design\
    \ Automation Conference 2019, pages 1--6, 2019. Maurice Herlihy and J. Eliot B.\
    \ Moss. Transactional memory: Architectural support for lock-free data structures.\
    \ In Proceedings of the 20th Annual International Symposium on Computer Architecture,\
    \ ISCA '93, page 289--300, New York, NY, USA, 1993. Association for Computing\
    \ Machinery. Takahiro Hirofuchi and Ryousei Takano. A prompt report on the performance\
    \ of intel optane dc persistent memory module. IEICE TRANSACTIONS on Information\
    \ and Systems, 103(5):1168--1172, 2020. Jianming Huang and Yu Hua. Ensuring data\
    \ confidentiality in eadr-based nvm systems. IEEE Computer Architecture Letters,\
    \ 21(2):153--156, 2022. Yutaka Ito and Yuan He. Apparatus and methods for refreshing\
    \ memory, 2019. U.S. Patent 11062754B2. Joseph Izraelevitz, Terence Kelly, and\
    \ Aasheesh Kolli. Failure-Atomic Persistent Memory Updates via JUSTDO Logging.\
    \ In Proceedings of the Twenty-First International Conference on Architectural\
    \ Support for Programming Languages and Operating Systems, ASPLOS '16, pages 427--442,\
    \ New York, NY, USA, 2016. ACM. Joseph Izraelevitz, Jian Yang, Lu Zhang, Juno\
    \ Kim, Xiao Liu, Amirsaman Memaripour, Yun Joon Soh, Zixuan Wang, Yi Xu, Subramanya\
    \ R Dulloor, et al. Basic performance measurements of the intel optane dc persistent\
    \ memory module. arXiv preprint arXiv:1903.05714, 2019. Arpit Joshi, Vijay Nagarajan,\
    \ Marcelo Cintra, and Stratis Viglas. Efficient persist barriers for multicores.\
    \ In Proceedings of the 48th International Symposium on Microarchitecture, MICRO-48,\
    \ page 660--671, New York, NY, USA, 2015. Association for Computing Machinery.\
    \ Arpit Joshi, Vijay Nagarajan, Stratis Viglas, and Marcelo Cintra. Atom: Atomic\
    \ durability in non-volatile memory through hardware logging. In 2017 IEEE International\
    \ Symposium on High Performance Computer Architecture (HPCA), pages 361--372,\
    \ 2017. Eric Keller, Jakub Szefer, Jennifer Rexford, and Ruby B Lee. Nohype: virtualized\
    \ cloud infrastructure without the virtualization. In Proceedings of the 37th\
    \ annual international symposium on Computer architecture, pages 350--361, 2010.\
    \ Aasheesh Kolli, Jeff Rosen, Stephan Diestelhorst, Ali Saidi, Steven Pelley,\
    \ Sihang Liu, Peter M. Chen, and Thomas F. Wenisch. Delegated persist ordering.\
    \ In 2016 49th Annual IEEE/ACM International Symposium on Microarchitecture (MICRO),\
    \ pages 1--13, 2016. Tamara Silbergleit Lehman, Andrew Douglas Hilton, and Benjamin\
    \ C. Lee. PoisonIvy: Safe speculation for secure memory. In Proc. International\
    \ Symposium on Microarchitecture (MICRO), 2016. Tamara Silbergleit Lehman, Andrew\
    \ Douglas Hilton, and Benjamin C. Lee. MAPS: Understanding metadata access patterns\
    \ in secure memory. In Proc. International Symposium on Performance Analysis of\
    \ Systems and Software (ISPASS), 2018. Mengya Lei, Fan Li, Fang Wang, Dan Feng,\
    \ Xiaomin Zou, and Renzhi Xiao. Secnvm: An efficient and write-friendly metadata\
    \ crash consistency scheme for secure nvm. ACM Transactions on Architecture and\
    \ Code Optimization (TACO), 19(1):1--26, 2021. David Lie, Thekkath Chandramohan,\
    \ Mark Mitchell, Patrick Lincoln, Dan Boneh, John Mitchell, and Mark Horowitz.\
    \ Architectural support for copy and tamper resistant software. SIGPLAN Notices,\
    \ 2000. David Lie, Chandramohan A Thekkath, and Mark Horowitz. Implementing an\
    \ untrusted operating system on trusted hardware. In Proc. Symposium on Operating\
    \ Systems Principles (SOSP), 2003. Haocong Luo, Ataberk Olgun, Abdullah Giray\
    \ Ya\u011Fl\u0131k\xE7\u0131, Yahya Can Tu\u011Frul, Steve Rhyner, Meryem Banu\
    \ Cavlak, Jo\xEBl Lindegger, Mohammad Sadrosadati, and Onur Mutlu. Rowpress: Amplifying\
    \ read disturbance in modern dram chips. In Proceedings of the 50th Annual International\
    \ Symposium on Computer Architecture, pages 1--18, 2023. Stephen McLaughlin, Charalambos\
    \ Konstantinou, Xueyang Wang, Lucas Davi, Ahmad-Reza Sadeghi, Michail Maniatakos,\
    \ and Ramesh Karri. The cybersecurity landscape in industrial control systems.\
    \ Proceedings of the IEEE, 104(5):1039--1057, 2016. Ralph C Merkle. Protocols\
    \ for public key cryptosystems. In Proc. Symposium on Security and Privacy (SP),\
    \ 1980. Onur Mutlu and Jeremie S Kim. Rowhammer: A retrospective. IEEE Transactions\
    \ on Computer-Aided Design of Integrated Circuits and Systems, 39(8):1555--1571,\
    \ 2019. Sanketh Nalli, Swapnil Haria, Mark D. Hill, Michael M. Swift, Haris Volos,\
    \ and Kimberly Keeton. An Analysis of Persistent Memory Use with WHISPER. In Proceedings\
    \ of the Twenty-Second International Conference on Architectural Support for Programming\
    \ Languages and Operating Systems, ASPLOS '17, pages 135--148, New York, NY, USA,\
    \ 2017. ACM. Ismail Oukid, Wolfgang Lehner, Thomas Kissinger, Thomas Willhalm,\
    \ and Peter Bumbulis. Instant recovery for main memory databases. In CIDR, 2015.\
    \ Steven Pelley, Peter M Chen, and Thomas F Wenisch. Memory persistency. In 2014\
    \ ACM/IEEE 41st International Symposium on Computer Architecture (ISCA), pages\
    \ 265--276. IEEE, 2014. Marcus Pendleton, Richard Garcia-Lebron, Jin-Hee Cho,\
    \ and Shouhuai Xu. A survey on systems security metrics. ACM Computing Surveys\
    \ (CSUR), 49(4):1--35, 2016. Erez Perelman, Greg Hamerly, Michael Van Biesbrouck,\
    \ Timothy Sherwood, and Brad Calder. Using simpoint for accurate and efficient\
    \ simulation. ACM SIGMETRICS Performance Evaluation Review, 31(1):318--319, 2003.\
    \ pmem.io. Persistent Memory Development Kit, 2017. http://pmem.io/pmdk. Adnan\
    \ Siraj Rakin, Md Hafizul Islam Chowdhuryy, Fan Yao, and Deliang Fan. Deepsteal:\
    \ Advanced model extractions leveraging efficient weight stealing in memories.\
    \ In 2022 IEEE Symposium on Security and Privacy (SP), pages 1157--1174. IEEE,\
    \ 2022. Joydeep Rakshit and Kartik Mohanram. Assure: Authentication scheme for\
    \ secure energy efficient non-volatile memories. In Proceedings of the 54th Annual\
    \ Design Automation Conference 2017, pages 1--6, 2017. Luiz E Ramos, Eugene Gorbatov,\
    \ and Ricardo Bianchini. Page placement in hybrid memory systems. In Proceedings\
    \ of the international conference on Supercomputing, pages 85--95, 2011. Brian\
    \ Rogers, Siddhartha Chhabra, Milos Prvulovic, and Yan Solihin. Using address\
    \ independent seed encryption and Bonsai Merkle trees to make secure processors\
    \ OS- and performance-friendly. In Proc. International Symposium on Microarchitecture\
    \ (MICRO), 2007. Brian Rogers, Chenyu Yan, Siddhartha Chhabra, Milos Prvulovic,\
    \ and Yan Solihin. Single-level integrity and confidentiality protection for distributed\
    \ shared memory multiprocessors. In Proc. International Symposium on High Performance\
    \ Computer Architecture (HPCA), 2008. Gururaj Saileshwar, Prashant J Nair, Prakash\
    \ Ramrakhyani, Wendy Elsasser, Jose A Joao, and Moinuddin K Qureshi. Morphable\
    \ counters: Enabling compact integrity trees for low-overhead secure memories.\
    \ In Proc. International Symposium on Microarchitecture (MICRO), 2018. Gururaj\
    \ Saileshwar, Prashant J Nair, Prakash Ramrakhyani, Wendy Elsasser, and Moinuddin\
    \ K Qureshi. Synergy: Rethinking secure-memory design for error-correcting memories.\
    \ In Proc. International Symposium on High Performance Computer Architecture (HPCA),\
    \ 2018. Steve Scargall. Programming persistent memory: A comprehensive guide for\
    \ developers. Springer Nature, 2020. Felix Schuster, Thomas Tendyck, Christopher\
    \ Liebchen, Lucas Davi, Ahmad-Reza Sadeghi, and Thorsten Holz. Counterfeit object-oriented\
    \ programming: On the difficulty of preventing code reuse attacks in c++ applications.\
    \ In 2015 IEEE Symposium on Security and Privacy, pages 745--762. IEEE, 2015.\
    \ Daniele Sgandurra and Emil Lupu. Evolution of attacks, threat models, and solutions\
    \ for virtualized systems. ACM Computing Surveys (CSUR), 48(3):1--38, 2016. Rakin\
    \ Muhammad Shadab, Yu Zou, Sanjay Gandham, and Mingjie Lin. Omt: A run-time adaptive\
    \ architectural framework for bonsai merkle tree-based secure authentication with\
    \ embedded heterogeneous memory. In 2023 IEEE International Symposium on Hardware\
    \ Oriented Security and Trust (HOST), pages 191--202. IEEE, 2023. Weidong Shi\
    \ and Hsien-Hsin S Lee. Authentication control point and its implications for\
    \ secure processor design. In Proc. International Symposium on Microarchitecture\
    \ (MICRO), 2006. Weidong Shi, Hsien-Hsin S Lee, Mrinmoy Ghosh, and Chenghuai Lu.\
    \ Architecture support for high speed protection of memory integrity and confidentiality\
    \ in multiprocessor systems. In Proc. International Conference on Parallel Architectures\
    \ and Compilation Techniques (PACT), 2004. Seunghee Shin, Satish Kumar Tirukkovalluri,\
    \ James Tuck, and Yan Solihin. Proteus: A flexible and fast software supported\
    \ hardware logging approach for nvm. In Proceedings of the 50th Annual IEEE/ACM\
    \ International Symposium on Microarchitecture, MICRO-50 '17, page 178--190, New\
    \ York, NY, USA, 2017. Association for Computing Machinery. Sergei Skorobogatov.\
    \ Data remanence in flash memory devices. In Cryptographic Hardware and Embedded\
    \ Systems-CHES 2005: 7th International Workshop, Edinburgh, UK, August 29--September\
    \ 1, 2005. Proceedings 7, pages 339--353. Springer, 2005. G Edward Suh, Dwaine\
    \ Clarke, Blaise Gassend, Marten van Dijk, and Srinivas Devadas. Efficient memory\
    \ integrity verification and encryption for secure processors. In Proc. International\
    \ Symposium on Microarchitecture (MICRO), 2003. G Edward Suh, Dwaine Clarke, Blaise\
    \ Gassend, Marten Van Dijk, and Srinivas Devadas. AEGIS: Architecture for tamper-evident\
    \ and tamper-resistant processing. In Proc. International Conference on Supercomputing\
    \ (ICS), 2003. Meysam Taassori, Rajeev Balasubramonian, Siddhartha Chhabra, Alaa\
    \ R Alameldeen, Manjula Peddireddy, Rajat Agarwal, and Ryan Stutsman. Compact\
    \ leakage-free support for integrity and reliability. In 2020 ACM/IEEE 47th Annual\
    \ International Symposium on Computer Architecture (ISCA), pages 735--748. IEEE,\
    \ 2020. Meysam Taassori, Ali Shafiee, and Rajeev Balasubramonian. Vault: Reducing\
    \ paging overheads in sgx with efficient integrity verification structures. In\
    \ Proceedings of the Twenty-Third International Conference on Architectural Support\
    \ for Programming Languages and Operating Systems, pages 665--678, 2018. Kenzo\
    \ Van Craeynest and Lieven Eeckhout. The multi-program performance model: debunking\
    \ current practice in multi-core simulation. In 2011 IEEE International Symposium\
    \ on Workload Characterization (IISWC), pages 26--37. IEEE, 2011. Haris Volos,\
    \ Andres Jaan Tack, and Michael M. Swift. Mnemosyne: Lightweight persistent memory.\
    \ In Proceedings of the Sixteenth International Conference on Architectural Support\
    \ for Programming Languages and Operating Systems, ASPLOS XVI, pages 91--104,\
    \ New York, NY, USA, 2011. ACM. Bolin Wang. Bo-tree: a dynamic merkle tree for\
    \ enabling scalable memories. PhD thesis, University of British Columbia, 2022.\
    \ Xueliang Wei, Dan Feng, Wei Tong, Jingning Liu, and Liuqing Ye. Morlog: Morphable\
    \ hardware logging for atomic persistence in nonvolatile main memory. In 2020\
    \ ACM/IEEE 47th Annual International Symposium on Computer Architecture (ISCA),\
    \ pages 610--623, 2020. Yubin Xia, Yutao Liu, and Haibo Chen. Architecture support\
    \ for guest-transparent vm protection from untrusted hypervisor and physical attacks.\
    \ In Proc. International Symposium on High Performance Computer Architecture (HPCA),\
    \ 2013. Chenyu Yan, Daniel Englender, Milos Prvulovic, Brian Rogers, and Yan Solihin.\
    \ Improving cost, performance, and security of memory encryption and authentication.\
    \ Proc. International Symposium on Computer Architecture (ISCA), 2006. Jun Yang,\
    \ Youtao Zhang, and Lan Gao. Fast secure processor for inhibiting software piracy\
    \ and tampering. In Proc. International Symposium on Microarchitecture (MICRO),\
    \ 2003. Chongnan Ye, Meng Chen, Qisheng Jiang, and Chundong Wang. Enabling atomic\
    \ durability for persistent memory with transiently persistent cpu cache. arXiv\
    \ preprint arXiv:2210.17377, 2022. Mao Ye, Clayton Hughes, and Amro Awad. Osiris:\
    \ A low-cost mechanism to enable restoration of secure non-volatile memories.\
    \ Technical report, Sandia National Lab.(SNL-NM), Albuquerque, NM (United States),\
    \ 2018. Bowen Zhang, Shengan Zheng, Zhenlin Qi, and Linpeng Huang. Nbtree: a lock-free\
    \ pm-friendly persistent b+-tree for eadr-enabled pm systems. Proceedings of the\
    \ VLDB Endowment, 15(6):1187--1200, 2022. Jishen Zhao, Sheng Li, Doe Hyun Yoon,\
    \ Yuan Xie, and Norman P. Jouppi. Kiln: Closing the performance gap between systems\
    \ with and without persistence support. In Proceedings of the 46th Annual IEEE/ACM\
    \ International Symposium on Microarchitecture, MICRO-46, pages 421--432, New\
    \ York, NY, USA, 2013. ACM. Kazi Abu Zubair and Amro Awad. Anubis: ultra-low overhead\
    \ and recovery time for secure non-volatile memories. In Proceedings of the 46th\
    \ International Symposium on Computer Architecture, pages 157--168, 2019."
  title: "A Midsummer Night\u2019s Tree: Efficient and High Performance Secure SCM"
  url: https://dl.acm.org/doi/10.1145/3620666.3651354
- abstract: 'Domain Specific Languages (DSLs) increase programmer productivity and
    provide high performance. Their targeted abstractions allow scientists to express
    problems at a high level, providing rich details that optimizing compilers can
    exploit to target current- and next-generation supercomputers. The convenience
    and performance of DSLs come with significant development and maintenance costs.
    The siloed design of DSL compilers and the resulting inability to benefit from
    shared infrastructure cause uncertainties around longevity and the adoption of
    DSLs at scale. By tailoring the broadly-adopted MLIR compiler framework to HPC,
    we bring the same synergies that the machine learning community already exploits
    across their DSLs (e.g. Tensorflow, PyTorch) to the finite-difference stencil
    HPC community. We introduce new HPC-specific abstractions for message passing
    targeting distributed stencil computations. We demonstrate the sharing of common
    components across three distinct HPC stencil-DSL compilers: Devito, PSyclone,
    and the Open Earth Compiler, showing that our framework generates high-performance
    executables based upon a shared compiler ecosystem.'
  keywords: Software and its engineering Software notations and tools Context specific
    languages Domain specific languages General programming languages Language types
    Distributed programming languages
  references: "Mart\xEDn Abadi, Ashish Agarwal, Paul Barham, Eugene Brevdo, Zhifeng\
    \ Chen, Craig Citro, Greg S. Corrado, Andy Davis, Jeffrey Dean, Matthieu Devin,\
    \ Sanjay Ghemawat, Ian Goodfellow, Andrew Harp, Geoffrey Irving, Michael Isard,\
    \ Yangqing Jia, Rafal Jozefowicz, Lukasz Kaiser, Manjunath Kudlur, Josh Levenberg,\
    \ Dandelion Man\xE9, Rajat Monga, Sherry Moore, Derek Murray, Chris Olah, Mike\
    \ Schuster, Jonathon Shlens, Benoit Steiner, Ilya Sutskever, Kunal Talwar, Paul\
    \ Tucker, Vincent Vanhoucke, Vijay Vasudevan, Fernanda Vi\xE9gas, Oriol Vinyals,\
    \ Pete Warden, Martin Wattenberg, Martin Wicke, Yuan Yu, and Xiaoqiang Zheng.\
    \ 2015. TensorFlow: Large-Scale Machine Learning on Heterogeneous Systems. (2015).\
    \ https://www.tensorflow.org/ Software available from tensorflow.org. Mart\xED\
    n Abadi, Paul Barham, Jianmin Chen, Zhifeng Chen, Andy Davis, Jeffrey Dean, Matthieu\
    \ Devin, Sanjay Ghemawat, Geoffrey Irving, Michael Isard, Manjunath Kudlur, Josh\
    \ Levenberg, Rajat Monga, Sherry Moore, Derek G. Murray, Benoit Steiner, Paul\
    \ Tucker, Vijay Vasudevan, Pete Warden, Martin Wicke, Yuan Yu, and Xiaoqiang Zheng.\
    \ 2016. TensorFlow: a system for large-scale machine learning. In Proceedings\
    \ of the 12th USENIX Conference on Operating Systems Design and Implementation\
    \ (OSDI'16). USENIX Association, USA, 265--283. Samantha V Adams, Rupert W Ford,\
    \ M Hambley, JM Hobson, I Kav\u010Di\u010D, Christopher M Maynard, Thomas Melvin,\
    \ Eike Hermann M\xFCller, S Mullerworth, AR Porter, et al. 2019. LFRic: Meeting\
    \ the challenges of scalability and performance portability in Weather and Climate\
    \ models. J. Parallel and Distrib. Comput. 132 (2019), 383--396. Anton Afanasyev,\
    \ Mauro Bianco, Lukas Mosimann, Carlos Osuna, Felix Thaler, Hannes Vogt, Oliver\
    \ Fuhrer, Joost VandeVondele, and Thomas C. Schulthess. 2021. GridTools: a framework\
    \ for portable weather and climate applications. SoftwareX 15 (2021), 100707.\
    \ Martin Sandve Aln\xE6s. 2012. UFL: a finite element form language. Springer\
    \ Berlin Heidelberg, Berlin, Heidelberg, 303--338. Alexander A Auer, Gerald Baumgartner,\
    \ David E Bernholdt, Alina Bibireata, Venkatesh Choppella, Daniel Cociorva, Xiaoyang\
    \ Gao, Robert Harrison, Sriram Krishnamoorthy, Sandhya Krishnan, et al. 2006.\
    \ Automatic code generation for many-body electronic structure methods: the tensor\
    \ contraction engine. Molecular Physics 104, 2 (2006), 211--228. arXiv:https://doi.org/10.1080/00268970500275780\
    \ Jeff Bezanson, Alan Edelman, Stefan Karpinski, and Viral B. Shah. 2017. Julia:\
    \ A fresh approach to numerical computing. SIAM Rev. 59, 1 (Sept. 2017), 65--98.\
    \ George Bisbas, Fabio Luporini, Mathias Louboutin, Rhodri Nelson, Gerard J. Gorman,\
    \ and Paul H.J. Kelly. 2021. Temporal blocking of finite-difference stencil operators\
    \ with sparse \"off-the-grid\" sources. In 2021 IEEE International Parallel and\
    \ Distributed Processing Symposium (IPDPS). 497--506. George Bisbas, Rhodri Nelson,\
    \ Mathias Louboutin, Paul H. J. Kelly, Fabio Luporini, and Gerard Gorman. 2023.\
    \ Automated MPI code generation for scalable finite-difference solvers. (2023).\
    \ arXiv:cs.DC/2312.13094 Nick Brown. 2020. Exploring the acceleration of Nekbone\
    \ on reconfigurable architectures. In 2020 IEEE/ACM International Workshop on\
    \ Heterogeneous High-performance Reconfigurable Computing (H2RC). 19--28. Nick\
    \ Brown. 2021. Accelerating advection for atmospheric modelling on Xilinx and\
    \ Intel FPGAs. In 2021 IEEE International Conference on Cluster Computing (CLUSTER).\
    \ 767--774. Nick Brown, Michele Weiland, Adrian Hill, Ben Shipway, Chris Maynard,\
    \ Thomas Allen, and Mike Rezny. 2015. A highly scalable Met Office NERC Cloud\
    \ model. (2015), 6 pages. Simon Byrne, Lucas C. Wilcox, and Valentin Churavy.\
    \ 2021. MPI.jl: Julia bindings for the Message Passing Interface. Proceedings\
    \ of the JuliaCon Conferences 1, 1 (2021), 68. Emilio Castillo, Nikhil Jain, Marc\
    \ Casas, Miquel Moreto, Martin Schulz, Ramon Beivide, Mateo Valero, and Abhinav\
    \ Bhatele. 2019. Optimizing Computation-Communication Overlap in Asynchronous\
    \ Task-Based Programs. In Proceedings of the ACM International Conference on Supercomputing\
    \ (ICS '19). Association for Computing Machinery, New York, NY, USA, 380--391.\
    \ Chun Chen, Jacqueline Chame, and Mary Hall. 2008. CHiLL: A framework for composing\
    \ high-level loop transformations. Technical Report. Citeseer. Matthias Christen,\
    \ Olaf Schenk, and Helmar Burkhart. 2011. PATUS: a Code Generation and Autotuning\
    \ Framework for Parallel Iterative Stencil Computations on Modern Microarchitectures.\
    \ In Proceedings of the 2011 IEEE International Parallel & Distributed Processing\
    \ Symposium (IPDPS '11). IEEE Computer Society, Washington, DC, USA, 676--687.\
    \ H\xE9l\xE8ne Coullon, Julien Bigot, and Christian P\xE9rez. 2019. Extensibility\
    \ and composability of a multi-stencil domain specific framework. International\
    \ Journal of Parallel Programming 47 (2019), 1046--1085. Carlos Cueto, Oscar Bates,\
    \ George Strong, Javier Cudeiro, Fabio Luporini, \xD2scar Calder\xF3n Agudo, Gerard\
    \ Gorman, Lluis Guasch, and Meng-Xing Tang. 2022. Stride: A flexible software\
    \ platform for high-performance ultrasound computed tomography. Computer Methods\
    \ and Programs in Biomedicine 221 (2022), 106855. Ron Cytron, Jeanne Ferrante,\
    \ Barry K. Rosen, Mark N. Wegman, and F. Kenneth Zadeck. 1991. Efficiently computing\
    \ static single assignment form and the control dependence graph. ACM Trans. Program.\
    \ Lang. Syst. 13, 4 (oct 1991), 451--490. Tyler Denniston, Shoaib Kamil, and Saman\
    \ Amarasinghe. 2016. Distributed Halide. In Proceedings of the 21st ACM SIGPLAN\
    \ Symposium on Principles and Practice of Parallel Programming (PPoPP '16). Association\
    \ for Computing Machinery, New York, NY, USA, Article 5, 12 pages. Zachary DeVito,\
    \ Niels Joubert, Francisco Palacios, Stephen Oakley, Montserrat Medina, Mike Barrientos,\
    \ Erich Elsen, Frank Ham, Alex Aiken, Karthik Duraisamy, Eric Darve, Juan Alonso,\
    \ and Pat Hanrahan. 2011. Liszt: A domain specific language for building portable\
    \ mesh-based PDE solvers. In SC '11: Proceedings of 2011 International Conference\
    \ for High Performance Computing, Networking, Storage and Analysis. 1--12. Schuyler\
    \ Eldridge, Prithayan Barua, Aliaksei Chapyzhenka, Adam Izraelevitz, Jack Koenig,\
    \ Chris Lattner, Andrew Lenharth, George Leontiev, Fabian Schuiki, Ram Sunder,\
    \ et al. 2021. MLIR as hardware compiler infrastructure. In Workshop on Open-Source\
    \ EDA Technology (WOSET). https://woset-workshop.github.io/PDFs/2021/a06.pdf Mohamed\
    \ Essadki, Bertrand Michel, Bruno Maugars, Oleksandr Zinenko, Nicolas Vasilache,\
    \ and Albert Cohen. 2023. Code Generation for In-Place Stencils. In Proceedings\
    \ of the 21st ACM/IEEE International Symposium on Code Generation and Optimization\
    \ (CGO 2023). Association for Computing Machinery, New York, NY, USA, 2--13. Mathieu\
    \ Fehr, Michel Weber, Christian Ulmann, Alexandre Lopoukhine, Martin L\xFCcke,\
    \ Th\xE9o Degioanni, Michel Steuwer, and Tobias Grosser. 2023. Sidekick compilation\
    \ with xDSL. (2023). arXiv:2311.07422 Sanath Govindarajan and William S. Moses.\
    \ 2020. SyFER-MLIR: Integrating Fully Homomorphic Encryption Into the MLIR Compiler\
    \ Framework. Tobias Gysi, Christoph M\xFCller, Oleksandr Zinenko, Stephan Herhut,\
    \ Eddie Davis, Tobias Wicky, Oliver Fuhrer, Torsten Hoefler, and Tobias Grosser.\
    \ 2021. Domain-Specific Multi-Level IR Rewriting for GPU: The Open Earth Compiler\
    \ for GPU-accelerated Climate Simulation. ACM Trans. Archit. Code Optim. 18, 4\
    \ (2021), 51:1--51:23. Tobias Gysi, Carlos Osuna, Oliver Fuhrer, Mauro Bianco,\
    \ and Thomas C. Schulthess. 2015. STELLA: a domain-specific tool for structured\
    \ grid methods in weather and climate models. In Proceedings of the International\
    \ Conference for High Performance Computing, Networking, Storage and Analysis,\
    \ SC 2015, Austin, TX, USA, November 15-20, 2015, Jackie Kern and Jeffrey S. Vetter\
    \ (Eds.). ACM, New York, NY, USA, 41:1--41:12. Jeff Hammond, Lisandro Dalcin,\
    \ Erik Schnetter, Marc P\xE9Rache, Jean-Baptiste Besnard, Jed Brown, Gonzalo Brito\
    \ Gadeschi, Simon Byrne, Joseph Schuchart, and Hui Zhou. 2023. MPI Application\
    \ Binary Interface Standardization. In Proceedings of the 30th European MPI Users'\
    \ Group Meeting (EuroMPI '23). Association for Computing Machinery, New York,\
    \ NY, USA, Article 1, 12 pages. Eric Heisler, Aadesh Deshmukh, Sandip Mazumder,\
    \ Ponnuswamy Sadayappan, and Hari Sundar. 2023. Multi-discretization domain specific\
    \ language and code generation for differential equations. Journal of Computational\
    \ Science 68 (2023), 101981. Tom Henretty, Kevin Stock, Louis-No\xEBl Pouchet,\
    \ Franz Franchetti, J. Ramanujam, and P. Sadayappan. 2011. Data Layout Transformation\
    \ for Stencil Computations on Short-Vector SIMD Architectures. In Compiler Construction,\
    \ Jens Knoop (Ed.). Springer Berlin Heidelberg, Berlin, Heidelberg, 225--245.\
    \ M. L. Hines and N. T. Carnevale. 2000. Expanding NEURON's Repertoire of Mechanisms\
    \ with NMODL. Neural Computation 12, 5 (05 2000), 995--1007. Yuanming Hu, Tzu-Mao\
    \ Li, Luke Anderson, Jonathan Ragan-Kelley, and Fr\xE9do Durand. 2019. Taichi:\
    \ A Language for High-Performance Computation on Spatially Sparse Data Structures.\
    \ ACM Trans. Graph. 38, 6, Article 201 (nov 2019), 16 pages. Christian T. Jacobs,\
    \ Satya P. Jammy, and Neil D. Sandham. 2017. OpenSBLI: A framework for the automated\
    \ derivation and parallel execution of finite difference solvers on a range of\
    \ computer architectures. Journal of Computational Science 18 (2017), 12--23.\
    \ Fredrik Kjolstad, Shoaib Kamil, Stephen Chou, David Lugato, and Saman Amarasinghe.\
    \ 2017. The tensor algebra compiler. Proc. ACM Program. Lang. 1, OOPSLA, Article\
    \ 77 (oct 2017), 29 pages. Andreas Kl\xF6ckner. 2014. Loo.py: transformation-based\
    \ code generation for GPUs and CPUs. In Proceedings of ACM SIGPLAN International\
    \ Workshop on Libraries, Languages, and Compilers for Array Programming (ARRAY'14).\
    \ Association for Computing Machinery, New York, NY, USA, 82--87. Sebastian Kuckuk\
    \ and Harald K\xF6stler. 2016. Automatic Generation of Massively Parallel Codes\
    \ from ExaSlang. Computation 4, 3 (2016). Siu Kwan Lam, Antoine Pitrou, and Stanley\
    \ Seibert. 2015. Numba: a LLVM-based Python JIT compiler. In Proceedings of the\
    \ Second Workshop on the LLVM Compiler Infrastructure in HPC (LLVM '15). Association\
    \ for Computing Machinery, New York, NY, USA, Article 7, 6 pages. Chris Lattner,\
    \ Mehdi Amini, Uday Bondhugula, Albert Cohen, Andy Davis, Jacques Pienaar, River\
    \ Riddle, Tatiana Shpeisman, Nicolas Vasilache, and Oleksandr Zinenko. 2021. MLIR:\
    \ Scaling Compiler Infrastructure for Domain Specific Computation. In 2021 IEEE/ACM\
    \ International Symposium on Code Generation and Optimization (CGO). IEEE, 2--14.\
    \ Roland Lei\xDFa, Klaas Boesche, Sebastian Hack, Ars\xE8ne P\xE9rard-Gayot, Richard\
    \ Membarth, Philipp Slusallek, Andr\xE9 M\xFCller, and Bertil Schmidt. 2018. AnyDSL:\
    \ a partial evaluation framework for programming high-performance libraries. Proc.\
    \ ACM Program. Lang. 2, OOPSLA (2018), 119:1--119:30. Christian Lengauer, Sven\
    \ Apel, Matthias Bolten, Shigeru Chiba, Ulrich R\xFCde, J\xFCrgen Teich, Armin\
    \ Gr\xF6\xDFlinger, Frank Hannig, Harald K\xF6stler, Lisa Claus, Alexander Grebhahn,\
    \ Stefan Groth, Stefan Kronawitter, Sebastian Kuckuk, Hannah Rittich, Christian\
    \ Schmitt, and Jonas Schmitt. 2020. ExaStencils: Advanced Multigrid Solver Generation.\
    \ In Software for Exascale Computing - SPPEXA 2016-2019, Hans-Joachim Bungartz,\
    \ Severin Reiz, Benjamin Uekermann, Philipp Neumann, and Wolfgang E. Nagel (Eds.).\
    \ Springer International Publishing, Cham, 405--452. Mingzhen Li, Bangduo Chen,\
    \ Hailong Yang, Zhongzhi Luan, and Depei Qian. 2024. Building a domain-specific\
    \ compiler for emerging processors with a reusable approach. In Science China\
    \ Information Sciences, Vol. 67. Mingzhen Li, Yi Liu, Hailong Yang, Yongmin Hu,\
    \ Qingxiao Sun, Bangduo Chen, Xin You, Xiaoyan Liu, Zhongzhi Luan, and Depei Qian.\
    \ 2021. Automatic Code Generation and Optimization of Large-Scale Stencil Computation\
    \ on Many-Core Processors. In Proceedings of the 50th International Conference\
    \ on Parallel Processing (ICPP '21). ACM, New York, NY, USA, Article 34, 12 pages.\
    \ Chunhua Liao, Pei-Hung Lin, Daniel J. Quinlan, Yue Zhao, and Xipeng Shen. 2015.\
    \ Enhancing Domain Specific Language Implementations through Ontology. In Proceedings\
    \ of the 5th International Workshop on Domain-Specific Languages and High-Level\
    \ Frameworks for High Performance Computing (WOLFHPC '15). ACM, New York, NY,\
    \ USA, Article 3, 9 pages. A. Logg, K.A. Mardal, and G. Wells. 2012. Automated\
    \ Solution of Differential Equations by the Finite Element Method: The FEniCS\
    \ Book. Springer Berlin Heidelberg. M. Louboutin, M. Lange, F. Luporini, N. Kukreja,\
    \ P. A. Witte, F. J. Herrmann, P. Velesko, and G. J. Gorman. 2019. Devito (v3.1.0):\
    \ an embedded domain-specific language for finite differences and geophysical\
    \ exploration. Geoscientific Model Development 12, 3 (2019), 1165--1187. Fabio\
    \ Luporini, Mathias Louboutin, Michael Lange, Navjot Kukreja, Philipp Witte, Jan\
    \ H\xFCckelheim, Charles Yount, Paul H. J. Kelly, Felix J. Herrmann, and Gerard\
    \ J. Gorman. 2020. Architecture and Performance of Devito, a System for Automated\
    \ Stencil Computation. ACM Trans. Math. Softw. 46, 1, Article 6 (apr 2020), 28\
    \ pages. Kingshuk Majumder and Uday Bondhugula. 2024. HIR: An MLIR-based Intermediate\
    \ Representation for Hardware Accelerator Description. (2024), 13 pages. Naoya\
    \ Maruyama, Tatsuo Nomura, Kento Sato, and Satoshi Matsuoka. 2011. Physis: An\
    \ Implicitly Parallel Programming Model for Stencil Computations on Large-Scale\
    \ GPU-Accelerated Supercomputers. In Proceedings of 2011 International Conference\
    \ for High Performance Computing, Networking, Storage and Analysis (SC '11). ACM,\
    \ New York, NY, USA, Article 11, 12 pages. Thomas Melvin, Steve Mullerworth, Rupert\
    \ Ford, Chris Maynard, and Mike Hobson. 2017. LFRic: Building a new Unified Model.\
    \ In EGU General Assembly Conference Abstracts. 13021. Aaron Meurer, Christopher\
    \ P. Smith, Mateusz Paprocki, Ond\u0159ej \u010Cert\xEDk, Sergey B. Kirpichev,\
    \ Matthew Rocklin, Amit Kumar, Sergiu Ivanov, Jason K. Moore, Sartaj Singh, Thilina\
    \ Rathnayake, Sean Vig, Brian E. Granger, Richard P. Muller, Francesco Bonazzi,\
    \ Harsh Gupta, Shivam Vats, Fredrik Johansson, Fabian Pedregosa, Matthew J. Curry,\
    \ Andy R. Terrel, \u0160t\u011Bp\xE1n Rou\u010Dka, Ashutosh Saboo, Isuru Fernando,\
    \ Sumith Kulal, Robert Cimrman, and Anthony Scopatz. 2017. SymPy: symbolic computing\
    \ in Python. PeerJ Computer Science 3 (Jan. 2017), e103. George Mitenkov, Ioannis\
    \ Magkanaris, Omar Awile, Pramod Kumbhar, Felix Sch\xFCrmann, and Alastair F.\
    \ Donaldson. 2023. MOD2IR: High-Performance Code Generation for a Biophysically\
    \ Detailed Neuronal Simulation DSL. In Proceedings of the 32nd ACM SIGPLAN International\
    \ Conference on Compiler Construction (CC 2023). ACM, New York, NY, USA, 203--215.\
    \ Modular. [n. d.]. Mojo: Programming language for all of AI. ([n. d.]). https://www.modular.com/mojo\
    \ G.R. Mudalige, I.Z. Reguly, S.P. Jammy, C.T. Jacobs, M.B. Giles, and N.D. Sandham.\
    \ 2019. Large-scale performance of a DSL-based multi-block structured-mesh application\
    \ for Direct Numerical Simulation. J. Parallel and Distrib. Comput. 131 (2019),\
    \ 130--146. Ravi Teja Mullapudi, Vinay Vasista, and Uday Bondhugula. 2015. Poly-Mage:\
    \ Automatic Optimization for Image Processing Pipelines. In Proceedings of the\
    \ Twentieth International Conference on Architectural Support for Programming\
    \ Languages and Operating Systems (ASPLOS '15). Association for Computing Machinery,\
    \ New York, NY, USA, 429--443. Samuel Omlin, Ludovic R\xE4ss, and Ivan Utkin.\
    \ 2022. Distributed Parallelization of xPU Stencil Computations in Julia. (2022).\
    \ arXiv:2211.15716 Adam Paszke, Sam Gross, Francisco Massa, Adam Lerer, James\
    \ Bradbury, Gregory Chanan, Trevor Killeen, Zeming Lin, Natalia Gimelshein, Luca\
    \ Antiga, Alban Desmaison, Andreas K\xF6pf, Edward Yang, Zach DeVito, Martin Raison,\
    \ Alykhan Tejani, Sasank Chilamkurthy, Benoit Steiner, Lu Fang, Junjie Bai, and\
    \ Soumith Chintala. 2019. PyTorch: an imperative style, high-performance deep\
    \ learning library. In Proceedings of the 33rd International Conference on Neural\
    \ Information Processing Systems. Curran Associates Inc., Red Hook, NY, USA. Steve\
    \ A Piacsek and Gareth P Williams. 1970. Conservation properties of convection\
    \ difference schemes. J. Comput. Phys. 6, 3 (1970), 392--405. A. R. Porter, J.\
    \ Appleyard, M. Ashworth, R. W. Ford, J. Holt, H. Liu, and G. D. Riley. 2018.\
    \ Portable multi- and many-core performance for finite-difference or finite-element\
    \ codes - application to the free-surface component of NEMO (NEMOLite2D 1.0).\
    \ Geoscientific Model Development 11, 8 (2018), 3447--3464. M. Puschel, J.M.F.\
    \ Moura, J.R. Johnson, D. Padua, M.M. Veloso, B.W. Singer, Jianxin Xiong, F. Franchetti,\
    \ A. Gacic, Y. Voronenko, K. Chen, R.W. Johnson, and N. Rizzolo. 2005. SPIRAL:\
    \ Code Generation for DSP Transforms. Proc. IEEE 93, 2 (2005), 232--275. Jonathan\
    \ Ragan-Kelley, Connelly Barnes, Andrew Adams, Sylvain Paris, Fr\xE9do Durand,\
    \ and Saman P. Amarasinghe. 2013. Halide: a language and compiler for optimizing\
    \ parallelism, locality, and re-computation in image processing pipelines. In\
    \ ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI\
    \ '13, Seattle, WA, USA, June 16-19, 2013, Hans-Juergen Boehm and Cormac Flanagan\
    \ (Eds.). ACM, New York, NY, USA, 519--530. Florian Rathgeber, David A. Ham, Lawrence\
    \ Mitchell, Michael Lange, Fabio Luporini, Andrew T. T. Mcrae, Gheorghe-Teodor\
    \ Bercea, Graham R. Markall, and Paul H. J. Kelly. 2016. Firedrake: Automating\
    \ the Finite Element Method by Composing Abstractions. ACM Trans. Math. Softw.\
    \ 43, 3, Article 24 (dec 2016), 27 pages. Mahesh Ravishankar, Justin Holewinski,\
    \ and Vinod Grover. 2015. Forma: A DSL for Image Processing Applications to Target\
    \ GPUs and Multi-Core CPUs. In Proceedings of the 8th Workshop on General Purpose\
    \ Processing Using GPUs (GPGPU-8). Association for Computing Machinery, New York,\
    \ NY, USA, 109--120. Prashant Rawat, Martin Kong, Tom Henretty, Justin Holewinski,\
    \ Kevin Stock, Louis-No\xEBl Pouchet, J. Ramanujam, Atanas Rountev, and P. Sadayappan.\
    \ 2015. SDSLc: A Multi-Target Domain-Specific Compiler for Stencil Computations.\
    \ In Proceedings of the 5th International Workshop on Domain-Specific Languages\
    \ and High-Level Frameworks for High Performance Computing (WOLFHPC '15). ACM,\
    \ New York, NY, USA, Article 6, 10 pages. Prashant Singh Rawat, Miheer Vaidya,\
    \ Aravind Sukumaran-Rajam, Mahesh Ravishankar, Vinod Grover, Atanas Rountev, Louis\
    \ Noel Pouchet, and P. Sadayappan. 2018. Domain-Specific Optimization and Generation\
    \ of High-Performance GPU Code for Stencil Computations. Proc. IEEE 106, 11 (2018),\
    \ 1902--1920. Prashant Singh Rawat, Miheer Vaidya, Aravind Sukumaran-Rajam, Atanas\
    \ Rountev, Louis-No\xEBl Pouchet, and P. Sadayappan. 2019. On Optimizing Complex\
    \ Stencils on GPUs. In 2019 IEEE International Parallel and Distributed Processing\
    \ Symposium (IPDPS). IEEE, 641--652. Istv\xE1n Z. Reguly, Gihan R. Mudalige, Carlo\
    \ Bertolli, Michael B. Giles, Adam Betts, Paul H.J. Kelly, and David Radford.\
    \ 2016. Acceleration of a Full-Scale Industrial CFD Application with OP2. IEEE\
    \ Transactions on Parallel and Distributed Systems 27, 5 (2016), 1265--1278. Istv\xE1\
    n Z. Reguly, Gihan R. Mudalige, and Michael B. Giles. 2018. Loop Tiling in Large-Scale\
    \ Stencil Codes at Run-Time with OPS. IEEE Trans. Parallel Distributed Syst. 29,\
    \ 4 (2018), 873--886. G. Rodriguez-Canal, N. Brown, T. Dykes, J. Jones, and U.\
    \ Haus. 2023. Fortran High-Level Synthesis: Reducing the Barriers to Accelerating\
    \ HPC Codes on FPGAs. In 2023 33rd International Conference on Field-Programmable\
    \ Logic and Applications (FPL). IEEE Computer Society, Los Alamitos, CA, USA,\
    \ 10--18. Gabriel Rodriguez-Canal, Nick Brown, Maurice Jamieson, Emilien Bauer,\
    \ Anton Lydike, and Tobias Grosser. 2023. Stencil-HMLS: A multi-layered approach\
    \ to the automatic optimisation of stencil codes on FPGA. In Proceedings of the\
    \ SC '23 Workshops of The International Conference on High Performance Computing,\
    \ Network, Storage, and Analysis (SC-W '23). Association for Computing Machinery,\
    \ New York, NY, USA, 556--565. Science and Technology Facilities Council (STFC).\
    \ 2021. PSycloneBench: small benchmarks used to inform the development of the\
    \ PSyclone Domain-Specific Compiler. (2021). https://github.com/stfc/PSycloneBench\
    \ Accessed 2023-04-24. Ariya Shajii, Gabriel Ramirez, Haris Smajlovi\u0107, Jessica\
    \ Ray, Bonnie Berger, Saman Amarasinghe, and Ibrahim Numanagi\u0107. 2023. Codon:\
    \ A Compiler for High-Performance Pythonic Applications and DSLs. In Proceedings\
    \ of the 32nd ACM SIGPLAN International Conference on Compiler Construction (CC\
    \ 2023). ACM, New York, NY, USA, 191--202. Michel Steuwer, Christian Fensch, Sam\
    \ Lindley, and Christophe Dubach. 2015. Generating Performance Portable Code Using\
    \ Rewrite Rules: From High-Level Functional Expressions to High-Performance OpenCL\
    \ Code. SIGPLAN Not. 50, 9 (aug 2015), 205--217. Yuan Tang, Rezaul Alam Chowdhury,\
    \ Bradley C. Kuszmaul, Chi-Keung Luk, and Charles E. Leiserson. 2011. The Pochoir\
    \ Stencil Compiler. In Proceedings of the Twenty-third Annual ACM Symposium on\
    \ Parallelism in Algorithms and Architectures (SPAA '11). ACM, New York, NY, USA,\
    \ 117--128. Felix Thaler, Stefan Moosbrugger, Carlos Osuna, Mauro Bianco, Hannes\
    \ Vogt, Anton Afanasyev, Lukas Mosimann, Oliver Fuhrer, Thomas C. Schulthess,\
    \ and Torsten Hoefler. 2019. Porting the COSMO Weather Model to Manycore CPUs.\
    \ In Proceedings of the Platform for Advanced Scientific Computing Conference\
    \ (PASC '19). Association for Computing Machinery, New York, NY, USA, Article\
    \ 13, 11 pages. Arun Thangamani, Tiago Trevisan, Vincent Loechner, St\xE9phane\
    \ Genaud, and B\xE9renger Bramas. 2023. Lifting Code Generation of Cardiac Physiology\
    \ Simulation to Novel Compiler Technology. In 21st ACM/IEEE International Symposium\
    \ on Code Generation and Optimization (CGO'23). ACM, ACM, New York, NY, USA, 68--80.\
    \ Didem Unat, Xing Cai, and Scott B. Baden. 2011. Mint: Realizing CUDA Performance\
    \ in 3D Stencil Methods with Annotated C. In Proceedings of the International\
    \ Conference on Supercomputing (ICS '11). ACM, New York, NY, USA, 214--224. Hengjie\
    \ Wang and Aparna Chandramowlishwaran. 2020. Pencil: A Pipelined Algorithm for\
    \ Distributed Stencils. In SC20: International Conference for High Performance\
    \ Computing, Networking, Storage and Analysis. 1--16. Charles Yount, Josh Tobin,\
    \ Alexander Breuer, and Alejandro Duran. 2016. YASK - Yet Another Stencil Kernel:\
    \ A Framework for HPC Stencil Code-Generation and Tuning. In Sixth International\
    \ Workshop on Domain-Specific Languages and High-Level Frameworks for High Performance\
    \ Computing, WOLFHPC@SC 2016, Salt Lake, UT, USA, November 14, 2016. IEEE Computer\
    \ Society, 30--39. Junchao Zhang, Jed Brown, Satish Balay, Jacob Faibussowitsch,\
    \ Matthew Knepley, Oana Marin, Richard Tran Mills, Todd Munson, Barry F. Smith,\
    \ and Stefano Zampini. 2022. The PetscSF Scalable Communication Layer. IEEE Transactions\
    \ on Parallel and Distributed Systems 33, 4 (2022), 842--853. Tuowen Zhao, Mary\
    \ Hall, Hans Johansen, and Samuel Williams. 2021. Improving Communication by Optimizing\
    \ On-Node Data Movement with Data Layout. In Proceedings of the 26th ACM SIGPLAN\
    \ Symposium on Principles and Practice of Parallel Programming (PPoPP '21). Association\
    \ for Computing Machinery, New York, NY, USA, 304--317. Tuowen Zhao, Samuel Williams,\
    \ Mary Hall, and Hans Johansen. 2018. Delivering Performance-Portable Stencil\
    \ Computations on CPUs and GPUs Using Bricks. In 2018 IEEE/ACM International Workshop\
    \ on Performance, Portability and Productivity in HPC (P3HPC). 59--70. Alexandros\
    \ Nikolaos Ziogas, Timo Schneider, Tal Ben-Nun, Alexandru Calotoiu, Tiziano De\
    \ Matteis, Johannes de Fine Licht, Luca Lavarini, and Torsten Hoefler. 2021. Productivity,\
    \ Portability, Performance: Data-Centric Python. In Proceedings of the International\
    \ Conference for High Performance Computing, Networking, Storage and Analysis\
    \ (SC '21). Association for Computing Machinery, New York, NY, USA, Article 95,\
    \ 13 pages."
  title: A shared compilation stack for distributed-memory parallelism in stencil
    DSLs
  url: https://dl.acm.org/doi/10.1145/3620666.3651344
- abstract: "Zero-knowledge proof is a cryptographic primitive that allows for the\
    \ validation of statements without disclosing any sensitive information, foundational\
    \ in applications like verifiable outsourcing and digital currency. However, the\
    \ extensive proof generation time limits its widespread adoption. Even with GPU\
    \ acceleration, proof generation can still take minutes, with Multi-Scalar Multiplication\
    \ (MSM) accounting for about 78.2% of the workload. To address this, we present\
    \ DistMSM, a novel MSM algorithm tailored for distributed multi-GPU systems. At\
    \ the algorithmic level, DistMSM adapts Pippenger's algorithm for multi-GPU setups,\
    \ effectively identifying and addressing bottlenecks that emerge during scaling.\
    \ At the GPU kernel level, DistMSM introduces an elliptic curve arithmetic kernel\
    \ tailored for contemporary GPU architectures. It optimizes register pressure\
    \ with two innovative techniques and leverages tensor cores for specific big integer\
    \ multiplications. Compared to state-of-the-art MSM implementations, DistMSM offers\
    \ an average 6.39\xD7 speedup across various elliptic curves and GPU counts. An\
    \ MSM task that previously took seconds on a single GPU can now be completed in\
    \ mere tens of milliseconds. It showcases the substantial potential and efficiency\
    \ of distributed multi-GPU systems in ZKP acceleration."
  keywords: Computing methodologies Parallel computing methodologies Parallel algorithms
    Massively parallel algorithms Security and privacy
  references: "Inc Advanced Micro Devices. Amd rocm open software platform. https://rocm.docs.amd.com,\
    \ 2023. Sebastian Angel, Andrew J Blumberg, Eleftherios Ioannidis, and Jess Woods.\
    \ Efficient representation of numerical optimization problems for snarks. In 31st\
    \ USENIX Security Symposium, 2022. Samuel Antao, Jean-Claude Bajard, and Leonel\
    \ Sousa. Elliptic curve point multiplication on gpus. In ASAP 2010-21st IEEE International\
    \ Conference on Application-specific Systems, Architectures and Processors, pages\
    \ 192--199. IEEE, 2010. Gautam Botrel and Youssef El Housni. Faster montgomery\
    \ multiplication and multi-scalar-multiplication for snarks. 2023. Henri Cohen,\
    \ Atsuko Miyaji, and Takatoshi Ono. Efficient elliptic curve exponentiation using\
    \ mixed coordinates. In Advances in Cryptology---ASIACRYPT'98: International Conference\
    \ on the Theory and Application of Cryptology and Information Security Beijing,\
    \ China, October 18--22, 1998 Proceedings, pages 51--65. Springer, 1998. ZCash\
    \ Crop. Zcash is cash for the new age. https://z.cash, 2023. Cysic. Hardware accelerating\
    \ zero-knowledge proofs. http://cysic.xyz, 2023. George Danezis, Cedric Fournet,\
    \ Markulf Kohlweiss, and Bryan Parno. Pinocchio coin: building zerocoin from a\
    \ succinct pairing-based proof system. In First ACM workshop on Language support\
    \ for privacy-enhancing technologies, pages 27--30, 2013. Marwa Elteir, Heshan\
    \ Lin, and Wu-chun Feng. Performance characterization and optimization of atomic\
    \ operations on amd gpus. In 2011 IEEE International Conference on Cluster Computing,\
    \ 2011. Boyuan Feng, Lianke Qin, Zhenfei Zhang, Yufei Ding, and Shumo Chu. Zen:\
    \ An optimizing compiler for verifiable, zero-knowledge neural network inferences.\
    \ Cryptology ePrint Archive, 2021. Filecoin. bellperson: Gpu parallel acceleration\
    \ for zk-snark. https://github.com/filecoin-project/bellperson, 2023. Mina Foundation.\
    \ Gpu groth16 prover (3x faster than cpu). https://github.com/MinaProtocol/gpu-groth16-prover-3x,\
    \ 2023. Hisham S Galal and Amr M Youssef. Verifiable sealed-bid auction on the\
    \ ethereum blockchain. In Financial Cryptography and Data Security: FC 2018 International\
    \ Workshops, pages 265--278. Springer, 2019. Lili Gao, Fangyu Zheng, Niall Emmart,\
    \ Jiankuo Dong, Jingqiang Lin, and Charles Weems. Dpf-ecc: accelerating elliptic\
    \ curve cryptography with floating-point computing power of gpus. In 2020 IEEE\
    \ International Parallel and Distributed Processing Symposium, 2020. Craig Gentry\
    \ and Daniel Wichs. Separating succinct non-interactive arguments from all falsifiable\
    \ assumptions. In 43th annual ACM symposium on Theory of computing, pages 99--108,\
    \ 2011. Oded Goldreich and Hugo Krawczyk. On the composition of zero-knowledge\
    \ proof systems. SIAM Journal on Computing, 25(1):169--192, 1996. Shafi Goldwasser,\
    \ Silvio Micali, and Charles Rackoff. The knowledge complexity of interactive\
    \ proof systems. SIAM J. COMPUT, 18(1):186--208, 1989. Yinjie Gong, Yifei Jin,\
    \ Yuchan Li, Ziyi Liu, and Zhiyi Zhu. Analysis and comparison of the main zero-knowledge\
    \ proof scheme. In 2022 International Conference on Big Data, Information and\
    \ Computer Network, pages 366--372. IEEE, 2022. Jens Groth. Non-interactive zero-knowledge\
    \ arguments for voting. In Applied Cryptography and Network Security: Third International\
    \ Conference, pages 467--482. Springer, 2005. Jens Groth. On the size of pairing-based\
    \ non-interactive arguments. In 35th Annual International Conference on the Theory\
    \ and Applications of Cryptographic Techniques, pages 305--326. Springer, 2016.\
    \ Icicle. a gpu library for zero-knowledge acceleration. https://github.com/ingonyama-zk/icicle,\
    \ 2023. Immutable. Immutable x: powering the next generation of web3 games. https://www.immutable.com/products/immutable-x,\
    \ 2023. C Kaya Koc, Tolga Acar, and Burton S Kaliski. Analyzing and comparing\
    \ montgomery multiplication algorithms. IEEE, 1996. Karl Leboeuf, Roberto Muscedere,\
    \ and Majid Ahmadi. A gpu implementation of the montgomery multiplication algorithm\
    \ for elliptic curve cryptography. In 2013 IEEE International Symposium on Circuits\
    \ and Systems, pages 2593--2596. IEEE, 2013. Honglei Li and Weilian Xue. A blockchain-based\
    \ sealed-bid e-auction scheme with smart contract and zero-knowledge proof. Security\
    \ and Communication Networks, 2021:1--10, 2021. Shigang Li, Kazuki Osawa, and\
    \ Torsten Hoefler. Efficient quantized sparse matrix operations on tensor cores.\
    \ In SC22: International Conference for High Performance Computing, Networking,\
    \ Storage and Analysis, pages 1--15. IEEE, 2022. Supranational LLC. Zero-knowledge\
    \ template library. https://github.com/supranational/sppark, 2023. Loopring. zkrollup\
    \ layer 2 for trading and payment. https://loopring.org, 2023. Tao Lu, Chengkun\
    \ Wei, Ruijing Yu, Chaochao Chen, Wenjing Fang, Lei Wang, Zeke Wang, and Wenzhi\
    \ Chen. Cuzk: Accelerating zero-knowledge proof with a faster parallel multi-scalar\
    \ multiplication algorithm on gpus. Cryptology ePrint Archive, 2022. Weiliang\
    \ Ma, Qian Xiong, Xuanhua Shi, Xiaosong Ma, Hai Jin, Haozhao Kuang, Mingyu Gao,\
    \ Ye Zhang, Haichen Shen, and Weifang Hu. Gzkp: A gpu accelerated zero-knowledge\
    \ proof system. In 28th ACM International Conference on Architectural Support\
    \ for Programming Languages and Operating Systems, Volume 2, 2023. Peter L Montgomery.\
    \ Modular multiplication without trial division. Mathematics of computation, 44(170):519--521,\
    \ 1985. Steven Muchnick. Advanced compiler design implementation. Morgan kaufmann,\
    \ 1997. Ning Ni and Yongxin Zhu. Enabling zero knowledge proof by accelerating\
    \ zk-snark kernels on gpu. Journal of Parallel and Distributed Computing, 173:20--31,\
    \ 2023. NVIDIA. Nvidia a100 tensor core gpu architecture. https://images.nvidia.com/aem-dam/en-zz/Solutions/data-center/nvidia-ampere-architecture-whitepaper.pdf,\
    \ 2020. Wuqiong Pan, Fangyu Zheng, Yuan Zhao, Wen-Tao Zhu, and Jiwu Jing. An efficient\
    \ elliptic curve cryptography signature server with gpu acceleration. IEEE Transactions\
    \ on Information Forensics and Security, 12(1):111--122, 2016. Andy Ray, Ben Devlin,\
    \ Fu Yong Quah, and Rahul Yesantharao. High performance, open source cryptographic\
    \ solutions for large scale number theoretic transforms and multi-scalar multiplications\
    \ in hardcaml. https://github.com/fyquah/hardcaml_zprize, 2023. Nicolae Ro\u015F\
    ia, Virgil Cervicescu, and Mihai Togan. Efficient montgomery multiplication on\
    \ gpus. In International Conference for Information Technology and Communications.\
    \ Springer, 2015. Howard Wu, Wenting Zheng, Alessandro Chiesa, Raluca Ada Popa,\
    \ and Ion Stoica. {DIZK}: A distributed zero knowledge proof system. In 27th USENIX\
    \ Security Symposium, pages 675--692, 2018. Yrrid. https://www.yrrid.com, 2023.\
    \ Ye Zhang, Shuo Wang, Xian Zhang, Jiangbin Dong, Xingzhong Mao, Fan Long, Cong\
    \ Wang, Dong Zhou, Mingyu Gao, and Guangyu Sun. Pipezk: Accelerating zero-knowledge\
    \ proof with a pipelined architecture. In 2021 ACM/IEEE 48th Annual International\
    \ Symposium on Computer Architecture, pages 416--428. IEEE, 2021. Yupeng Zhang,\
    \ Daniel Genkin, Jonathan Katz, Dimitrios Papadopoulos, and Charalampos Papamanthou.\
    \ vsql: Verifying arbitrary sql queries over dynamic outsourced databases. In\
    \ 2017 IEEE Symposium on Security and Privacy, pages 863--880. IEEE, 2017. Kaiyong\
    \ Zhao. Implementation of multiple-precision modular multiplication on gpu. In\
    \ GPU Technology Conference, 2009. Zprize. Accelerating the future of zero knowledge\
    \ cryptography. https://www.zprize.io, 2023."
  title: Accelerating Multi-Scalar Multiplication for Efficient Zero Knowledge Proofs
    with Multi-GPU Systems
  url: https://dl.acm.org/doi/10.1145/3620666.3651364
- abstract: "Sparse matrix-matrix multiplication (SpMM) is a critical computational\
    \ kernel in numerous scientific and machine learning applications. SpMM involves\
    \ massive irregular memory accesses and poses great challenges to conventional\
    \ cache-based computer architectures. Recently dedicated SpMM accelerators have\
    \ been proposed to enhance SpMM performance. However, current SpMM accelerators\
    \ still face challenges in adapting to varied sparse patterns, fully exploiting\
    \ inherent parallelism, and optimizing cache performance. To address these issues,\
    \ we introduce ACES, a novel SpMM accelerator in this study. First, ACES features\
    \ an adaptive execution flow that dynamically adjusts to diverse sparse patterns.\
    \ The adaptive execution flow balances parallel computing efficiency and data\
    \ reuse. Second, ACES incorporates locality-concurrency co-optimizations within\
    \ the global cache. ACES utilizes a concurrency-aware cache management policy,\
    \ which considers data locality and concurrency for optimal replacement decisions.\
    \ Additionally, the integration of a non-blocking buffer with the global cache\
    \ enhances concurrency and reduces computational stalls. Third, the hardware architecture\
    \ of ACES is designed to integrate all innovations. The architecture ensures efficient\
    \ support across the adaptive execution flow, advanced cache optimizations, and\
    \ fine-grained parallel processing. Our performance evaluation demonstrates that\
    \ ACES significantly outperforms existing solutions, providing a 2.1\xD7 speedup\
    \ and marking a substantial advancement in SpMM acceleration."
  keywords: ''
  references: "Amit Agarwal, Kaushik Roy, and TN Vijaykumar. Exploring high bandwidth\
    \ pipelined cache architecture for scaled technology. In Proceedings of the conference\
    \ on Design, Automation and Test in Europe-Volume 1, page 10778. IEEE Computer\
    \ Society, 2003. Mikhail Asiatici and Paolo Ienne. Stop crying over your cache\
    \ miss rate: Handling efficiently thousands of outstanding misses in fpgas. In\
    \ Proceedings of the 2019 ACM/SIGDA International Symposium on Field-Programmable\
    \ Gate Arrays, pages 310--319, 2019. Rajeev Balasubramonian, Andrew B Kahng, Naveen\
    \ Muralimanohar, Ali Shafiee, and Vaishnav Srinivas. CACTI 7: New tools for interconnect\
    \ exploration in innovative off-chip memories. ACM Transactions on Architecture\
    \ and Code Optimization (TACO), 14(2):1--25, 2017. Laszlo A. Belady. A study of\
    \ replacement algorithms for a virtual-storage computer. IBM Systems journal,\
    \ 5(2):78--101, 1966. Maciej Besta, Florian Marending, Edgar Solomonik, and Torsten\
    \ Hoefler. Slimsell: A vectorizable graph representation for breadth-first search.\
    \ In 2017 IEEE International Parallel and Distributed Processing Symposium (IPDPS),\
    \ pages 32--41. IEEE, 2017. Aydin Bulu\xE7 and Kamesh Madduri. Parallel breadth-first\
    \ search on distributed memory systems. In Proceedings of 2011 International Conference\
    \ for High Performance Computing, Networking, Storage and Analysis, pages 1--12,\
    \ 2011. Andrew Canning, Giulia Galli, Francesco Mauri, Alessandro De Vita, and\
    \ Roberto Car. O (n) tight-binding molecular dynamics on massively parallel computers:\
    \ an orbital decomposition approach. Computer Physics Communications, 94(2-3):89--102,\
    \ 1996. Timothy M Chan. More algorithms for all-pairs shortest paths in weighted\
    \ graphs. In Proceedings of the thirty-ninth annual ACM symposium on Theory of\
    \ computing, pages 590--598, 2007. Steven Dalton, Nathan Bell, Luke Olson, and\
    \ Michael Garland. Cusp: Generic parallel algorithms for sparse matrix and graph\
    \ computations, 2014. Steven Dalton, Luke Olson, and Nathan Bell. Optimizing sparse\
    \ matrix---matrix multiplication for the gpu. ACM Transactions on Mathematical\
    \ Software (TOMS), 41(4):1--20, 2015. Saptarsi Das, Arnab Roy, Kiran Kolar Chandrasekharan,\
    \ Ankur Deshwal, and Sehwan Lee. A systolic dataflow based accelerator for CNNs.\
    \ In 2020 IEEE International Symposium on Circuits and Systems (ISCAS), pages\
    \ 1--5. IEEE, 2020. Timothy A Davis and Yifan Hu. The University of Florida sparse\
    \ matrix collection. ACM Transactions on Mathematical Software (TOMS), 38(1):1--25,\
    \ 2011. Chunhua Deng, Siyu Liao, Yi Xie, Keshab K Parhi, Xuehai Qian, and Bo Yuan.\
    \ PermDNN: Efficient compressed DNN architecture with permuted diagonal matrices.\
    \ In 2018 51st Annual IEEE/ACM international symposium on microarchitecture (MICRO),\
    \ pages 189--202. IEEE, 2018. Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina\
    \ Toutanova. Bert: Pre-training of deep bidirectional transformers for language\
    \ understanding. arXiv preprint arXiv:1810.04805, 2018. Jianhua Gao, Weixing Ji,\
    \ Fangli Chang, Shiyu Han, Bingxin Wei, Zeming Liu, and Yizhuo Wang. A systematic\
    \ survey of general sparse matrix-matrix multiplication. ACM Computing Surveys,\
    \ 55(12):1--36, 2023. Hasan Genc, Seah Kim, Alon Amid, Ameer Haj-Ali, Vighnesh\
    \ Iyer, Pranav Prakash, Jerry Zhao, Daniel Grubb, Harrison Liew, Howard Mao, et\
    \ al. Gemmini: Enabling systematic deep-learning architecture evaluation via full-stack\
    \ integration. In 2021 58th ACM/IEEE Design Automation Conference (DAC), pages\
    \ 769--774. IEEE, 2021. Gerasimos Gerogiannis, Serif Yesil, Damitha Lenadora,\
    \ Dingyuan Cao, Charith Mendis, and Josep Torrellas. SPADE: A Flexible and Scalable\
    \ Accelerator for SpMM and SDDMM. In Proceedings of the 50th Annual International\
    \ Symposium on Computer Architecture, pages 1--15, 2023. Sumanth Gudaparthi, Sarabjeet\
    \ Singh, Surya Narayanan, Rajeev Balasubramonian, and Visvesh Sathe. CANDLES:\
    \ Channel-aware novel dataflow-microarchitecture co-design for low energy sparse\
    \ neural network acceleration. In 2022 IEEE International Symposium on high-performance\
    \ computer architecture (HPCA), pages 876--891. IEEE, 2022. Song Han, Xingyu Liu,\
    \ Huizi Mao, Jing Pu, Ardavan Pedram, Mark A Horowitz, and William J Dally. EIE:\
    \ Efficient inference engine on compressed deep neural network. ACM SIGARCH Computer\
    \ Architecture News, 44(3):243--254, 2016. Song Han, Huizi Mao, and William J\
    \ Dally. Deep compression: Compressing deep neural networks with pruning, trained\
    \ quantization and huffman coding. arXiv preprint arXiv:1510.00149, 2015. Xin\
    \ He, Subhankar Pal, Aporva Amarnath, Siying Feng, Dong-Hyeon Park, Austin Rovinski,\
    \ Haojie Ye, Yuhan Chen, Ronald Dreslinski, and Trevor Mudge. Sparse-TPU: Adapting\
    \ systolic arrays for sparse matrices. In Proceedings of the 34th ACM international\
    \ conference on supercomputing, pages 1--12, 2020. Kartik Hegde, Hadi Asghari-Moghaddam,\
    \ Michael Pellauer, Neal Crago, Aamer Jaleel, Edgar Solomonik, Joel Emer, and\
    \ Christopher W Fletcher. Extensor: An accelerator for sparse tensor algebra.\
    \ In Proceedings of the 52nd Annual IEEE/ACM International Symposium on Microarchitecture,\
    \ pages 319--333, 2019. John L Hennessy and David A Patterson. Computer Architecture:\
    \ A Quantitative Approach. Elsevier, 2019. Torsten Hoefler and Marc Snir. Generic\
    \ topology mapping strategies for large-scale parallel architectures. In Proceedings\
    \ of the international conference on Supercomputing, pages 75--84, 2011. Reza\
    \ Hojabr, Ali Sedaghati, Amirali Sharifian, Ahmad Khonsari, and Arrvindh Shriraman.\
    \ Spaghetti: Streaming accelerators for highly sparse gemm on fpgas. In 2021 IEEE\
    \ International Symposium on High-Performance Computer Architecture (HPCA), pages\
    \ 84--96. IEEE, 2021. David A Huffman. A method for the construction of minimum-redundancy\
    \ codes. Proceedings of the IRE, 40(9):1098--1101, 1952. Norman P Jouppi, Cliff\
    \ Young, Nishant Patil, David Patterson, Gaurav Agrawal, Raminder Bajwa, Sarah\
    \ Bates, Suresh Bhatia, Nan Boden, Al Borchers, et al. In-datacenter performance\
    \ analysis of a tensor processing unit. In Proceedings of the 44th annual international\
    \ symposium on computer architecture, pages 1--12, 2017. David Kroft. Lockup-free\
    \ instruction fetch/prefetch cache organization. In Proceedings of the 8th annual\
    \ symposium on Computer Architecture, pages 81--87. IEEE Computer Society Press,\
    \ 1981. David Kroft. Lockup-free instruction fetch/prefetch cache organization.\
    \ In 25 years of the international symposia on Computer architecture (selected\
    \ papers), pages 195--201, 1998. HT Kung, Bradley McDanel, and Sai Qian Zhang.\
    \ Packing sparse convolutional neural networks for efficient systolic array implementations:\
    \ Column combining under joint optimization. In Proceedings of the Twenty-Fourth\
    \ International Conference on Architectural Support for Programming Languages\
    \ and Operating Systems, pages 821--834, 2019. Shuangchen Li, Dimin Niu, Krishna\
    \ T Malladi, Hongzhong Zheng, Bob Brennan, and Yuan Xie. Drisa: A dram-based reconfigurable\
    \ in-situ accelerator. In Proceedings of the 50th Annual IEEE/ACM International\
    \ Symposium on Microarchitecture, pages 288--301, 2017. Zhiyao Li, Jiaxiang Li,\
    \ Taijie Chen, Dimin Niu, Hongzhong Zheng, Yuan Xie, and Mingyu Gao. Spada: Accelerating\
    \ Sparse Matrix Multiplication with Adaptive Dataflow. In Proceedings of the 28th\
    \ ACM International Conference on Architectural Support for Programming Languages\
    \ and Operating Systems, Volume 2, pages 747--761, 2023. Baoyuan Liu, Min Wang,\
    \ Hassan Foroosh, Marshall Tappen, and Marianna Pensky. Sparse convolutional neural\
    \ networks. In Proceedings of the IEEE conference on computer vision and pattern\
    \ recognition, pages 806--814, 2015. Weifeng Liu and Brian Vinter. An efficient\
    \ GPU general sparse matrix-matrix multiplication for irregular data. In 2014\
    \ IEEE 28th International Parallel and Distributed Processing Symposium, pages\
    \ 370--381. IEEE, 2014. Xiaoyang Lu, Hamed Najafi, Jason Liu, and Xian-He Sun.\
    \ CHROME: Concurrency-aware holistic cache management framework with online reinforcement\
    \ learning. In 2024 IEEE International Symposium on High-Performance Computer\
    \ Architecture (HPCA). IEEE, 2024. Xiaoyang Lu, Rujia Wang, and Xian-He Sun. Apac:\
    \ An accurate and adaptive prefetch framework with concurrent memory access analysis.\
    \ In 2020 IEEE 38th International Conference on Computer Design (ICCD), pages\
    \ 222--229. IEEE, 2020. Xiaoyang Lu, Rujia Wang, and Xian-He Sun. Premier: A concurrency-aware\
    \ pseudo-partitioning framework for shared last-level cache. In 2021 IEEE 39th\
    \ International Conference on Computer Design (ICCD), pages 391--394. IEEE, 2021.\
    \ Xiaoyang Lu, Rujia Wang, and Xian-He Sun. CARE: A concurrency-aware enhanced\
    \ lightweight cache management framework. In 2023 IEEE International Symposium\
    \ on High-Performance Computer Architecture (HPCA), pages 1208--1220. IEEE, 2023.\
    \ Francisco Mu\xF1oz-Mart\xEDnez, Raveesh Garg, Michael Pellauer, Jos\xE9 L Abell\xE1\
    n, Manuel E Acacio, and Tushar Krishna. Flexagon: A Multi-Dataflow Sparse-Sparse\
    \ Matrix Multiplication Accelerator for Efficient DNN Processing. In Proceedings\
    \ of the 28th ACM International Conference on Architectural Support for Programming\
    \ Languages and Operating Systems, Volume 3, pages 252--265, 2023. Hamed Najafi,\
    \ Jason Liu, Xiaoyang Lu, and Xian-He Sun. A generalized model for modern hierarchical\
    \ memory system. In 2022 Winter Simulation Conference (WSC), pages 2178--2188.\
    \ IEEE, 2022. Maxim Naumov, L Chien, Philippe Vandermersch, and Ujval Kapasi.\
    \ Cusparse library. In GPU Technology Conference, 2010. Maxim Naumov, Dheevatsa\
    \ Mudigere, Hao-Jun Michael Shi, Jianyu Huang, Narayanan Sundaraman, Jongsoo Park,\
    \ Xiaodong Wang, Udit Gupta, Carole-Jean Wu, Alisson G Azzolini, et al. Deep learning\
    \ recommendation model for personalization and recommendation systems. arXiv preprint\
    \ arXiv:1906.00091, 2019. Subhankar Pal, Jonathan Beaumont, Dong-Hyeon Park, Aporva\
    \ Amarnath, Siying Feng, Chaitali Chakrabarti, Hun-Seok Kim, David Blaauw, Trevor\
    \ Mudge, and Ronald Dreslinski. Outerspace: An outer product based sparse matrix\
    \ multiplication accelerator. In 2018 IEEE International Symposium on High Performance\
    \ Computer Architecture (HPCA), pages 724--736. IEEE, 2018. Cosmin G Petra, Olaf\
    \ Schenk, Miles Lubin, and Klaus G\xE4rtner. An augmented incomplete factorization\
    \ approach for computing the Schur complement in stochastic optimization. SIAM\
    \ Journal on Scientific Computing, 36(2):C139--C162, 2014. Eric Qin, Ananda Samajdar,\
    \ Hyoukjun Kwon, Vineet Nadella, Sudarshan Srinivasan, Dipankar Das, Bharat Kaul,\
    \ and Tushar Krishna. Sigma: A sparse and irregular gemm accelerator with flexible\
    \ interconnects for dnn training. In 2020 IEEE International Symposium on High\
    \ Performance Computer Architecture (HPCA), pages 58--70. IEEE, 2020. Moinuddin\
    \ K Qureshi, Daniel N Lynch, Onur Mutlu, and Yale N Patt. A case for MLP-aware\
    \ cache replacement. ACM SIGARCH Computer Architecture News, 34(2):167--178, 2006.\
    \ Raimund Seidel. On the all-pairs-shortest-path problem in unweighted undirected\
    \ graphs. Journal of computer and system sciences, 51(3):400--403, 1995. Korey\
    \ Sewell, Ronald G Dreslinski, Thomas Manville, Sudhir Satpathy, Nathaniel Pinckney,\
    \ Geoffrey Blake, Michael Cieslak, Reetuparna Das, Thomas F Wenisch, Dennis Sylvester,\
    \ et al. Swizzle-switch networks for many-core systems. IEEE Journal on Emerging\
    \ and Selected Topics in Circuits and Systems, 2(2):278--294, 2012. Yakun Sophia\
    \ Shao, Jason Clemons, Rangharajan Venkatesan, Brian Zimmer, Matthew Fojtik, Nan\
    \ Jiang, Ben Keller, Alicia Klinefelter, Nathaniel Pinckney, Priyanka Raina, et\
    \ al. Simba: Scaling deep-learning inference with multi-chip-module-based architecture.\
    \ In Proceedings of the 52nd Annual IEEE/ACM International Symposium on Microarchitecture,\
    \ pages 14--27, 2019. Nitish Srivastava, Hanchen Jin, Jie Liu, David Albonesi,\
    \ and Zhiru Zhang. Matraptor: A sparse-sparse matrix multiplication accelerator\
    \ based on row-wise product. In 2020 53rd Annual IEEE/ACM International Symposium\
    \ on Microarchitecture (MICRO), pages 766--780. IEEE, 2020. Xian-He Sun and Xiaoyang\
    \ Lu. The Memory-Bounded Speedup Model and Its Impacts in Computing. Journal of\
    \ Computer Science and Technology, 38(1):64--79, 2023. Xian-He Sun and Dawei Wang.\
    \ Concurrent average memory access time. Computer, 47(5):74--80, 2013. Robert\
    \ M Tomasulo. An efficient algorithm for exploiting multiple arithmetic units.\
    \ IBM Journal of research and Development, 11(1):25--33, 1967. Dean M Tullsen,\
    \ Susan J Eggers, and Henry M Levy. Simultaneous multithreading: Maximizing on-chip\
    \ parallelism. In ACM SIGARCH Computer Architecture News, volume 23, pages 392--403.\
    \ ACM, 1995. Endong Wang, Qing Zhang, Bo Shen, Guangyong Zhang, Xiaowei Lu, Qing\
    \ Wu, and Yajuan Wang. High-performance computing on the intel xeon phi. Springer,\
    \ 5:2, 2014. Rui Xu, Sheng Ma, Yaohua Wang, Xinhai Chen, and Yang Guo. Configurable\
    \ multi-directional systolic array architecture for convolutional neural networks.\
    \ ACM Transactions on Architecture and Code Optimization (TACO), 18(4):1--24,\
    \ 2021. Ichitaro Yamazaki and Xiaoye S Li. On techniques to improve robustness\
    \ and scalability of a parallel hybrid linear solver. In International Conference\
    \ on High Performance Computing for Computational Science, pages 421--434. Springer,\
    \ 2010. Liang Yan, Mingzhe Zhang, Rujia Wang, Xiaoming Chen, Xingqi Zou, Xiaoyang\
    \ Lu, Yinhe Han, and Xian-He Sun. Copim: a concurrency-aware pim workload offloading\
    \ architecture for graph applications. In 2021 IEEE/ACM International Symposium\
    \ on Low Power Electronics and Design (ISLPED), pages 1--6. IEEE, 2021. Raphael\
    \ Yuster and Uri Zwick. Detecting short directed cycles using rectangular matrix\
    \ multiplication and dynamic programming. In SODA, volume 4, pages 254--260. Citeseer,\
    \ 2004. Guowei Zhang, Nithya Attaluri, Joel S Emer, and Daniel Sanchez. Gamma:\
    \ Leveraging Gustavson's algorithm to accelerate sparse matrix multiplication.\
    \ In Proceedings of the 26th ACM International Conference on Architectural Support\
    \ for Programming Languages and Operating Systems, pages 687--701, 2021. Zhekai\
    \ Zhang, Hanrui Wang, Song Han, and William J Dally. Sparch: Efficient architecture\
    \ for sparse matrix multiplication. In 2020 IEEE International Symposium on High\
    \ Performance Computer Architecture (HPCA), pages 261--274. IEEE, 2020. Xuda Zhou,\
    \ Zidong Du, Qi Guo, Shaoli Liu, Chengsi Liu, Chao Wang, Xuehai Zhou, Ling Li,\
    \ Tianshi Chen, and Yunji Chen. Cambricon-S: Addressing irregularity in sparse\
    \ neural networks through a cooperative software/hardware approach. In 2018 51st\
    \ Annual IEEE/ACM International Symposium on Microarchitecture (MICRO), pages\
    \ 15--28. IEEE, 2018. Zhaomin Zhu, Koh Johguchi, Hans J\xFCrgen Mattausch, Tetsushi\
    \ Koide, Tai Hirakawa, and Tetsuo Hironaka. A novel hierarchical multi-port cache.\
    \ In Solid-State Circuits Conference, 2003. ESSCIRC'03. Proceedings of the 29th\
    \ European, pages 405--408. IEEE, 2003."
  title: 'ACES: Accelerating Sparse Matrix Multiplication with Adaptive Execution
    Flow and Concurrency-Aware Cache Optimizations'
  url: https://dl.acm.org/doi/10.1145/3620666.3651381
- abstract: Large language models (LLMs) have demonstrated powerful capabilities,
    requiring huge memory with their increasing sizes and sequence lengths, thus demanding
    larger parallel systems. The broadly adopted pipeline parallelism introduces even
    heavier and unbalanced memory consumption. Recomputation is a widely employed
    technique to mitigate the problem but introduces extra computation overhead.
  keywords: ''
  references: "Olivier Beaumont, Lionel Eyraud-Dubois, Julien Herrmann, Alexis Joly,\
    \ and Alena Shilova. Optimal checkpointing for heterogeneous chains: how to train\
    \ deep neural networks with limited memory. CoRR, abs/1911.13214, 2019. Olivier\
    \ Beaumont, Lionel Eyraud-Dubois, and Alena Shilova. Efficient combination of\
    \ rematerialization and offloading for training dnns. In Marc'Aurelio Ranzato,\
    \ Alina Beygelzimer, Yann N. Dauphin, Percy Liang, and Jennifer Wortman Vaughan,\
    \ editors, Advances in Neural Information Processing Systems 34: Annual Conference\
    \ on Neural Information Processing Systems 2021, NeurIPS 2021, December 6-14,\
    \ 2021, virtual, pages 23844--23857, 2021. Tom B. Brown, Benjamin Mann, Nick Ryder,\
    \ Melanie Subbiah, Jared Kaplan, Prafulla Dhariwal, Arvind Neelakantan, Pranav\
    \ Shyam, Girish Sastry, Amanda Askell, Sandhini Agarwal, Ariel Herbert-Voss, Gretchen\
    \ Krueger, Tom Henighan, Rewon Child, Aditya Ramesh, Daniel M. Ziegler, Jeffrey\
    \ Wu, Clemens Winter, Christopher Hesse, Mark Chen, Eric Sigler, Mateusz Litwin,\
    \ Scott Gray, Benjamin Chess, Jack Clark, Christopher Berner, Sam McCandlish,\
    \ Alec Radford, Ilya Sutskever, and Dario Amodei. Language models are few-shot\
    \ learners. In Hugo Larochelle, Marc'Aurelio Ranzato, Raia Hadsell, Maria-Florina\
    \ Balcan, and Hsuan-Tien Lin, editors, Advances in Neural Information Processing\
    \ Systems 33: Annual Conference on Neural Information Processing Systems 2020,\
    \ NeurIPS 2020, December 6-12, 2020, virtual, 2020. Shouyuan Chen, Sherman Wong,\
    \ Liangjian Chen, and Yuandong Tian. Extending context window of large language\
    \ models via positional interpolation, 2023. Tianqi Chen, Bing Xu, Chiyuan Zhang,\
    \ and Carlos Guestrin. Training deep nets with sublinear memory cost. CoRR, abs/1604.06174,\
    \ 2016. Tri Dao, Daniel Y. Fu, Stefano Ermon, Atri Rudra, and Christopher R\xE9\
    . Flashattention: Fast and memory-efficient exact attention with io-awareness,\
    \ 2022. Mostafa Dehghani, Josip Djolonga, Basil Mustafa, Piotr Padlewski, Jonathan\
    \ Heek, Justin Gilmer, Andreas Steiner, Mathilde Caron, Robert Geirhos, Ibrahim\
    \ Alabdulmohsin, Rodolphe Jenatton, Lucas Beyer, Michael Tschannen, Anurag Arnab,\
    \ Xiao Wang, Carlos Riquelme, Matthias Minderer, Joan Puigcerver, Utku Evci, Manoj\
    \ Kumar, Sjoerd van Steenkiste, Gamaleldin F. Elsayed, Aravindh Mahendran, Fisher\
    \ Yu, Avital Oliver, Fantine Huot, Jasmijn Bastings, Mark Patrick Collier, Alexey\
    \ A. Gritsenko, Vighnesh Birodkar, Cristina Vasconcelos, Yi Tay, Thomas Mensink,\
    \ Alexander Kolesnikov, Filip Pavetic, Dustin Tran, Thomas Kipf, Mario Lucic,\
    \ Xiaohua Zhai, Daniel Keysers, Jeremiah Harmsen, and Neil Houlsby. Scaling vision\
    \ transformers to 22 billion parameters. CoRR, abs/2302.05442, 2023. Jacob Devlin,\
    \ Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. BERT: pre-training of deep\
    \ bidirectional transformers for language understanding. In Jill Burstein, Christy\
    \ Doran, and Thamar Solorio, editors, Proceedings of the 2019 Conference of the\
    \ North American Chapter of the Association for Computational Linguistics: Human\
    \ Language Technologies, NAACL-HLT 2019, Minneapolis, MN, USA, June 2-7, 2019,\
    \ Volume 1 (Long and Short Papers), pages 4171--4186. Association for Computational\
    \ Linguistics, 2019. Shiqing Fan, Yi Rong, Chen Meng, Zongyan Cao, Siyu Wang,\
    \ Zhen Zheng, Chuan Wu, Guoping Long, Jun Yang, Lixue Xia, Lansong Diao, Xiaoyong\
    \ Liu, and Wei Lin. DAPPLE: a pipelined data parallel approach for training large\
    \ models. In Jaejin Lee and Erez Petrank, editors, PPoPP '21: 26th ACM SIGPLAN\
    \ Symposium on Principles and Practice of Parallel Programming, Virtual Event,\
    \ Republic of Korea, February 27- March 3, 2021, pages 431--445. ACM, 2021. William\
    \ Fedus, Barret Zoph, and Noam Shazeer. Switch transformers: Scaling to trillion\
    \ parameter models with simple and efficient sparsity. J. Mach. Learn. Res., 23:120:1--120:39,\
    \ 2022. Xu Han, Zhengyan Zhang, Ning Ding, Yuxian Gu, Xiao Liu, Yuqi Huo, Jiezhong\
    \ Qiu, Liang Zhang, Wentao Han, Minlie Huang, et al. Pretrained models: Past,\
    \ present and future. AI Open, 2021. Aaron Harlap, Deepak Narayanan, Amar Phanishayee,\
    \ Vivek Seshadri, Nikhil R. Devanur, Gregory R. Ganger, and Phillip B. Gibbons.\
    \ Pipedream: Fast and efficient pipeline parallel DNN training. CoRR, abs/1806.03377,\
    \ 2018. Yanping Huang, Youlong Cheng, Ankur Bapna, Orhan Firat, Dehao Chen, Mia\
    \ Xu Chen, HyoukJoong Lee, Jiquan Ngiam, Quoc V. Le, Yonghui Wu, and Zhifeng Chen.\
    \ Gpipe: Efficient training of giant neural networks using pipeline parallelism.\
    \ In Hanna M. Wallach, Hugo Larochelle, Alina Beygelzimer, Florence d'Alch\xE9\
    -Buc, Emily B. Fox, and Roman Garnett, editors, Advances in Neural Information\
    \ Processing Systems 32: Annual Conference on Neural Information Processing Systems\
    \ 2019, NeurIPS 2019, December 8-14, 2019, Vancouver, BC, Canada, pages 103--112,\
    \ 2019. Ltd. Huawei Technologies Co. Huawei mindspore ai development framework.\
    \ In Artificial Intelligence Technology, pages 137--162. Springer, 2022. Zhihao\
    \ Jia, Sina Lin, Charles R. Qi, and Alex Aiken. Exploring hidden dimensions in\
    \ parallelizing convolutional neural networks. In Jennifer G. Dy and Andreas Krause,\
    \ editors, Proceedings of the 35th International Conference on Machine Learning,\
    \ ICML 2018, Stockholmsm\xE4ssan, Stockholm, Sweden, July 10-15, 2018, volume\
    \ 80 of Proceedings of Machine Learning Research, pages 2279--2288. PMLR, 2018.\
    \ Zhihao Jia, Matei Zaharia, and Alex Aiken. Beyond data and model parallelism\
    \ for deep neural networks. In A. Talwalkar, V. Smith, and M. Zaharia, editors,\
    \ Proceedings of Machine Learning and Systems, volume 1, pages 1--13, 2019. Yimin\
    \ Jiang, Yibo Zhu, Chang Lan, Bairen Yi, Yong Cui, and Chuanxiong Guo. A unified\
    \ architecture for accelerating distributed dnn training in heterogeneous gpu/cpu\
    \ clusters. In 14th USENIX Symposium on Operating Systems Design and Implementation\
    \ (OSDI 20), pages 463--479, 2020. Taebum Kim, Hyoungjoo Kim, Gyeong-In Yu, and\
    \ Byung-Gon Chun. Bpipe: Memory-balanced pipeline parallelism for training large\
    \ language models. 2023. Vijay Korthikanti, Jared Casper, Sangkug Lym, Lawrence\
    \ McAfee, Michael Andersch, Mohammad Shoeybi, and Bryan Catanzaro. Reducing activation\
    \ recomputation in large transformer models, 2022. Alex Krizhevsky. One weird\
    \ trick for parallelizing convolutional neural networks. arXiv preprint arXiv:1404.5997,\
    \ 2014. Mu Li, David G Andersen, Jun Woo Park, Alexander J Smola, Amr Ahmed, Vanja\
    \ Josifovski, James Long, Eugene J Shekita, and Bor-Yiing Su. Scaling distributed\
    \ machine learning with the parameter server. In 11th USENIX Symposium on Operating\
    \ Systems Design and Implementation (OSDI 14), pages 583--598, 2014. Shigang Li\
    \ and Torsten Hoefler. Chimera: Efficiently training large-scale neural networks\
    \ with bidirectional pipelines. In SC21: International Conference for High Performance\
    \ Computing, Networking, Storage and Analysis, pages 1--14, 2021. Ziming Liu,\
    \ Shenggan Cheng, Haotian Zhou, and Yang You. Hanayo: Harnessing wave-like pipeline\
    \ parallelism for enhanced large model training efficiency. In Proceedings of\
    \ the International Conference for High Performance Computing, Networking, Storage\
    \ and Analysis, SC '23, New York, NY, USA, 2023. Association for Computing Machinery.\
    \ Qinyi Luo, Jiaao He, Youwei Zhuo, and Xuehai Qian. Prague: High-performance\
    \ heterogeneity-aware asynchronous decentralized training. In Proceedings of the\
    \ Twenty-Fifth International Conference on Architectural Support for Programming\
    \ Languages and Operating Systems, pages 401--416, 2020. Deepak Narayanan, Mohammad\
    \ Shoeybi, Jared Casper, Patrick LeGresley, Mostofa Patwary, Vijay Korthikanti,\
    \ Dmitri Vainbrand, Prethvi Kashinkunti, Julie Bernauer, Bryan Catanzaro, Amar\
    \ Phanishayee, and Matei Zaharia. Efficient large-scale language model training\
    \ on GPU clusters using megatron-lm. In Bronis R. de Supinski, Mary W. Hall, and\
    \ Todd Gamblin, editors, International Conference for High Performance Computing,\
    \ Networking, Storage and Analysis, SC 2021, St. Louis, Missouri, USA, November\
    \ 14-19, 2021, page 58. ACM, 2021. OpenAI. Gpt-4 technical report, 2023. Adam\
    \ Paszke, Sam Gross, Francisco Massa, Adam Lerer, James Bradbury, Gregory Chanan,\
    \ Trevor Killeen, Zeming Lin, Natalia Gimelshein, Luca Antiga, et al. Pytorch:\
    \ An imperative style, high-performance deep learning library. Advances in neural\
    \ information processing systems, 32:8026--8037, 2019. Samyam Rajbhandari, Jeff\
    \ Rasley, Olatunji Ruwase, and Yuxiong He. Zero: memory optimizations toward training\
    \ trillion parameter models. In Christine Cuicchi, Irene Qualters, and William\
    \ T. Kramer, editors, Proceedings of the International Conference for High Performance\
    \ Computing, Networking, Storage and Analysis, SC 2020, Virtual Event / Atlanta,\
    \ Georgia, USA, November 9-19, 2020, page 20. IEEE/ACM, 2020. Samyam Rajbhandari,\
    \ Olatunji Ruwase, Jeff Rasley, Shaden Smith, and Yuxiong He. Zero-infinity: breaking\
    \ the GPU memory wall for extreme scale deep learning. In Bronis R. de Supinski,\
    \ Mary W. Hall, and Todd Gamblin, editors, International Conference for High Performance\
    \ Computing, Networking, Storage and Analysis, SC 2021, St. Louis, Missouri, USA,\
    \ November 14-19, 2021, page 59. ACM, 2021. Jie Ren, Samyam Rajbhandari, Reza\
    \ Yazdani Aminabadi, Olatunji Ruwase, Shuangyan Yang, Minjia Zhang, Dong Li, and\
    \ Yuxiong He. Zero-offload: Democratizing billion-scale model training. In Irina\
    \ Calciu and Geoff Kuenning, editors, 2021 USENIX Annual Technical Conference,\
    \ USENIX ATC 2021, July 14-16, 2021, pages 551--564. USENIX Association, 2021.\
    \ Minsoo Rhu, Natalia Gimelshein, Jason Clemons, Arslan Zulfiqar, and Stephen\
    \ W. Keckler. vdnn: Virtualized deep neural networks for scalable, memory-efficient\
    \ neural network design. In 49th Annual IEEE/ACM International Symposium on Microarchitecture,\
    \ MICRO 2016, Taipei, Taiwan, October 15-19, 2016, pages 18:1--18:13. IEEE Computer\
    \ Society, 2016. Noam Shazeer, Youlong Cheng, Niki Parmar, Dustin Tran, Ashish\
    \ Vaswani, Penporn Koanantakool, Peter Hawkins, HyoukJoong Lee, Mingsheng Hong,\
    \ Cliff Young, et al. Mesh-tensorflow: Deep learning for supercomputers. arXiv\
    \ preprint arXiv:1811.02084, 2018. Mohammad Shoeybi, Mostofa Patwary, Raul Puri,\
    \ Patrick LeGresley, Jared Casper, and Bryan Catanzaro. Megatron-lm: Training\
    \ multi-billion parameter language models using model parallelism. CoRR, abs/1909.08053,\
    \ 2019. Jakub M Tarnawski, Deepak Narayanan, and Amar Phanishayee. Piper: Multidimensional\
    \ planner for dnn parallelization. In M. Ranzato, A. Beygelzimer, Y. Dauphin,\
    \ P.S. Liang, and J. Wortman Vaughan, editors, Advances in Neural Information\
    \ Processing Systems, volume 34, pages 24829--24840. Curran Associates, Inc.,\
    \ 2021. Hugo Touvron, Louis Martin, Kevin Stone, Peter Albert, Amjad Almahairi,\
    \ Yasmine Babaei, Nikolay Bashlykov, Soumya Batra, Prajjwal Bhargava, Shruti Bhosale,\
    \ Dan Bikel, Lukas Blecher, Cristian Canton-Ferrer, Moya Chen, Guillem Cucurull,\
    \ David Esiobu, Jude Fernandes, Jeremy Fu, Wenyin Fu, Brian Fuller, Cynthia Gao,\
    \ Vedanuj Goswami, Naman Goyal, Anthony Hartshorn, Saghar Hosseini, Rui Hou, Hakan\
    \ Inan, Marcin Kardas, Viktor Kerkez, Madian Khabsa, Isabel Kloumann, Artem Korenev,\
    \ Punit Singh Koura, Marie-Anne Lachaux, Thibaut Lavril, Jenya Lee, Diana Liskovich,\
    \ Yinghai Lu, Yuning Mao, Xavier Martinet, Todor Mihaylov, Pushkar Mishra, Igor\
    \ Molybog, Yixin Nie, Andrew Poulton, Jeremy Reizenstein, Rashi Rungta, Kalyan\
    \ Saladi, Alan Schelten, Ruan Silva, Eric Michael Smith, Ranjan Subramanian, Xiaoqing\
    \ Ellen Tan, Binh Tang, Ross Taylor, Adina Williams, Jian Xiang Kuan, Puxin Xu,\
    \ Zheng Yan, Iliyan Zarov, Yuchen Zhang, Angela Fan, Melanie Kambadur, Sharan\
    \ Narang, Aur\xE9lien Rodriguez, Robert Stojnic, Sergey Edunov, and Thomas Scialom.\
    \ Llama 2: Open foundation and fine-tuned chat models. CoRR, abs/2307.09288, 2023.\
    \ Colin Unger, Zhihao Jia, Wei Wu, Sina Lin, Mandeep Baines, Carlos Efrain Quintero\
    \ Narvaez, Vinay Ramakrishnaiah, Nirmal Prajapati, Patrick S. McCormick, Jamaludin\
    \ Mohd-Yusof, Xi Luo, Dheevatsa Mudigere, Jongsoo Park, Misha Smelyanskiy, and\
    \ Alex Aiken. Unity: Accelerating DNN training through joint optimization of algebraic\
    \ transformations and parallelization. In Marcos K. Aguilera and Hakim Weatherspoon,\
    \ editors, 16th USENIX Symposium on Operating Systems Design and Implementation,\
    \ OSDI 2022, Carlsbad, CA, USA, July 11-13, 2022, pages 267--284. USENIX Association,\
    \ 2022. Linnan Wang, Jinmian Ye, Yiyang Zhao, Wei Wu, Ang Li, Shuaiwen Leon Song,\
    \ Zenglin Xu, and Tim Kraska. Superneurons: dynamic GPU memory management for\
    \ training deep neural networks. In Andreas Krall and Thomas R. Gross, editors,\
    \ Proceedings of the 23rd ACM SIGPLAN Symposium on Principles and Practice of\
    \ Parallel Programming, PPoPP 2018, Vienna, Austria, February 24-28, 2018, pages\
    \ 41--53. ACM, 2018. Minjie Wang, Chien-Chin Huang, and Jinyang Li. Supporting\
    \ very large models using automatic dataflow graph partitioning. In George Candea,\
    \ Robbert van Renesse, and Christof Fetzer, editors, Proceedings of the Fourteenth\
    \ EuroSys Conference 2019, Dresden, Germany, March 25-28, 2019, pages 26:1--26:17.\
    \ ACM, 2019. Shixiong Zhao, Fanxin Li, Xusheng Chen, Xiuxian Guan, Jianyu Jiang,\
    \ Dong Huang, Yuhao Qing, Sen Wang, Peng Wang, Gong Zhang, Cheng Li, Ping Luo,\
    \ and Heming Cui. vpipe: A virtualized acceleration system for achieving efficient\
    \ and scalable pipeline parallel DNN training. IEEE Trans. Parallel Distributed\
    \ Syst., 33(3):489--506, 2022. Lianmin Zheng, Zhuohan Li, Hao Zhang, Yonghao Zhuang,\
    \ Zhifeng Chen, Yanping Huang, Yida Wang, Yuanzhong Xu, Danyang Zhuo, Eric P.\
    \ Xing, Joseph E. Gonzalez, and Ion Stoica. Alpa: Automating inter- and Intra-Operator\
    \ parallelism for distributed deep learning. In 16th USENIX Symposium on Operating\
    \ Systems Design and Implementation (OSDI 22), pages 559--578, Carlsbad, CA, July\
    \ 2022. USENIX Association. Quan Zhou, Haiquan Wang, Xiaoyan Yu, Cheng Li, Youhui\
    \ Bai, Feng Yan, and Yinlong Xu. Mpress: Democratizing billion-scale model training\
    \ on multi-gpu servers via memory-saving inter-operator parallelism. In 2023 IEEE\
    \ International Symposium on High-Performance Computer Architecture (HPCA), pages\
    \ 556--569, 2023."
  title: 'AdaPipe: Optimizing Pipeline Parallelism with Adaptive Recomputation and
    Partitioning'
  url: https://dl.acm.org/doi/10.1145/3620666.3651359
- abstract: This work investigates a new erase scheme in NAND flash memory to improve
    the lifetime and performance of modern solid-state drives (SSDs). In NAND flash
    memory, an erase operation applies a high voltage (e.g., > 20 V) to flash cells
    for a long time (e.g., > 3.5 ms), which degrades cell endurance and potentially
    delays user I/O requests. While a large body of prior work has proposed various
    techniques to mitigate the negative impact of erase operations, no work has yet
    investigated how erase latency should be set to fully exploit the potential of
    NAND flash memory; most existing techniques use a fixed latency for every erase
    operation which is set to cover the worst-case operating conditions. To address
    this, we propose Aero (Adaptive ERase Operation), a new erase scheme that dynamically
    adjusts erase latency to be just long enough for reliably erasing target cells,
    depending on the cells' current erase characteristics. Aero accurately predicts
    such near-optimal erase latency based on the number of fail bits during an erase
    operation. To maximize its benefits, we further optimize Aero in two aspects.
    First, at the beginning of an erase operation, Aero attempts to erase the cells
    for a short time (e.g., 1 ms), which enables Aero to always obtain the number
    of fail bits necessary to accurately predict the near-optimal erase latency. Second,
    Aero aggressively yet safely reduces erase latency by leveraging a large reliability
    margin present in modern SSDs. We demonstrate the feasibility and reliability
    of Aero using 160 real 3D NAND flash chips, showing that it enhances SSD lifetime
    over the conventional erase scheme by 43% without change to existing NAND flash
    chips. Our system-level evaluation using eleven real-world workloads shows that
    an AERO-enabled SSD reduces read tail latency by 34% on average over a state-of-the-art
    technique.
  keywords: Hardware Communication hardware, interfaces and storage External storage
  references: "Samsung. Samsung enterprise SSDs, 2023. https://semiconductor.samsung.com/ssd/enterprise-ssd.\
    \ SK Hynix. SK Hynix enterprise SSDs, 2023. https://product.skhynix.com/products/ssd/essd.go.\
    \ Micron. Micron enterprise SSDs, 2023. https://www.micron.com/products/ssd/product-lines/9400.\
    \ Western Digital. Western Digital Data Center SSDs, 2023. https://www.westerndigital.com/solutions/data-center/high-performance-ssd.\
    \ H-S Philip Wong, Simone Raoux, SangBum Kim, Jiale Liang, John P Reifenberg,\
    \ Bipin Rajendran, Mehdi Asheghi, and Kenneth E Goodson. Phase Change Memory.\
    \ Proceedings of the IEEE, 2010. Mahmoud Zangeneh and Ajay Joshi. Design and Optimization\
    \ of Nonvolatile Multibit 1T1R Resistive RAM. IEEE Transactions on Very Large\
    \ Scale Integration (VLSI) Systems, 2013. Sanjeev Aggarwal. STT-MRAM: High Density\
    \ Persistent Memory Solution. https://www.flashmemorysummit.com/Proceedings2019/08-07-Wednesday/20190807_NEWM-202B-1_Aggarwal.pdf,\
    \ 2019. Shoichiro Kawashima and Jeffrey S. Cross. FeRAM. Springer US, 2009. Jiho\
    \ Cho, D. Chris Kang, Jongyeol Park, Sang-Wan Nam, Jung-Ho Song, Bong-Kil Jung,\
    \ Jaedoeg Lyu, Hogil Lee, Won-Tae Kim, Hongsoo Jeon, Sunghoon Kim, In-Mo Kim,\
    \ Jae-Ick Son, Kyoungtae Kang, Sang-Won Shim, JongChul Park, Eungsuk Lee, Kyung-Min\
    \ Kang, Sang-Won Park, Jaeyun Lee, Seung Hyun Moon, Pansuk Kwak, ByungHoon Jeong,\
    \ Cheon An Lee, Kisung Kim, Junyoung Ko, Tae-Hong Kwon, Junha Lee, Yohan Lee,\
    \ Chaehoon Kim, Myeong-Woo Lee, Jeong-yun Yun, HoJun Lee, Yonghyuk Choi, Sanggi\
    \ Hong, JongHoon Park, Yoonsung Shin, Hojoon Kim, Hansol Kim, Chiweon Yoon, Dae\
    \ Seok Byeon, Seungjae Lee, Jin-Yub Lee, and Jaihyuk Song. 30.3 A 512Gb 3b/Cell\
    \ 7 th-Generation 3D-NAND Flash Memory with 184MB/s Write Throughput and 2.0 Gb/s\
    \ Interface. In Proceedings of the 2021 IEEE International Solid-State Circuits\
    \ Conference (ISSCC), 2021. Moosung Kim, Sung Won Yun, Jungjune Park, Hyun Kook\
    \ Park, Jungyu Lee, Yeong Seon Kim, Daehoon Na, Sara Choi, Youngsun Song, Jonghoon\
    \ Lee, Hyunjun Yoon, Kangbin Lee, Byunghoon Jeong, Sanglok Kim, Junhong Park,\
    \ Cheon An Lee, Jaeyun Lee, Jisang Lee, Jin Young Chun, Joonsuc Jang, Younghwi\
    \ Yang, Seung Hyun Moon, Myunghoon Choi, Wontae Kim, Jungsoo Kim, Seokmin Yoon,\
    \ Pansuk Kwak, Myunghun Lee, Raehyun Song, Sunghoon Kim, Chiweon Yoon, Dongku\
    \ Kang, Jin-Yub Lee, and Jaihyuk Song. A 1Tb 3b/Cell 8th-Generation 3D-NAND Flash\
    \ Memory with 164MB/s Write Throughput and a 2.4Gb/s Interface. In Proceedings\
    \ of the 2022 IEEE International Solid-State Circuits Conference (ISSCC), 2022.\
    \ Duwon Hong, Myungsuk Kim, Geonhee Cho, Dusol Lee, and Jihong Kim. GuardedErase:\
    \ Extending SSD Lifetimes by Protecting Weak Wordlines. In Proceedings of the\
    \ 20th USENIX Conference on File and Storage Technologies (FAST), 2022. Guanying\
    \ Wu and Xubin He. Reducing SSD Read Latency via NAND Flash Program and Erase\
    \ Suspension. In Proceedings of the 10th USENIX Conference on File and Storage\
    \ Technologies (FAST), 2012. Shine Kim, Jonghyun Bae, Hakbeom Jang, Wenjing Jin,\
    \ Jeonghun Gong, Seungyeon Lee, Tae Jun Ham, and Jae W. Lee. Practical Erase Suspension\
    \ for Modern Low-latency SSDs. In Proceedings of the 2019 USENIX Annual Technical\
    \ Conference (ATC), 2019. Yu Cai, Saugata Ghose, Erich F. Haratsch, Yixin Luo,\
    \ and Onur Mutlu. Error Characterization, Mitigation, and Recovery in Flash-Memory-Based\
    \ Solid-State Drives. Proceedings of the IEEE, 2017. Myungsuk Kim, Myoungjun Chun,\
    \ Duwon Hong, Yoona Kim, Geonhee Cho, Dusol Lee, and Jihong Kim. RealWear: Improving\
    \ performance and lifetime of SSDs using a NAND aging marker. Performance Evaluation,\
    \ 2021. Dong Wook Lee, Sunghoon Cho, Byung Woo Kang, Sukkwang Park, Byoungjun\
    \ Park, Myoung Kwan Cho, Kun-Ok Ahn, Ye Seok Yang, and Sung Wook Park. The Operation\
    \ Algorithm for Improving the Reliability of TLC (Triple Level Cell) NAND Flash\
    \ Characteristics. In Proceedings of the 2011 3rd IEEE International Memory Workshop\
    \ (IMW), 2011. Junghee Lee, Youngjae Kim, Galen M. Shipman, Sarp Oral, Feiyi Wang,\
    \ and Jongman Kim. A Semi-Preemptive Garbage Collector for Solid State Drives.\
    \ In Proceedings of the IEEE International Symposium on Performance Analysis of\
    \ Systems and Software (ISPASS), 2011. Jinhua Cui, Youtao Zhang, Jianhang Huang,\
    \ Weiguo Wu, and Jun Yang. ShadowGC: Cooperative Garbage Collection with Multi-level\
    \ Buffer for Performance Improvement in NAND flash-based SSDs. In Proceedings\
    \ of the 2018 Design, Automation & Test in Europe Conference & Exhibition (DATE),\
    \ 2018. Wonkyung Kang and Sungjoo Yoo. Dynamic Management of Key States for Reinforcement\
    \ Learning-Assisted Garbage Collection to Reduce Long Tail Latency in SSD. In\
    \ Proceedings of the 55th Annual Design Automation Conference (DAC), 2018. Narges\
    \ Shahidi, Mahmut T. Kandemir, Mohammad Arjomand, Chita R. Das, Myoungsoo Jung,\
    \ and Anand Sivasubramaniam. Exploring the Potentials of Parallel Garbage Collection\
    \ in SSDs for Enterprise Storage Systems. In Proceedings of the International\
    \ Conference for High Performance Computing, Networking, Storage and Analysis\
    \ (SC), 2016. Wonil Choi, Myoungsoo Jung, Mahmut Kandemir, and Chita Das. Parallelizing\
    \ Garbage Collection with I/O to Improve Flash Resource Utilization. In Proceedings\
    \ of the 27th International Symposium on High-Performance Parallel and Distributed\
    \ Computing (HPDC), 2018. Jiayang Guo, Yiming Hu, Bo Mao, and Suzhen Wu. Parallelism\
    \ and Garbage Collection Aware I/O Scheduler with Improved SSD Performance. In\
    \ Proceedings of the 2017 IEEE International Parallel and Distributed Processing\
    \ Symposium (IPDPS), 2017. Wonkyung Kang, Dongkun Shin, and Sungjoo Yoo. Reinforcement\
    \ Learning-Assisted Garbage Collection to Mitigate Long-Tail Latency in SSD. ACM\
    \ Transactions on Embedded Computing Systems (TECS), 2017. Pan Yang, Ni Xue, Yuqi\
    \ Zhang, Yangxu Zhou, Li Sun, Wenwen Chen, Zhonggang Chen, Wei Xia, Junke Li,\
    \ and Kihyoun Kwon. Reducing Garbage Collection Overhead in SSD Based on Workload\
    \ Prediction. In Proceedings of the 11th USENIX Workshop on Hot Topics in Storage\
    \ and File Systems (HotStorage), 2019. Junghee Lee, Youngjae Kim, Galen M. Shipman,\
    \ Sarp Oral, and Jongman Kim. Preemptible I/O Scheduling of Garbage Collection\
    \ for Solid State Drives. IEEE Transactions on Computer-Aided Design of Integrated\
    \ Circuits and Systems (TCAD), 2013. Muthukumar Murugan and David.H.C. Du. Rejuvenator:\
    \ A Static Wear Leveling Algorithm for NAND Flash Memory with Minimized Overhead.\
    \ In Proceedings of the 2011 IEEE 27th Symposium on Mass Storage Systems and Technologies\
    \ (MSST), 2011. Jun Li, Xiaofei Xu, Xiaoning Peng, and Jianwei Liao. Pattern-based\
    \ Write Scheduling and Read Balance-oriented Wear-Leveling for Solid State Drivers.\
    \ In Proceedings of the 2019 35th Symposium on Mass Storage Systems and Technologies\
    \ (MSST), 2019. Dharamjeet, Yi-Shen Chen, Tseng-Yi Chen, Yuan-Hung Kuan, and Yuan-Hao\
    \ Chang. LLSM: A Lifetime-Aware Wear-Leveling for LSM-Tree on NAND Flash Memory.\
    \ IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems\
    \ (TCAD), 2022. Jaeyong Jeong, Sangwook Shane Hahn, Sungjin Lee, and Jihong Kim.\
    \ Improving NAND Endurance by Dynamic Program and Erase Scaling. In Proceedings\
    \ of the 5th USENIX Workshop on Hot Topics in Storage and File Systems (HotStorage),\
    \ 2013. Jaeyong Jeong, Sangwook Shane Hahn, Sungjin Lee, and Jihong Kim. Lifetime\
    \ Improvement of NAND Flash-based Storage Systems Using Dynamic Program and Erase\
    \ Scaling. In Proceedings of the 12th USENIX Conference on File and Storage Technologies\
    \ (FAST), 2014. Jaeyong Jeong, Song Youngsun, Sangwook Shane Hahn, Sungjin Lee,\
    \ and Jihong Kim. Dynamic Erase Voltage and Time Scaling for Extending Lifetime\
    \ of NAND Flash-Based SSDs. IEEE Transactions on Computers (TC), 2017. Youngseop\
    \ Shim, Myungsuk Kim, Myoungjun Chun, Jisung Park, Yoona Kim, and Jihong Kim.\
    \ Exploiting Process Similarity of 3D Flash Memory for High Performance SSDs.\
    \ In Proceedings of the 52nd Annual IEEE/ACM International Symposium on Microarchitecture\
    \ (MICRO), 2019. Yixin Luo, Saugata Ghose, Yu Cai, Erich F. Haratsch, and Onur\
    \ Mutlu. Improving 3D NAND Flash Memory Lifetime by Tolerating Early Retention\
    \ Loss and Process Variation. Proceedings of the ACM on Measurement and Analysis\
    \ of Computing Systems (POMACS), 2018. Yi Wang, Lisha Dong, and Rui Mao. P-Alloc:\
    \ Process-Variation Tolerant Reliability Management for 3D Charge-Trapping Flash\
    \ Memory. ACM Transactions on Embedded Computing Systems (TECS), 2017. Shuo-Han\
    \ Chen, Yen-Ting Chen, Hsin-Wen Wei, and Wei-Kuan Shih. Boosting the Performance\
    \ of 3D Charge Trap NAND Flash with Asymmetric Feature Process Size Characteristic.\
    \ In Proceedings of the 2017 54th ACM/EDAC/IEEE Design Automation Conference (DAC),\
    \ 2017. Chun-Hsiung Hung, Meng-Fan Chang, Yih-Shan Yang, Yao-Jen Kuo, Tzu-Neng\
    \ Lai, Shin-Jang Shen, Jo-Yu Hsu, Shuo-Nan Hung, Hang-Ting Lue, Yen-Hao Shih,\
    \ Shih-Lin Huang, Ti-Wen Chen, Tzung Shen Chen, Chung Kuang Chen, Chi-Yu Hung,\
    \ and Chih-Yuan Lu. Layer-Aware Program-and-Read Schemes for 3D Stackable Vertical-Gate\
    \ BE-SONOS NAND Flash Against Cross-Layer Process Variations. IEEE Journal of\
    \ Solid-State Circuits (JSSC), 2015. Jui-Nan Yen, Yao-Ching Hsieh, Cheng-Yu Chen,\
    \ Tseng-Yi Chen, Chia-Lin Yang, Hsiang-Yun Cheng, and Yixin Luo. Efficient Bad\
    \ Block Management with Cluster Similarity. In Proceedings of the 2022 IEEE International\
    \ Symposium on High-Performance Computer Architecture (HPCA), 2022. Qiao Li, Min\
    \ Ye, Yufei Cui, Liang Shi, Xiaoqiang Li, Tei-Wei Kuo, and Chun Jason Xue. Shaving\
    \ Retries with Sentinels for Fast Read over High-Density 3D Flash. In Proceedings\
    \ of the 2020 53rd Annual IEEE/ACM International Symposium on Microarchitecture\
    \ (MICRO), 2020. Yu Cai, Erich F. Haratsch, Onur Mutlu, and Ken Mai. Threshold\
    \ Voltage Distribution in MLC NAND Flash Memory: Characterization, Analysis, and\
    \ Modeling. In Proceedings of the 2013 Design, Automation & Test in Europe Conference\
    \ & Exhibition (DATE), 2013. Yu Cai, Yixin Luo, Saugata Ghose, and Onur Mutlu.\
    \ Read Disturb Errors in MLC NAND Flash Memory: Characterization, Mitigation,\
    \ and Recovery. In Proceedings of the 45th Annual IEEE/IFIP International Conference\
    \ on Dependable Systems and Networks (DSN), 2015. Shuo-Han Chen, Yuan-Hao Chang,\
    \ Yu-Pei Liang, Hsin-Wen Wei, and Wei-Kuan Shih. An Erase Efficiency Boosting\
    \ Strategy for 3D Charge Trap NAND Flash. IEEE Transactions on Computers (TC),\
    \ 2018. Hang-Ting Lue, Tzu-Hsuan Hsu, Chen-Jun Wu, Wei-Chen Chen, Teng-Hao Yeh,\
    \ Kuo-Pin Chang, Chih-Chang Hsieh, Pei-Ying Du, Yi-Hsuan Hsiao, Yu-Wei Jiang,\
    \ Guan-Ru Lee, Roger Lo, Yan-Ru Su, Chiatze Huang, Sheng-Chih Lai, Li-Yang Liang,\
    \ Chieh-Fang Chen, Min-Feng Hung, Chih-Wei Hu, Chia-Jung Chiu, and Chih-Yuan Lu.\
    \ A Novel Double-density, Single-Gate Vertical Channel (SGVC) 3D NAND Flash That\
    \ Is Tolerant to Deep Vertical Etching CD Variation and Possesses Robust Read-disturb\
    \ Immunity. In Proceedings of the 2015 IEEE International Electron Devices Meeting\
    \ (IEDM), 2015. Jisung Park, Myungsuk Kim, Myoungjun Chun, Lois Orosa, Jihong\
    \ Kim, and Onur Mutlu. Reducing Solid-State Drive Read Latency by Optimizing Read-Retry.\
    \ In Proceedings of the 26th ACM International Conference on Architectural Support\
    \ for Programming Languages and Operating Systems (ASPLOS), 2021. Arash Tavakkol,\
    \ Juan G\xF3mez-Luna, Mohammad Sadrosadati, Saugata Ghose, and Onur Mutlu. MQSim:\
    \ A Framework for Enabling Realistic Studies of Modern Multi-Queue SSD Devices.\
    \ In Proceedings of the 16th USENIX Conference on File and Storage Technologies\
    \ (FAST), 2018. Keonsoo Ha, Jaeyong Jeong, and Jihong Kim. An Integrated Approach\
    \ for Managing Read Disturbs in High-Density NAND Flash Memory. IEEE Transactions\
    \ on Computer-Aided Design of Integrated Circuits and Systems (TCAD), 2016. Chun-Yi\
    \ Liu, Yunju Lee, Myoungsoo Jung, Mahmut Taylan Kandemir, and Wonil Choi. Prolonging\
    \ 3D NAND SSD Lifetime via Read Latency Relaxation. In Proceedings of the 26th\
    \ ACM International Conference on Architectural Support for Programming Languages\
    \ and Operating Systems (ASPLOS), 2021. Yu Cai, Onur Mutlu, Erich F. Haratsch,\
    \ and Ken Mai. Program Interference in MLC NAND Flash Memory: Characterization,\
    \ Modeling, and Mitigation. In Proceedings of the IEEE 31st International Conference\
    \ on Computer Design (ICCD), 2013. Jisung Park, Jaeyong Jeong, Sungjin Lee, Youngsun\
    \ Song, and Jihong Kim. Improving Performance and Lifetime of NAND Storage Systems\
    \ Using Relaxed Program Sequence. In Proceeindgs of the 53nd ACM/EDAC/IEEE Design\
    \ Automation Conference (DAC), 2016. Myungsuk Kim, Jaehoon Lee, Sungjin Lee, Jisung\
    \ Park, and Jihong Kim. Improving Performance and Lifetime of Large-page NAND\
    \ Storages Using Erase-Free Subpage Programming. In Proceedings of the 54th ACM/EDAC/IEEE\
    \ Design Automation Conference (DAC), 2017. Yu Cai, Saugata Ghose, Yixin Luo,\
    \ Ken Mai, Onur Mutlu, and Erich F. Haratsch. Vulnerabilities in MLC NAND Flash\
    \ Memory Programming: Experimental Analysis, Exploits, and Mitigation Techniques.\
    \ In Proceedings of the IEEE International Symposium on High Performance Computer\
    \ Architecture (HPCA), 2017. Robert Gallager. Low-Density Parity-Check Codes.\
    \ IRE Transactions on information theory, 1962. JEDEC. JEDEC Solid State Technology\
    \ Assn., Method for Developing Acceleration Models for Electronic Component Failure\
    \ Mechanisms, 2022. https://www.jedec.org/standards-documents/docs/jesd91B. Jong\
    \ Yuh, Jason Li, Heguang Li, Yoshihiro Oyama, Cynthia Hsu, Pradeep Anantula, Stanley\
    \ Jeong, Anirudh Amarnath, Siddhesh Darne, Sneha Bhatia, Tianyu Tang, Aditya Arya,\
    \ Naman Rastogi, Naoki Ookuma, Hiroyuki Mizukoshi, Alex Yap, Demin Wang, Steve\
    \ Kim, Yonggang Wu, Min Peng, Jason Lu, Tommy Ip, Seema Malhotra, David Han, Masatoshi\
    \ Okumura, Jiwen Liu, John Sohn, Hardwell Chibvongodze, Muralikrishna Balaga,\
    \ Aki Matsuda, Chakshu Puri, Chen Chen, Indra K V, Chaitanya G, Venky Ramachandra,\
    \ Yosuke Kato, Ravi Kumar, Huijuan Wang, Farookh Moogat, In-Soo Yoon, Kazushige\
    \ Kanda, Takahiro Shimizu, Noboru Shibata, Takashi Shigeoka, Kosuke Yanagidaira,\
    \ Takuyo Kodama, Ryo Fukuda, Yasuhiro Hirashima, and Mitsuhiro Abe. A 1-Tb 4b/Cell\
    \ 4-Plane 162-Layer 3D Flash Memory With a 2.4-Gb/s I/O Speed Interface. In Proceedings\
    \ of the 2022 IEEE International Solid- State Circuits Conference (ISSCC), 2022.\
    \ Bvunarvul Kim, Seungpil Lee, Beomseok Hah, Kanawoo Park, Yongsoon Park, Kangwook\
    \ Jo, Yujong Noh, Hyeoncheon Seol, Hyunsoo Lee, Jaehyeon Shin, Seongjin Choi,\
    \ Youngdon Jung, Sungho Ahn, Yonghun Park, Sujeong Oh, Myungsu Kim, Seonauk Kim,\
    \ Hyunwook Park, Taeho Lee, Haeun Won, Minsung Kim, Cheulhee Koo, Yeonjoo Choi,\
    \ Suyoung Choi, Sechun Park, Dongkyu Youn, Junyoun Lim, Wonsun Park, Hwang Hur,\
    \ Kichang Kwean, Hongsok Choi, Woopyo Jeong, Sungyong Chung, Jungdal Choi, and\
    \ Seonyong Cha. 28.2 A High-Performance 1Tb 3b/Cell 3D-NAND Flash with a 194MB/s\
    \ Write Throughput on over 300 Layers i. In Proceedings of the 2023 IEEE International\
    \ Solid- State Circuits Conference (ISSCC), 2023. Rino Micheloni, Luca Crippa,\
    \ and Alessia Marelli. Inside NAND Flash Memories. 2010. Shane C Hollmer, Chung-You\
    \ Hu, Binh Q Le, Pau-Ling Chen, Jonathan Su, Ravi Gutala, and Colin Bill. Erase\
    \ verify scheme for NAND flash, 1999. US Patent 6,009,014. Seiichi Aritome. NAND\
    \ Flash Memory Technologies. 2015. Takashi Ito and Yasuhiko Taito. SONOS Split-Gate\
    \ eFlash Memory. Embedded Flash Memory for Embedded Systems: Technology, Design\
    \ for Sub-systems, and Innovations, 2018. Jaewon Cha and Sungho Kang. Data Randomization\
    \ Scheme for Endurance Enhancement and Interference Mitigation of Multilevel Flash\
    \ Memory Devices. Etri Journal, 2013. Michele Favalli, Cristian Zambelli, Alessia\
    \ Marelli, Rino Micheloni, and Piero Olivo. A Scalable Bidimensional Randomization\
    \ Scheme for TLC 3D NAND Flash Memories. Micromachines, 2021. ONFI Workgroup.\
    \ Open NAND Flash Interface Specification 4.1. http://www.onfi.org/~/media/onfi/specs/onfi_4_1_gold.pdf?la=en.\
    \ Dongku Kang, Woopyo Jeong, Chulbum Kim, Doo-Hyun Kim, Yong Sung Cho, Kyung-Tae\
    \ Kang, Jinho Ryu, Kyung-Min Kang, Sungyeon Lee, Wandong Kim, Hanjun Lee, Jaedoeg\
    \ Yu, Nayoung Choi, Dong-Su Jang, Jeong-Don Ihm, Doogon Kim, Young-Sun Min, Moo-Sung\
    \ Kim, An-Soo Park, Jae-Ick Son, In-Mo Kim, Pansuk Kwak, Bong-Kil Jung, Doo-Sub\
    \ Lee, Hyunggon Kim, Hyang-Ja Yang, Dae-Seok Byeon, Ki-Tae Park, Kye-Hyun Kyung,\
    \ and Jeong-Hyuk Choi. 256Gb 3b/cell V-NAND Flash Memory with 48 Stacked WL Layers.\
    \ In Proceedings of the 2016 IEEE International Solid-State Circuits Conference\
    \ (ISSCC), 2016. JEDEC. JESD218B.02: Solid-State Drive (SSD) Requirements and\
    \ Endurance Test Method, 2022. https://www.jedec.org/standards-documents/docs/jesd218b01.\
    \ Svante Arrhenius. \xDCber die Dissociationsw\xE4rme und den Einfluss der Temperatur\
    \ auf den Dissociationsgrad der Elektrolyte. Zeitschrift f\xFCr Physikalische\
    \ Chemie, 1889. Rino Micheloni. 3D Flash Memories. 2016. Kristian V\xE4tt\xF6\
    . Samsung SSD 840: Testing the endurance of TLC NAND, 2012. https://www.anandtech.com/show/6459/samsung-ssd-840-testing-the-endurance-of-tlc-nand.\
    \ Billy Tallis. The Samsung 960 Pro (2TB) SSD review, 2016. https://www.anandtech.com/show/10754/samsung-960-pro-ssd-review.\
    \ Ki-Tae Park, Jin-man Han, Daehan Kim, Sangwan Nam, Kihwan Choi, Min-Su Kim,\
    \ Pansuk Kwak, Doosub Lee, Yoon-He Choi, Kyung-Min Kang, Myung-Hoon Choi, Dong-Hun\
    \ Kwak, Hyun-wook Park, Sangwon Shim, Hyun-Jun Yoon, Doohyun Kim, Sang-won Park,\
    \ Kangbin Lee, Kuihan Ko, Dong-Kyo Shim, Yang-Lo Ahn, Jeunghwan Park, Jinho Ryu,\
    \ Donghyun Kim, Kyungwa Yun, Joonsoo Kwon, Seunghoon Shin, Dongkyu Youn, Won-Tae\
    \ Kim, Taehyun Kim, Sung-Jun Kim, Sungwhan Seo, Hyung-Gon Kim, Dae-Seok Byeon,\
    \ Hyang-Ja Yang, Moosung Kim, Myong-Seok Kim, Jinseon Yeon, Jaehoon Jang, Han-Soo\
    \ Kim, Woonkyung Lee, Duheon Song, Sungsoo Lee, Kye-Hyun Kyung, and Jeong-Hyuk\
    \ Choi. Three-Dimensional 128Gb MLC Vertical NAND Flash-Memory with 24-WL Stacked\
    \ Layers and 50MB/s High-Speed Programming. In 2014 IEEE International Solid-State\
    \ Circuits Conference Digest of Technical Papers (ISSCC), 2014. Daeyeal Lee, Ik\
    \ Joon Chang, Sang-Yong Yoon, Joonsuc Jang, Dong-Su Jang, Wook-Ghee Hahn, Jong-Yeol\
    \ Park, Doo-Gon Kim, Chiweon Yoon, Bong-Soon Lim, Byung-Jun Min, Sung-Won Yun,\
    \ Ji-Sang Lee, Il-Han Park, Kyung-Ryun Kim, Jeong-Yun Yun, Youse Kim, Yong-Sung\
    \ Cho, Kyung-Min Kang, Sang-Hyun Joo, Jin-Young Chun, Jung-No Im, Seunghyuk Kwon,\
    \ Seokjun Ham, Ansoo Park, Jae-Duk Yu, Nam-Hee Lee, Tae-Sung Lee, Moosung Kim,\
    \ Hoosung Kim, Ki-Whan Song, Byung-Gil Jeon, Kihwan Choi, Jin-Man Han, Kye Hyun\
    \ Kyung, Young-Ho Lim, and Young-Hyun Jun. A 64Gb 533Mb/s DDR Interface MLC NAND\
    \ Flash in Sub-20nm Technology. In 2012 IEEE International Solid-State Circuits\
    \ Conference (ISSCC), 2012. Aayush Gupta, Youngjae Kim, and Bhuvan Urgaonkar.\
    \ DFTL: A Flash Translation Layer Employing Demand-Based Selective Caching of\
    \ Page-Level Address Mappings. In Proceedings of the 14th International Conference\
    \ on Architectural Support for Programming Languages and Operating Systems (ASPLOS),\
    \ 2009. Osso Vahabzadeh. LDPC codes: Principles and implementation aspects. In\
    \ Flash Memory Summit (FMS), 2016. David Declercq. Improving Waterfall Performance\
    \ of low cost FAID LDPC Decoders. In Flash Memory Summit (FMS), 2019. Kai Zhao,\
    \ Wenzhe Zhao, Hongbin Sun, Xiaodong Zhang, Nanning Zheng, and Tong Zhang. LDPC-in-SSD:\
    \ Making Advanced Error Correction Codes Work Effectively in Solid State Drives.\
    \ In 11th USENIX Conference on File and Storage Technologies (FAST), 2013. Jisung\
    \ Park, Roknoddin Azizi, Geraldo F. Oliveira, Mohammad Sadrosadati, Rakesh Nadig,\
    \ David Novo, Juan G\xF3mez-Luna, Myungsuk Kim, and Onur Mutlu. Flash-Cosmos:\
    \ In-Flash Bulk Bitwise Operations Using Inherent Computation Capability of NAND\
    \ Flash Memory. In Proceedings of the 2022 55th IEEE/ACM International Symposium\
    \ on Microarchitecture (MICRO), 2022. Nika Mansouri Ghiasi, Jisung Park, Harun\
    \ Mustafa, Jeremie Kim, Ataberk Olgun, Arvid Gollwitzer, Damla Senol Cali, Can\
    \ Firtina, Haiyu Mao, Nour Almadhoun Alserr, Rachata Ausavarungnirun, Nandita\
    \ Vijaykumar, Mohammed Alser, and Onur Mutlu. GenStore: A High-Performance In-Storage\
    \ Processing System for Genome Sequence Analysis. In Proceedings of the 27th ACM\
    \ International Conference on Architectural Support for Programming Languages\
    \ and Operating Systems (ASPLOS), 2022. Lyle Smith. Samsung 990 Pro SSD Review\
    \ (2TB), 2022. https://www.storagereview.com/review/samsung-990-pro-ssd-review-2tb.\
    \ Li-Pin Chang and Tei-Wei Kuo. An Adaptive Striping Architecture for Flash Memory\
    \ Storage Systems of Embedded Systems. In Proceedings of the Eighth IEEE Real-Time\
    \ and Embedded Technology and Applications Symposium (RTAS), 2002. Jinhong Li,\
    \ Qiuping Wang, Patrick P. C. Lee, and Chao Shi. An In-Depth Analysis of Cloud\
    \ Block Storage Workloads in Large-Scale Production. In Proceedings of the 2020\
    \ IEEE International Symposium on Workload Characterization (IISWC), 2020. Dushyanth\
    \ Narayanan, Austin Donnelly, and Antony Rowstron. Write Off-Loading: Practical\
    \ Power Management for Enterprise Storage. ACM Transactions on Storage (TOS),\
    \ 2008. Rakesh Nadig, Mohammad Sadrosadati, Haiyu Mao, Nika Mansouri Ghiasi, Arash\
    \ Tavakkol, Jisung Park, Hamid Sarbazi-Azad, Juan G\xF3mez Luna, and Onur Mutlu.\
    \ Venice: Improving Solid-State Drive Parallelism at Low Cost via Conflict-Free\
    \ Accesses. In Proceedings of the 50th Annual International Symposium on Computer\
    \ Architecture (ISCA), 2023. Renping Liu, Zhenhua Tan, Linbo Long, Yu Wu, Yujuan\
    \ Tan, and Duo Liu. Improving Fairness for SSD Devices through DRAM Over-Provisioning\
    \ Cache Management. IEEE Transactions on Parallel and Distributed Systems (TPDS),\
    \ 2022. Renping Liu, Duo Liu, Xianzhang Chen, Yujuan Tan, Runyu Zhang, and Liang\
    \ Liang. Self-Adapting Channel Allocation for Multiple Tenants Sharing SSD Devices.\
    \ IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems\
    \ (TCAD), 2022. Yina Lv, Liang Shi, Yunpeng Song, and Chun Jason Xue. Access Characteristic\
    \ Guided Partition for NAND Flash based High-Density SSDs. IEEE Transactions on\
    \ Computer-Aided Design of Integrated Circuits and Systems (TCAD), 2023. Jiaojiao\
    \ Wu, Jun Li, Zhibing Sha, Zhigang Cai, and Jianwei Liao. Adaptive Switch on Wear\
    \ Leveling for Enhancing I/O Latency and Lifetime of High-Density SSDs. IEEE Transactions\
    \ on Computer-Aided Design of Integrated Circuits and Systems (TCAD), 2022. Giuseppe\
    \ DeCandia, Deniz Hastorun, Madan Jampani, Gunavardhan Kakulapati, Avinash Lakshman,\
    \ Alex Pilchin, Swaminathan Sivasubramanian, Peter Vosshall, and Werner Vogels.\
    \ Dynamo: Amazon's Highly Available Key-Value Store. In Proceedings of Twenty-First\
    \ ACM SIGOPS Symposium on Operating Systems Principles (SOSP), 2007. Haryadi S.\
    \ Gunawi, Mingzhe Hao, Riza O. Suminto, Agung Laksono, Anang D. Satria, Jeffry\
    \ Adityatama, and Kurnia J. Eliazar. Why Does the Cloud Stop Computing? Lessons\
    \ from Hundreds of Service Outages. In Proceedings of the Seventh ACM Symposium\
    \ on Cloud Computing (SoCC), 2016."
  title: 'AERO: Adaptive Erase Operation for Improving Lifetime and Performance of
    Modern NAND Flash-Based SSDs'
  url: https://dl.acm.org/doi/10.1145/3620666.3651341
- abstract: 'In an effort to increase the utilization of data center resources cloud
    providers have introduced a new type of virtual machine (VM) offering, called
    a burstable VM (BVM). Our work is the first to study the characteristics of burstable
    VMs (based on traces from production systems at a major cloud provider) and resource
    allocation approaches for BVM workloads. We propose new approaches for BVM resource
    allocation and use extensive simulations driven by field data to compare them
    with two baseline approaches used in practice. We find that traditional approaches
    based on using a fixed oversubscription ratio or based on the Central Limit Theorem
    do not work well for BVMs: They lead to either low utilization or high server
    capacity violation rates. Based on the lessons learned from our workload study,
    we develop a new approach to BVM scheduling, called Audible, using a non-parametric
    statistical model, which makes the approach light-weight and workload independent,
    and obviates the need for training machine learning models and for tuning their
    parameters. We show that Audible achieves high system utilization while being
    able to enforce stringent requirements on server capacity violations.'
  keywords: ''
  references: "Ahsan Ali, Riccardo Pinciroli, Feng Yan, and Evgenia Smirni. CEDULE:\
    \ A scheduling framework for burstable performance in cloud computing. In IEEE\
    \ International Conference on Autonomic Computing (ICAC), pages 141--150. IEEE,\
    \ 2018. Ahsan Ali, Riccardo Pinciroli, Feng Yan, and Evgenia Smirni. It's not\
    \ a sprint, it's a marathon: Stretching multi-resource burstable performance in\
    \ public clouds. In Dejan S. Milojicic and Vinod Muthusamy, editors, Proceedings\
    \ of the 20th International Middleware Conference Industrial Track, pages 36--42.\
    \ ACM, 2019. Ataollah Fatahi Baarzi, Timothy Zhu, and Bhuvan Urgaonkar. Burscale:\
    \ Using burstable instances for cost-effective autoscaling in the public cloud.\
    \ In Proceedings of the ACM Symposium on Cloud Computing, SoCC 2019, Santa Cruz,\
    \ CA, USA, November 20-23, 2019, pages 126--138. ACM, 2019. Noman Bashir, Nan\
    \ Deng, Krzysztof Rzadca, David Irwin, Sree Kodak, and Rohit Jnagal. Take it to\
    \ the limit: peak prediction-driven resource overcommitment in datacenters. In\
    \ Proceedings of the Sixteenth European Conference on Computer Systems (EuroSys),\
    \ pages 556--573, 2021. R.N. Calheiros, E. Masoumi, R. Ranjan, and R. Buyya. Workload\
    \ prediction using arima model and its impact on cloud applications' QoS. IEEE\
    \ Transactions on Cloud Computing, 2014. Maxime C. Cohen, Philipp Keller, Vahab\
    \ Mirrokni, and Morteza Zadimoghaddam. Overcommitment in cloud services - bin\
    \ packing with chance constraints. Management Science, 2019. Eli Cortez, Anand\
    \ Bonde, Alexandre Muzio, Mark Russinovich, Marcus Fontoura, and Ricardo Bianchini.\
    \ Resource central: Understanding and predicting workloads for improved resource\
    \ management in large cloud platforms. In Proceedings of the 26th Symposium on\
    \ Operating Systems Principles (SoSP), pages 153--167. ACM, 2017. Nan Deng, Zichen\
    \ Xu, Christopher Stewart, and Xiaorui Wang. Telltale tails: Decomposing response\
    \ times for live internet services. In Sixth International Green and Sustainable\
    \ Computing Conference, IGSC, pages 1--8. IEEE Computer Society, 2015. Rick Durrett.\
    \ Probability: Theory and Examples. Cambridge, 4 edition, 2010. Paolo Giacomazzi,\
    \ Luigi Musumeci, Gabriella Saddemi, and Giacomo Verticale. Analytical methods\
    \ for resource allocation and admission control with dual-leaky-bucket regulated\
    \ traffic. In Proceedings of IEEE International Conference on Communications ICC,\
    \ pages 499--505. IEEE, 2007. Z. Gong, X. Gu, and J. Wilkes. Press: Predictive\
    \ elastic resource scaling for cloud systems. In Proceedings of IEEE International\
    \ Conference on Network and Service Management, 2010. Ori Hadary, Luke Marshall,\
    \ Ishai Menache, Abhisek Pan, Esaias E. Greeff, David Dion, Star Dorminey, Shailesh\
    \ Joshi, Yang Chen, Mark Russinovich, and Thomas Moscibroda. Protean: VM allocation\
    \ service at scale. In 14th USENIX Symposium on Operating Systems Design and Implementation,\
    \ OSDI, pages 845--861. USENIX Association, 2020. S. Islam, J. Keung, K. Lee,\
    \ and A. Liu. Empirical prediction models for adaptive resource provisioning in\
    \ the cloud. Future Generation Computer Systems, 2012. Pawel Janus and Krzysztof\
    \ Rzadca. SLO-aware colocation of data center tasks based on instantaneous processor\
    \ requirements. In Proceedings of the 2017 Symposium on Cloud Computing (SoCC),\
    \ pages 256--268. ACM, 2017. Yuxuan Jiang, Mohammad Shahrad, David Wentzlaff,\
    \ Danny H. K. Tsang, and Carlee Joe-Wong. Burstable instances for clouds: Performance\
    \ modeling, equilibrium analysis, and revenue maximization. In 2019 IEEE Conference\
    \ on Computer Communications (INFOCOM), pages 1576--1584. IEEE, 2019. SeyedAli\
    \ Jokar Jandaghi, Kaveh Mahdaviani, and Cristiana Amza. Virtual instance resource\
    \ usage modeling: A method for efficient resource provisioning in the cloud. In\
    \ Proceedings of IFIP/IEEE IM 2017 Workshop: 2nd International Workshop on Analytics\
    \ for Network and Service Management (AnNet), pages 917--922, 2017. A. Khan, X.\
    \ Yan, S. Tao, and N. Anerousis. Workload characterization and prediction in the\
    \ cloud: A multiple time series approach. In Proceedings of IEEE Network Operations\
    \ and Management Symposium, 2012. H. Nguyen, Z. Shen, X. Gu, S. Subbiah, and J.\
    \ Wilkes. AGILE: Elastic distributed resource scaling for infrastructure-as-a-service.\
    \ In Proceedings of International Conference on Autonomic Computing (ICAC), 2013.\
    \ Hojin Park, Gregory R. Ganger, and George Amvrosiadis. More IOPS for less: Exploiting\
    \ burstable storage in public clouds. In Amar Phanishayee and Ryan Stutsman, editors,\
    \ 12th USENIX Workshop on Hot Topics in Cloud Computing (HotCloud). USENIX Association,\
    \ 2020. Riccardo Pinciroli, Ahsan Ali, Feng Yan, and Evgenia Smirni. CED-ULE+:\
    \ resource management for burstable cloud instances using predictive analytics.\
    \ IEEE Transactions on Network and Service Management, 18(1):945--957, 2021. Olga\
    \ Poppe, Tayo Amuneke, Dalitso Banda, Aritra De, Ari Green, Manon Knoertzer, Ehi\
    \ Nosakhare, Karthik Rajendran, Deepak Shankargouda, Meina Wang, et al. Seagull:\
    \ An infrastructure for load prediction and optimized resource allocation. arXiv\
    \ preprint arXiv:2009.12922, 2020. N. Roy, A. Dubey, and A. Gokhale. Efficient\
    \ autoscaling in the cloud using predictive models for workload forecasting. In\
    \ Proceedings of IEEE International Conference on Cloud Computing, 2011. Aakash\
    \ Sharma, Saravanan Dhakshinamurthy, George Kesidis, and Chita R. Das. CASH: A\
    \ credit aware scheduling for public cloud platforms. In Laurent Lef\xE8vre, Stacy\
    \ Patterson, Young Choon Lee, Haiying Shen, Shashikant Ilager, Mohammad Goudarzi,\
    \ Adel Nadjaran Toosi, and Rajkumar Buyya, editors, 21st IEEE/ACM International\
    \ Symposium on Cluster, Cloud and Internet Computing (CCGrid), pages 227--236.\
    \ IEEE, 2021. Z. Shen, S. Subbiah, X. Gu, and J. Wilkes. Cloudscale: Elastic resource\
    \ scaling for multi-tenant cloud systems. In Proceedings of European Conference\
    \ on Computer Systems (EuroSys), 2011. Bo Sun, Yuxuan Jiang, and Danny H. K. Tsang.\
    \ When burstable instances meet mobile computing: Performance modeling and economic\
    \ analysis. In 40th IEEE International Conference on Distributed Computing Systems\
    \ (ICDCS), pages 1179--1180. IEEE, 2020. X. Sun, N. Ansari, and R.Wang. Optimizing\
    \ resource utilization of a data center. IEEE Communications Surveys & Tutorials,\
    \ 2016. Luan Teylo, Luciana Arantes, Pierre Sens, and L\xFAcia Maria de A Drummond.\
    \ Scheduling bag-of-tasks in clouds using spot and burstable virtual machines.\
    \ IEEE Transactions on Cloud Computing, 11(1):984--996, 2021. M. Tirmazi, A. Barker,\
    \ N. Deng, M.E. Haque, Z.G. Qin, S. Hand, M. Harchol-Balter, and J. Wilkes. Borg:\
    \ The next generation. In Proceedings of European Conference on Computer Systems\
    \ (EuroSys), 2020. A. Verma, L. Pedrosa, M. Korupolu, D. Oppenheimer, E. Tune,\
    \ and J. Wilkes. Large-scale cluster management at google with borg. In Proceedings\
    \ of European Conference on Computer Systems (EuroSys), 2015. Cheng Wang, Bhuvan\
    \ Urgaonkar, Aayush Gupta, George Kesidis, and Qianlin Liang. Exploiting spot\
    \ and burstable instances for improving the cost-efficacy of in-memory caches\
    \ on the public cloud. In Gustavo Alonso, Ricardo Bianchini, and Marko Vukolic,\
    \ editors, Proceedings of the Twelfth European Conference on Computer Systems\
    \ (EuroSys), pages 620--634. ACM, 2017. Cheng Wang, Bhuvan Urgaonkar, Neda Nasiriani,\
    \ and George Kesidis. Using burstable instances in the public cloud: Why, when\
    \ and how? Proceedings of the ACM on Measurement and Analysis of Computing Systems,\
    \ 1(1):11:1--11:28, 2017."
  title: 'AUDIBLE: A Convolution-Based Resource Allocator for Oversubscribing Burstable
    Virtual Machines'
  url: https://dl.acm.org/doi/10.1145/3620666.3651376
- abstract: 'Data compression plays a critical role in operating systems and large-scale
    computing workloads. Its primary objective is to reduce network bandwidth consumption
    and memory/storage capacity utilization. Given the need to manipulate hash tables,
    and execute matching operations on extensive data volumes, data compression software
    has transformed into a resource-intensive CPU task. To tackle this challenge,
    numerous prior studies have introduced hardware acceleration methods. For example,
    they have utilized Content-Addressable Memory (CAM) for string matches, incorporated
    redundant historical copies for each matching component, and so on. While these
    methods amplify the compression throughput, they often compromise an essential
    aspect of compression performance: the compression ratio (C.R.). Moreover, hardware
    accelerators face significant resource costs, especially in memory, when dealing
    with new large sliding window algorithms.'
  keywords: ''
  references: "Amazon EC2 F1 Instances. https://aws.amazon.com/ec2/instance-types/f1/.\
    \ Bzip2 and Libbzip2. https://sourceware.org/bzip2/. CXL Specification. https://www.computeexpresslink.org/download-the-specification.\
    \ fbpkg - a BLOB distribution service. https://engineering.fb.com. FiniteStateEntropy.\
    \ https://github.com/Cyan4973/FiniteStateEntropy. Gzip - A Single-file/Stream\
    \ Lossless Data Compression Utility. https://www.gzip.org. Intel(R) QuickAssist\
    \ Adapter Family for Servers. https://www.intel.com/content/www/us/en/products/docs/network-io/ethernet/10-25-40-gigabit-adapters/quickassist-adapter-for-servers.html.\
    \ LZ4 - Extremely Fast Compression. https://github.com/lz4/lz4. lzbench. https://github.com/inikep/lzbench.\
    \ nvCOMP: High Speed Data Compression Using NVIDIA GPUs. https://developer.nvidia.com/nvcomp.\
    \ Project-Zipline. https://github.com/opencomputeproject/Project-Zipline. Silesia\
    \ Compression Corpus. https://sun.aei.polsl.pl//~sdeor/index.php?page=silesia.\
    \ Snappy: A Fast Compressor/Decompressor. https://github.com/google/snappy. The\
    \ Calgary Corpus. https://corpus.canterbury.ac.nz/descriptions/#calgary. The Catenbury\
    \ Corpus. https://corpus.canterbury.ac.nz/descriptions/. Vitis Data Compression\
    \ Library - benchmark. https://xilinx.github.io/Vitis_Libraries/data_compression/2022.1/benchmark.html.\
    \ Xilinx Alveo. https://www.xilinx.com/products/boards-and-kits/alveo.html. Xilinx\
    \ Lossless Compression IP. https://www.xilinx.com/products/intellectual-property/ef-di-compress.html.\
    \ Zlib - A Massively Spiffy Yet Delicately Unobtrusive Compression Library. https://www.zlib.net.\
    \ Snappy Compressed Format Description., 2011. https://github.com/google/snappy/blob/main/format_description.txt.\
    \ Intel\xAE QuickAssist Technology Zstandard Plugin, an External Sequence Producer\
    \ for Zstandard, 2023. https://community.intel.com/t5/Blogs/Tech-Innovation/Artificial-Intelligence-AI/Intel-QuickAssist-Technology-Zstandard-Plugin-an-External/post/1509818.\
    \ Bulent Abali, Bart Blaner, John Reilly, Matthias Klein, Ashutosh Mishra, Craig\
    \ BAgricola, Bedri Sendir, Alper Buyuktosunoglu, Christian Jacobi, William J Starke,\
    \ et al. Data compression accelerator on ibm power9 and z15 processors: Industrial\
    \ product. In 2020 ACM/IEEE 47th Annual International Symposium on Computer Architecture\
    \ (ISCA), pages 1--14. IEEE, 2020. Krste Asanovic, Rimas Avizienis, Jonathan Bachrach,\
    \ Scott Beamer, David Biancolin, Christopher Celio, Henry Cook, Daniel Dabbelt,\
    \ John Hauser, Adam Izraelevitz, et al. The rocket chip generator. EECS Department,\
    \ University of California, Berkeley, Tech. Rep. UCB/EECS-2016-17, 4:6--2, 2016.\
    \ https://www2.eecs.berkeley.edu/Pubs/TechRpts/2016/EECS-2016-17.html. Geoff Brumfiel\
    \ et al. Down the petabyte highway. Nature, 469(20):282--283, 2011. Jianyu Chen,\
    \ Maurice Daverveldt, and Zaid Al-Ars. FPGA Acceleration of Zstd Compression Algorithm.\
    \ In 2021 IEEE International Parallel and Distributed Processing Symposium Workshops\
    \ (IPDPSW), pages 188--191. IEEE, 2021. Monica Chiosa, Fabio Maschi, Ingo M\xFC\
    ller, Gustavo Alonso, and Norman May. Hardware acceleration of compression and\
    \ encryption in sap hana. Proc. VLDB Endow., 15(12), 2022. William J Dally, Yatish\
    \ Turakhia, and Song Han. Domain-specific hardware accelerators. Communications\
    \ of the ACM, 63(7):48--57, 2020. Peter Deutsch. Rfc1951: Deflate compressed data\
    \ format specification version 1.3, 1996. Zstandard - Real-time data compression\
    \ algorithm. http://facebook.github.io/zstd. Jeremy Fowers, Joo-Young Kim, Doug\
    \ Burger, and Scott Hauck. A Scalable High-Bandwidth Architecture for Lossless\
    \ Compression on FPGAs. In 2015 IEEE 23rd Annual International Symposium on Field-Programmable\
    \ Custom Computing Machines, pages 52--59, Vancouver, BC, Canada, May 2015. IEEE.\
    \ Ruihao Gao, Xueqi Li, Yewen Li, Xun Wang, and Guangming Tan. Metazip: A high-throughput\
    \ and efficient accelerator for deflate. In Proceedings of the 59th ACM/IEEE Design\
    \ Automation Conference, DAC '22, page 319--324, New York, NY, USA, 2022. Association\
    \ for Computing Machinery. John L Hennessy and David A Patterson. A new golden\
    \ age for computer architecture. Communications of the ACM, 62(2):48--60, 2019.\
    \ Norm Jouppi, George Kurian, Sheng Li, Peter Ma, Rahul Nagarajan, Lifeng Nai,\
    \ Nishant Patil, Suvinay Subramanian, Andy Swing, Brian Towles, Clifford Young,\
    \ Xiang Zhou, Zongwei Zhou, and David A Patterson. Tpu v4: An optically reconfigurable\
    \ supercomputer for machine learning with hardware support for embeddings. In\
    \ Proceedings of the 50th Annual International Symposium on Computer Architecture,\
    \ ISCA '23, New York, NY, USA, 2023. Association for Computing Machinery. Svilen\
    \ Kanev, Juan Pablo Darago, Kim Hazelwood, Parthasarathy Ranganathan, Tipp Moseley,\
    \ Gu-Yeon Wei, and David Brooks. Profiling a warehouse-scale computer. In Proceedings\
    \ of the 42nd Annual International Symposium on Computer Architecture, pages 158--169,\
    \ 2015. Sagar Karandikar, Howard Mao, Donggyu Kim, David Biancolin, Alon Amid,\
    \ Dayeol Lee, Nathan Pemberton, Emmanuel Amaro, Colin Schmidt, Aditya Chopra,\
    \ et al. Firesim: Fpga-accelerated cycle-exact scale-out system simulation in\
    \ the public cloud. In 2018 ACM/IEEE 45th Annual International Symposium on Computer\
    \ Architecture (ISCA), pages 29--42. IEEE, 2018. Sagar Karandikar, Aniruddha N\
    \ Udipi, Junsun Choi, Joonho Whangbo, Jerry Zhao, Svilen Kanev, Edwin Lim, Jyrki\
    \ Alakuijala, Vrishab Madduri, Yakun Sophia Shao, Borivoje Nikoli\u0107, Krste\
    \ Asanovi\u0107, and Parthasarathy Ranganathan. CDPU: Co-designing Compression\
    \ and Decompression Processing Units for Hyperscale Systems. In Proceedings of\
    \ the 50th Annual International Symposium on Computer Architecture, pages 1--17,\
    \ 2023. Morgan Ledwon, Bruce F. Cockburn, and Jie Han. Design and evaluation of\
    \ an fpga-based hardware accelerator for deflate data decompression. In 2019 IEEE\
    \ Canadian Conference of Electrical and Computer Engineering (CCECE), pages 1--6,\
    \ May 2019. Weiqiang Liu, Faqiang Mei, Chenghua Wang, Maire O'Neill, and Earl\
    \ E. Swartzlander. Data compression device based on modified lz4 algorithm. IEEE\
    \ Transactions on Consumer Electronics, 64(1):110--117, Feb 2018. Weikang Qiao,\
    \ Jieqiong Du, Zhenman Fang, Michael Lo, Mau-Chung Frank Chang, and Jason Cong.\
    \ High-Throughput Lossless Compression on Tightly Coupled CPU-FPGA Platforms.\
    \ page 8, April 2018. Weikang Qiao, Zhenman Fang, Mau-Chung Frank Chang, and Jason\
    \ Cong. An fpga-based bwt accelerator for bzip2 data compression. In 2019 IEEE\
    \ 27th Annual International Symposium on Field-Programmable Custom Computing Machines\
    \ (FCCM), pages 96--99, 2019. Akshitha Sriraman and Abhishek Dhanotia. Accelerometer:\
    \ Understanding acceleration opportunities for data center overheads at hyperscale.\
    \ In Proceedings of the Twenty-Fifth International Conference on Architectural\
    \ Support for Programming Languages and Operating Systems, pages 733--750, 2020.\
    \ Ahmad Yasin. A top-down method for performance analysis and counters architecture.\
    \ In 2014 IEEE International Symposium on Performance Analysis of Systems and\
    \ Software (ISPASS), pages 35--44. IEEE, 2014. Kai Zhao, Sheng Di, Maxim Dmitriev,\
    \ Thierry-Laurent D. Tonellot, Zizhong Chen, and Franck Cappello. Optimizing error-bounded\
    \ lossy compression for scientific data by dynamic spline interpolation. In 2021\
    \ IEEE 37th International Conference on Data Engineering (ICDE), pages 1643--1654,\
    \ 2021. Jacob Ziv and Abraham Lempel. A universal algorithm for sequential data\
    \ compression. IEEE Transactions on information theory, 23(3):337--343, 1977."
  title: 'BeeZip: Towards An Organized and Scalable Architecture for Data Compression'
  url: https://dl.acm.org/doi/10.1145/3620666.3651323
- abstract: Intel's Vector Neural Network Instruction (VNNI) provides higher efficiency
    on calculating dense linear algebra (DLA) computations than conventional SIMD
    instructions. However, existing auto-vectorizers frequently deliver suboptimal
    utilization of VNNI by either failing to recognize VNNI's unique computation pattern
    at the innermost loops/basic blocks, or producing inferior code through constrained
    and rudimentary peephole optimizations/pattern matching techniques. Auto-tuning
    frameworks might generate proficient code but are hampered by the necessity for
    sophisticated pattern templates and extensive search processes.
  keywords: ''
  references: "MLIR's affine dialect. https://mlir.llvm.org/docs/Dialects/Affine/,\
    \ . Accessed: 2024-01-08. BLIS Git repository. https://github.com/flame/blis,\
    \ . Accessed: 2024-01-08. Clang. https://clang.llvm.org/, . Accessed: 2024-01-08.\
    \ GNU and LLVM compiler flags. https://www.bu.edu/tech/support/research/software-and-programming/programming/compilers/gcc-compiler-flags/,\
    \ . Accessed: 2024-01-08. GCC. https://gcc.gnu.org/, . Accessed: 2024-01-08. Intel\xAE\
    \ oneAPI Toolkits. https://www.intel.com/content/www/us/en/developer/tools/oneapi/toolkits.html#base-kit,\
    \ . Accessed: 2024-01-08. Intel compiler flags. https://www.bu.edu/tech/support/research/software-and-programming/programming/compilers/intel-compiler-flags/,\
    \ . Accessed: 2024-01-08. Porting guide for ICC users to DPCPP or ICX. https://www.intel.com/content/www/us/en/developer/articles/guide/porting-guide-for-icc-users-to-dpcpp-or-icx.html,\
    \ . Accessed: 2024-01-08. LLVM. https://llvm.org/, . Accessed: 2024-01-08. Intel\xAE\
    \ optimized math library for numerical computing. https://www.intel.com/content/www/us/en/developer/tools/oneapi/onemkl.html,\
    \ . Accessed: 2024-01-08. OpenBLAS - An optimized BLAS library. https://www.openblas.net/,\
    \ . Accessed: 2024-01-08. mlir-clang from Polygeist's Git repository. https://github.com/llvm/Polygeist,\
    \ . Accessed: 2024-01-08. MLIR's scf dialect. https://mlir.llvm.org/docs/Dialects/SCFDialect/,\
    \ . Accessed: 2024-01-08. llvm::targettransforminfo class reference. https://llvm.org/doxygen/classllvm_1_1TargetTransformInfo.html,\
    \ . Accessed: 2024-01-08. Working with operators using tensor expression. https://tvm.apache.org/docs/tutorial/tensor_expr_get_started.html,\
    \ . Accessed: 2024-01-08. VeGen Git repository. https://github.com/ychen306/vegen,\
    \ . Accessed: 2024-01-08. Tuning guide for deep learning with Intel\xAE AVX512\
    \ and Intel\xAE deep learning boost on 3rd generation Intel\xAE Xeon\xAE scalable\
    \ processors. https://www.intel.com/content/www/us/en/developer/articles/guide/deep-learning-with-avx512-and-dl-boost.html,\
    \ . Accessed: 2024-01-08. VPDPBUSD - Multiply and Add Unsigned and Signed Bytes.\
    \ https://www.felixcloutier.com/x86/vpdpbusd, . Accessed: 2024-01-08. Randy Allen\
    \ and Ken Kennedy. Automatic translation of FORTRAN programs to vector form. ACM\
    \ Transactions on Programming Languages and Systems (TOPLAS), 9, 04 2000. Sara\
    \ S. Baghsorkhi, Nalini Vasudevan, and Youfeng Wu. FlexVec: Auto-vectorization\
    \ for irregular loops. In Proceedings of the 37th ACM SIGPLAN Conference on Programming\
    \ Language Design and Implementation, PLDI '16, page 697--710, New York, NY, USA,\
    \ 2016. Association for Computing Machinery. ISBN 9781450342612. Sorav Bansal\
    \ and Alex Aiken. Automatic generation of peephole superoptimizers. In Proceedings\
    \ of the 12th International Conference on Architectural Support for Programming\
    \ Languages and Operating Systems, ASPLOS XII, page 394--403, New York, NY, USA,\
    \ 2006. Association for Computing Machinery. ISBN 1595934510. Gilles Barthe, Juan\
    \ Manuel Crespo, Sumit Gulwani, Cesar Kunz, and Mark Marron. From relational verification\
    \ to SIMD loop synthesis. In Proceedings of the 18th ACM SIGPLAN Symposium on\
    \ Principles and Practice of Parallel Programming, PPoPP '13, page 123--134, New\
    \ York, NY, USA, 2013. Association for Computing Machinery. ISBN 9781450319225.\
    \ Uday Bondhugula. High performance code generation in MLIR: An early case study\
    \ with GEMM, 2020. Sebastian Buchwald, Andreas Fried, and Sebastian Hack. Synthesizing\
    \ an instruction selection rule library from semantic specifications. In Proceedings\
    \ of the 2018 International Symposium on Code Generation and Optimization, CGO\
    \ 2018, page 300--313, New York, NY, USA, 2018. Association for Computing Machinery.\
    \ ISBN 9781450356176. Lorenzo Chelini, Andi Drebes, Oleksandr Zinenko, Albert\
    \ Cohen, Nicolas Vasilache, Tobias Grosser, and Henk Corporaal. Progressive raising\
    \ in Multi-Level IR. In Proceedings of the 2021 IEEE/ACM International Symposium\
    \ on Code Generation and Optimization, CGO '21, page 15--26. IEEE Press, 2021.\
    \ ISBN 9781728186139. . Yishen Chen, Charith Mendis, Michael Carbin, and Saman\
    \ Amarasinghe. VeGen: A vectorizer generator for SIMD and beyond. In Proceedings\
    \ of the 26th ACM International Conference on Architectural Support for Programming\
    \ Languages and Operating Systems, ASPLOS '21, page 902--914, New York, NY, USA,\
    \ 2021. Association for Computing Machinery. ISBN 9781450383172. Jacob Devlin,\
    \ Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. BERT: Pre-training of deep\
    \ bidirectional transformers for language understanding, 2019. Alexey Dosovitskiy,\
    \ Lucas Beyer, Alexander Kolesnikov, Dirk Weissenborn, Xiaohua Zhai, Thomas Unterthiner,\
    \ Mostafa Dehghani, Matthias Minderer, Georg Heigold, Sylvain Gelly, Jakob Uszkoreit,\
    \ and Neil Houlsby. An image is worth 16\xD716 words: Transformers for image recognition\
    \ at scale, 2021. Alexandre E. Eichenberger, Peng Wu, and Kevin O'Brien. Vectorization\
    \ for SIMD architectures with alignment constraints. In Proceedings of the ACM\
    \ SIGPLAN 2004 Conference on Programming Language Design and Implementation, PLDI\
    \ '04, page 82--93, New York, NY, USA, 2004. Association for Computing Machinery.\
    \ ISBN 1581138075. Navdeep Katel, Vivek Khandelwal, and Uday Bondhugula. MLIR-based\
    \ code generation for GPU tensor cores. In Proceedings of the 31st ACM SIGPLAN\
    \ International Conference on Compiler Construction, CC 2022, page 117--128, New\
    \ York, NY, USA, 2022. Association for Computing Machinery. ISBN 9781450391832.\
    \ Samuel Larsen and Saman Amarasinghe. Exploiting superword level parallelism\
    \ with multimedia instruction sets. In Proceedings of the ACM SIGPLAN 2000 Conference\
    \ on Programming Language Design and Implementation, PLDI '00, page 145--156,\
    \ New York, NY, USA, 2000. Association for Computing Machinery. ISBN 1581131992.\
    \ C. Lattner and V. Adve. LLVM: a compilation framework for lifelong program analysis\
    \ & transformation. In International Symposium on Code Generation and Optimization,\
    \ 2004. CGO 2004., pages 75--86, 2004. Chris Lattner, Mehdi Amini, Uday Bondhugula,\
    \ Albert Cohen, Andy Davis, Jacques Pienaar, River Riddle, Tatiana Shpeisman,\
    \ Nicolas Vasilache, and Oleksandr Zinenko. MLIR: Scaling compiler infrastructure\
    \ for domain specific computation. In Proceedings of the 2021 IEEE/ACM International\
    \ Symposium on Code Generation and Optimization, CGO '21, page 2--14. IEEE Press,\
    \ 2021. ISBN 9781728186139. Jun Liu, Yuanrui Zhang, Ohyoung Jang, Wei Ding, and\
    \ Mahmut Kandemir. A compiler framework for extracting superword level parallelism.\
    \ In Proceedings of the 33rd ACM SIGPLAN Conference on Programming Language Design\
    \ and Implementation, PLDI '12, page 347--358, New York, NY, USA, 2012. Association\
    \ for Computing Machinery. ISBN 9781450312059. Charith Mendis and Saman Amarasinghe.\
    \ GoSLP: Globally optimized superword level parallelism framework. Proc. ACM Program.\
    \ Lang., 2 (OOPSLA), oct 2018. William S. Moses, Lorenzo Chelini, Ruizhe Zhao,\
    \ and Oleksandr Zinenko. Polygeist: Raising C to polyhedral MLIR. In 2021 30th\
    \ International Conference on Parallel Architectures and Compilation Techniques\
    \ (PACT), pages 45--59, 2021. Dorit Nuzman, Ira Rosen, and Ayal Zaks. Auto-vectorization\
    \ of interleaved data for SIMD. In Proceedings of the 27th ACM SIGPLAN Conference\
    \ on Programming Language Design and Implementation, PLDI '06, page 132--143,\
    \ New York, NY, USA, 2006. Association for Computing Machinery. ISBN 1595933204.\
    \ Phitchaya Mangpo Phothilimthana, Aditya Thakur, Rastislav Bodik, and Dinakar\
    \ Dhurjati. Scaling up superoptimization. In Proceedings of the Twenty-First International\
    \ Conference on Architectural Support for Programming Languages and Operating\
    \ Systems, ASPLOS '16, page 297--310, New York, NY, USA, 2016. Association for\
    \ Computing Machinery. ISBN 9781450340915. Vasileios Porpodas. SuperGraph-SLP\
    \ auto-vectorization. In 2017 26th International Conference on Parallel Architectures\
    \ and Compilation Techniques (PACT), pages 330--342, 2017. Vasileios Porpodas\
    \ and Timothy M. Jones. Throttling automatic vectorization: When less is more.\
    \ In 2015 International Conference on Parallel Architecture and Compilation (PACT),\
    \ pages 432--444, 2015. Vasileios Porpodas, Alberto Magni, and Timothy M. Jones.\
    \ PSLP: Padded SLP automatic vectorization. In 2015 IEEE/ACM International Symposium\
    \ on Code Generation and Optimization (CGO), pages 190--201, 2015. Vasileios Porpodas,\
    \ Rodrigo C. O. Rocha, and Lu\xEDs F. W. G\xF3es. VW-SLP: Auto-vectorization with\
    \ adaptive vector width. In Proceedings of the 27th International Conference on\
    \ Parallel Architectures and Compilation Techniques, PACT '18, New York, NY, USA,\
    \ 2018. Association for Computing Machinery. ISBN 9781450359863. Vasileios Porpodas,\
    \ Rodrigo C. O. Rocha, Evgueni Brevnov, Lu\xEDs F. W. G\xF3es, and Timothy Mattson.\
    \ Super-Node SLP: Optimized vectorization for code sequences containing operators\
    \ and their inverse elements. In 2019 IEEE/ACM International Symposium on Code\
    \ Generation and Optimization (CGO), pages 206--216, 2019. Rodrigo C. O. Rocha,\
    \ Vasileios Porpodas, Pavlos Petoumenos, Lu\xEDs F. W. G\xF3es, Zheng Wang, Murray\
    \ Cole, and Hugh Leather. Vectorization-aware loop unrolling with seed forwarding.\
    \ CC 2020, page 1--13, New York, NY, USA, 2020. Association for Computing Machinery.\
    \ ISBN 9781450371209. Nicholai Tukanov, Rajalakshmi Srinivasaraghavan, Jos\xE9\
    \ E. Moreira, and Tze Meng Low. Modeling matrix engines for portability and performance.\
    \ In 2022 IEEE International Parallel and Distributed Processing Symposium (IPDPS),\
    \ pages 1173--1183, 2022. Field G. Van Zee and Robert A. van de Geijn. BLIS: A\
    \ framework for rapidly instantiating BLAS functionality. ACM Trans. Math. Softw.,\
    \ 41(3), jun 2015. ISSN 0098-3500. Nicolas Vasilache, Oleksandr Zinenko, Aart\
    \ J. C. Bik, Mahesh Ravishankar, Thomas Raoux, Alexander Belyaev, Matthias Springer,\
    \ Tobias Gysi, Diego Caballero, Stephan Herhut, Stella Laurenzo, and Albert Cohen.\
    \ Composable and modular code generation in MLIR: A structured and retargetable\
    \ approach to tensor compiler construction, 2022. Jian Weng, Animesh Jain, Jie\
    \ Wang, Leyuan Wang, Yida Wang, and Tony Nowatzki. UNIT: Unifying tensorized instruction\
    \ compilation. In Proceedings of the 2021 IEEE/ACM International Symposium on\
    \ Code Generation and Optimization, CGO '21, page 77--89. IEEE Press, 2021. ISBN\
    \ 9781728186139. Size Zheng, Renze Chen, Anjiang Wei, Yicheng Jin, Qin Han, Liqiang\
    \ Lu, Bingyang Wu, Xiuhong Li, Shengen Yan, and Yun Liang. AMOS: Enabling automatic\
    \ mapping for tensor computations on spatial accelerators with hardware abstraction.\
    \ In Proceedings of the 49th Annual International Symposium on Computer Architecture,\
    \ ISCA '22, page 874--887, New York, NY, USA, 2022. Association for Computing\
    \ Machinery. ISBN 9781450386104. Hao Zhou and Jingling Xue. Exploiting mixed SIMD\
    \ parallelism by reducing data reorganization overhead. In Proceedings of the\
    \ 2016 International Symposium on Code Generation and Optimization, CGO '16, page\
    \ 59--69, New York, NY, USA, 2016. Association for Computing Machinery. ISBN 9781450337786.\
    \ Hao Zhou and Jingling Xue. A compiler approach for exploiting partial SIMD parallelism.\
    \ ACM Trans. Archit. Code Optim., 13(1), mar 2016. ISSN 1544-3566."
  title: Boost Linear Algebra Computation Performance via Efficient VNNI Utilization
  url: https://dl.acm.org/doi/10.1145/3620666.3651333
- abstract: Machine learning and data analytics applications increasingly suffer from
    the high latency and energy consumption of conventional von Neumann architectures.
    Recently, several in-memory and near-memory systems have been proposed to overcome
    this von Neumann bottleneck. Platforms based on content-addressable memories (CAMs)
    are particularly interesting due to their efficient support for the search-based
    operations that form the foundation for many applications, including K-nearest
    neighbors (KNN), high-dimensional computing (HDC), recommender systems, and one-shot
    learning among others. Today, these platforms are designed by hand and can only
    be programmed with low-level code, accessible only to hardware experts. In this
    paper, we introduce C4CAM, the first compiler framework to quickly explore CAM
    configurations and seamlessly generate code from high-level Torch-Script code.
    C4CAM employs a hierarchy of abstractions that progressively lowers programs,
    allowing code transformations at the most suitable abstraction level. Depending
    on the type and technology, CAM arrays exhibit varying latencies and power profiles.
    Our framework allows analyzing the impact of such differences in terms of system-level
    performance and energy consumption, and thus supports designers in selecting appropriate
    designs for a given application.
  keywords: ''
  references: "Kaggle datasets, howpublished = https://www.kaggle.com/datasets, note\
    \ = Accessed: 2023-11-20. Pneumonia dataset, howpublished = https://dzl.de/en/core-datasets/pneumonia/,\
    \ note = Accessed: 2023-11-20. Intermediate representation execution environment.\
    \ https://github.com/iree-org/iree/, 2021. Accessed: 2022-08-30. Onnx-mlir. https://github.com/onnx/onnx-mlir,\
    \ 2024. Accessed: 2024-03-01. Ali Ahmed, Kyungbae Park, and Sanghyeon Baeg. Resource-efficient\
    \ sram-based ternary content addressable memory. IEEE Transactions on Very Large\
    \ Scale Integration (VLSI) Systems, 25(4):1583--1587, 2016. Mustafa Ali, Amogh\
    \ Agrawal, and Kaushik Roy. Ramann: in-sram differentiable memory computations\
    \ for memory-augmented neural networks. In ACM/IEEE International Symposium on\
    \ Low Power Electronics and Design, pages 61--66, 2020. Alexandr Andoni and Piotr\
    \ Indyk. Near-optimal hashing algorithms for approximate nearest neighbor in high\
    \ dimensions. Communications of the ACM, 51(1):117--122, 2008. Hamza Errahmouni\
    \ Barkam et al. Hdgim: Hyperdimensional genome sequence matching on unreliable\
    \ highly scaled fefetyperdimensional. In 2023 Design, Automation & Test in Europe\
    \ Conference & Exhibition (DATE). IEEE, 2023. Lorenzo Chelini et al. Progressive\
    \ raising in multi-level ir. In 2021 IEEE/ACM International Symposium on Code\
    \ Generation and Optimization (CGO), pages 15--26, 2021. Tianqi Chen, Thierry\
    \ Moreau, Ziheng Jiang, Lianmin Zheng, Eddie Yan, Meghan Cowan, Haichen Shen,\
    \ Leyuan Wang, Yuwei Hu, Luis Ceze, Carlos Guestrin, and Arvind Krishnamurthy.\
    \ Tvm: An automated end-to-end optimizing compiler for deep learning, 2018. Jo\xE3\
    o Paulo C. de Lima, Asif Ali Khan, Luigi Carro, and Jeronimo Castrillon. Full-stack\
    \ optimization for cam-only dnn inference. In 2024 Design, Automation and Test\
    \ in Europe Conference (DATE), DATE'24, pages 1--6. IEEE, March 2024. Paul Dlugosch\
    \ et al. An efficient and scalable semiconductor architecture for parallel automata\
    \ processing. IEEE Transactions on Parallel and Distributed Systems, 25(12):3088--3098,\
    \ 2014. others. The torch-mlir project. https://github.com/llvm/torch-mlir, 2023.\
    \ Accessed: 2023-11-20. Catherine E Graves et al. In-memory computing with memristor\
    \ content addressable memories for pattern matching. Advanced Materials, 32(37):2003437,\
    \ 2020. Robert Hanhan et al. Edam: edit distance tolerant approximate matching\
    \ content addressable memory. In 49th Annual International Symposium on Computer\
    \ Architecture, pages 495--507, 2022. Xiaobo Sharon Hu et al. In-memory computing\
    \ with associative memories: a cross-layer perspective. In 2021 IEEE International\
    \ Electron Devices Meeting (IEDM), pages 25.2.1--25.2.4. IEEE, 2021. Li-Yue Huang,\
    \ Meng-Fan Chang, Ching-Hao Chuang, Chia-Chen Kuo, Chien-Fu Chen, Geng-Hau Yang,\
    \ Hsiang-Jen Tsai, Tien-Fu Chen, Shyh-Shyuan Sheu, Keng-Li Su, et al. Reram-based\
    \ 4t2r nonvolatile tcam with 7x nvm-stress reduction, and 4x improvement in speed-wordlength-capacity\
    \ for normally-off instant-on filter-based search engines used in big-data processing.\
    \ In 2014 Symposium on VLSI Circuits Digest of Technical Papers, pages 1--2. IEEE,\
    \ 2014. Yuka Ikarashi, Gilbert Louis Bernstein, Alex Reinking, Hasan Genc, and\
    \ Jonathan Ragan-Kelley. Exocompilation for productive programming of hardware\
    \ accelerators. In 43rd ACM SIGPLAN International Conference on Programming Language\
    \ Design and Implementation, PLDI 2022, page 703--718, New York, NY, USA, 2022.\
    \ Mohsen Imani, Yeseong Kim, and Tajana Rosing. Nngine: Ultra-efficient nearest\
    \ neighbor accelerator based on in-memory computing. In 2017 IEEE International\
    \ Conference on Rebooting Computing (ICRC), pages 1--8. IEEE, 2017. Mohsen Imani\
    \ et al. Searchd: A memory-centric hyperdimensional computing with stochastic\
    \ training. IEEE Trans. on Computer-Aided Design of Integrated Circuits and Systems,\
    \ 39(10):2422--2433, 2019. Hai Jin, Bo Lei, Haikun Liu, Xiaofei Liao, Zhuohui\
    \ Duan, Chencheng Ye, and Yu Zhang. A compilation tool for computation offloading\
    \ in reram-based cim architectures. ACM Transactions Archit. Code Optim., 20(4),\
    \ oct 2023. Roman Kaplan, Leonid Yavits, and Ran Ginosar. Rassa: resistive prealignment\
    \ accelerator for approximate dna long read mapping. IEEE Micro, 39(4):44--54,\
    \ 2018. Arman Kazemi et al. Achieving software-equivalent accuracy for hyper-dimensional\
    \ computing with ferroelectric-based in-memory computing. Scientific reports,\
    \ 12(1):19201, 2022. Arman Kazemi, Mohammad Mehdi Sharifi, Ann Franchesca Laguna,\
    \ Franz M\xFCller, Ramin Rajaei, Ricardo Olivo, Thomas K\xE4mpfe, Michael Niemier,\
    \ and X Sharon Hu. In-memory nearest neighbor search with fefet multi-bit content-addressable\
    \ memories. In 2021 Design, Automation & Test in Europe Conference & Exhibition\
    \ (DATE), pages 1084--1089. IEEE, 2021. Asif Ali Khan, Jo\xE3o Paulo C De Lima,\
    \ Hamid Farzaneh, and Jeronimo Castrillon. The landscape of compute-near-memory\
    \ and compute-in-memory: A research and commercial overview. arXiv preprint arXiv:2401.14428,\
    \ 2024. Asif Ali Khan, Hamid Farzaneh, Karl F. A. Friebel, Cl\xE9ment Fournier,\
    \ Lorenzo Chelini, and Jeronimo Castrillon. Cinm (cinnamon): Acompilation infrastructure\
    \ for heterogeneous compute in-memory and compute near-memory paradigms. arXiv\
    \ preprint arXiv:2301.07486, 2023. S Karen Khatamifard, Zamshed Chowdhury, Nakul\
    \ Pande, Meisam Razaviyayn, Chris Kim, and Ulya R Karpuzcu. Genvom: Read mapping\
    \ near non-volatile memory. IEEE/ACM Transactions on Computational Biology and\
    \ Bioinformatics, 19(6):3482--3496, 2021. Ann Franchesca Laguna et al. Ferroelectric\
    \ fet based in-memory computing for few-shot learning. In 2019 on Great Lakes\
    \ Symposium on VLSI, pages 373--378, 2019. Ann Franchesca Laguna, Hasindu Gamaarachchi,\
    \ Xunzhao Yin, Michael Niemier, Sri Parameswaran, and X Sharon Hu. Seed-and-vote\
    \ based in-memory accelerator for dna read mapping. In 39th International Conference\
    \ on Computer-Aided Design, pages 1--9, 2020. Chris Lattner et al. Mlir: Scaling\
    \ compiler infrastructure for domain specific computation. In 2021 IEEE/ACM International\
    \ Symposium on Code Generation and Optimization (CGO), pages 2--14, 2021. Mengyuan\
    \ Li et al. Associative memory based experience replay for deep reinforcement\
    \ learning. In 41st IEEE/ACM International Conference on Computer-Aided Design,\
    \ pages 1--9, 2022. Mengyuan Li et al. imars: an in-memory-computing architecture\
    \ for recommendation systems. In 59th ACM/IEEE Design Automation Conference, pages\
    \ 463--468, 2022. Mengyuan Li, Shiyi Liu, Mohammad Mehdi Sharifi, and X. Sharon\
    \ Hu. Camasim: A comprehensive simulation framework for content-addressable memory\
    \ based accelerators, 2024. Liu Liu et al. A reconfigurable fefet content addressable\
    \ memory for multi-state hamming distance. IEEE Transactions on Circuits and Systems\
    \ I: Regular Papers, 2023. Song Liu, Yi Wang, and Fei Wang. A fast read alignment\
    \ method based on seed-and-vote for next generation sequencing. BMC bioinformatics,\
    \ 17:193--203, 2016. Liu Liu et al. Eva-cam: a circuit/architecture-level evaluation\
    \ tool for general content addressable memories. In 2022 Design, Automation &\
    \ Test in Europe Conference & Exhibition (DATE), pages 1173--1176. IEEE, 2022.\
    \ Siri Narla et al. Modeling and design for magnetoelectric ternary content addressable\
    \ memory (tcam). IEEE Journal on Exploratory Solid-State Computational Devices\
    \ and Circuits, 8(1):44--52, 2022. National Center for Biotechnology Information.\
    \ Genome Reference Consortium Human Data. https://www.ncbi.nlm.nih.gov/grc/human/data,\
    \ 2023. Accessed on: 28/11/2023. Kai Ni et al. Ferroelectric ternary content-addressable\
    \ memory for one-shot learning. Nature Electronics, 2(11):521--529, 2019. Kostas\
    \ Pagiamtzis and Ali Sheikholeslami. Content-addressable memory (cam) circuits\
    \ and architectures: A tutorial and survey. IEEE journal of solid-state circuits,\
    \ 41(3):712--727, 2006. Giacomo Pedretti et al. X-time: An in-memory engine for\
    \ accelerating machine learning on tabular data with cams. arXiv preprint arXiv:2304.01285,\
    \ 2023. Minh Pham, Yicheng Tu, and Xiaoyi Lv. Accelerating bwa-mem read mapping\
    \ on gpus. In 37th International Conference on Supercomputing, pages 155--166,\
    \ 2023. Songyun Qu, Shixin Zhao, Bing Li, Yintao He, Xuyi Cai, Lei Zhang, and\
    \ Ying Wang. Cim-mlc: A multi-level compilation stack for computing-in-memory\
    \ accelerators. arXiv preprint arXiv:2401.12428, 2024. Mariam Rakka et al. Dt2cam:\
    \ A decision tree to content addressable memory framework. IEEE Transactions on\
    \ Emerging Topics in Computing, 2023. Indranil Roy and Srinivas Aluru. Discovering\
    \ motifs in biological sequences using the micron automata processor. IEEE/ACM\
    \ Transactions on computational biology and bioinformatics, 13(1):99--111, 2015.\
    \ Adam Siemieniuk et al. Occ: An automated end-to-end machine learning optimizing\
    \ compiler for computing-in-memory. IEEE Transactions on Computer-Aided Design\
    \ of Integrated Circuits and Systems, 2021. Mathias Soeken et al. An mig-based\
    \ compiler for programmable logic-in-memory architectures. In 53rd Annual Design\
    \ Automation Conference, pages 1--6, 2016. Jacob R Stevens, Ashish Ranjan, Dipankar\
    \ Das, Bharat Kaul, and Anand Raghunathan. Manna: An accelerator for memory-augmented\
    \ neural networks. In 52nd Annual IEEE/ACM International Symposium on Microarchitecture,\
    \ pages 794--806, 2019. Fang Wang et al. Speeding up querying and mining operations\
    \ on data with modern hardware. 2022. Xunzhao Yin, et al. Deep random forest with\
    \ ferroelectric analog content addressable memory. arXiv preprint arXiv:2110.02495,\
    \ 2021. Xunzhao Yin et al. Fecam: A universal compact digital and analog content\
    \ addressable memory using ferroelectric. IEEE Transactions on Electron Devices,\
    \ 67(7):2785--2792, 2020. Tao Yu, Yichi Zhang, Zhiru Zhang, and Christopher M\
    \ De Sa. Understanding hyperdimensional computing for parallel single-pass learning.\
    \ Advances in Neural Info. Processing Sys., 35:1157--1169, 2022. Xiaodong Yu et\
    \ al. Robotomata: A framework for approximate pattern matching of big data on\
    \ an automata processor. In 2017 IEEE International Conference on Big Data (Big\
    \ Data), pages 283--292, 2017. Zhuowen Zou, Hanning Chen, Prathyush Poduval, Yeseong\
    \ Kim, Mahdi Imani, Elaheh Sadredini, Rosario Cammarota, and Mohsen Imani. Biohd:\
    \ an efficient genome sequence search platform using hyperdimensional memorization.\
    \ In 49th Annual International Symposium on Computer Architecture, ISCA '22, page\
    \ 656--669, New York, NY, USA, 2022. Association for Computing Machinery. Charles\
    \ A Zukowski and Shao-Yi Wang. Use of selective precharge for low-power content-addressable\
    \ memories. In 1997 IEEE International Symposium on Circuits and Systems (ISCAS),\
    \ volume 3, pages 1788--1791. IEEE, 1997."
  title: 'C4CAM: A Compiler for CAM-based In-memory Accelerators'
  url: https://dl.acm.org/doi/10.1145/3620666.3651386
- abstract: Efficiently training large language models (LLMs) necessitates the adoption
    of hybrid parallel methods, integrating multiple communications collectives within
    distributed partitioned graphs. Overcoming communication bottlenecks is crucial
    and is often achieved through communication and computation overlaps. However,
    existing overlap methodologies tend to lean towards either fine-grained kernel
    fusion or limited operation scheduling, constraining performance optimization
    in heterogeneous training environments.
  keywords: ''
  references: "Tom Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared D Kaplan,\
    \ Prafulla Dhariwal, Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda Askell,\
    \ Sandhini Agarwal, Ariel Herbert-Voss, Gretchen Krueger, Tom Henighan, Rewon\
    \ Child, Aditya Ramesh, Daniel Ziegler, Jeffrey Wu, Clemens Winter, Chris Hesse,\
    \ Mark Chen, Eric Sigler, Mateusz Litwin, Scott Gray, Benjamin Chess, Jack Clark,\
    \ Christopher Berner, Sam McCandlish, Alec Radford, Ilya Sutskever, and Dario\
    \ Amodei. Language models are few-shot learners. In H. Larochelle, M. Ranzato,\
    \ R. Hadsell, M.F. Balcan, and H. Lin, editors, Advances in Neural Information\
    \ Processing Systems, volume 33, pages 1877--1901. Curran Associates, Inc., 2020.\
    \ Zixian Cai, Zhengyang Liu, Saeed Maleki, Madanlal Musuvathi, Todd Mytkowicz,\
    \ Jacob Nelson, and Olli Saarikivi. Synthesizing optimal collective algorithms.\
    \ In Proceedings of the 26th ACM SIGPLAN Symposium on Principles and Practice\
    \ of Parallel Programming, PPoPP '21, page 62--75, New York, NY, USA, 2021. Association\
    \ for Computing Machinery. C. Chen, M. Li, and C. Yang. bbtopk: Bandwidth-aware\
    \ sparse allreduce with blocked sparsification for efficient distributed training.\
    \ In 2023 IEEE 43rd International Conference on Distributed Computing Systems\
    \ (ICDCS), pages 1--11, Los Alamitos, CA, USA, jul 2023. IEEE Computer Society.\
    \ Meghan Cowan, Saeed Maleki, Madan Musuvathi, Olli Saarikivi, and Yifan Xiong.\
    \ Gc3: An optimizing compiler for gpu collective communication. 2022. Jacob Devlin,\
    \ Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. BERT: Pre-training of deep\
    \ bidirectional transformers for language understanding. In Jill Burstein, Christy\
    \ Doran, and Thamar Solorio, editors, Proceedings of the 2019 Conference of the\
    \ North American Chapter of the Association for Computational Linguistics: Human\
    \ Language Technologies, Volume 1 (Long and Short Papers), pages 4171--4186, Minneapolis,\
    \ Minnesota, June 2019. Association for Computational Linguistics. Shiqing Fan,\
    \ Yi Rong, Chen Meng, Zongyan Cao, Siyu Wang, Zhen Zheng, Chuan Wu, Guoping Long,\
    \ Jun Yang, Lixue Xia, Lansong Diao, Xiaoyong Liu, and Wei Lin. Dapple: A pipelined\
    \ data parallel approach for training large models. In Proceedings of the 26th\
    \ ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming, PPoPP\
    \ '21, page 431--445, New York, NY, USA, 2021. Association for Computing Machinery.\
    \ William Fedus, Barret Zoph, and Noam Shazeer. Switch transformers: Scaling to\
    \ trillion parameter models with simple and efficient sparsity. CoRR, abs/2101.03961,\
    \ 2021. Richard L. Graham, Galen M. Shipman, Brian W. Barrett, Ralph H. Castain,\
    \ George Bosilca, and Andrew Lumsdaine. Open mpi: A high-performance, heterogeneous\
    \ mpi. In 2006 IEEE International Conference on Cluster Computing, pages 1--9,\
    \ 2006. Sayed Hadi Hashemi, Sangeetha Abdu Jyothi, and Roy Campbell. Tic-tac:\
    \ Accelerating distributed deep learning with communication scheduling. In A.\
    \ Talwalkar, V. Smith, and M. Zaharia, editors, Proceedings of Machine Learning\
    \ and Systems, volume 1, pages 418--430, 2019. Yanping Huang, Youlong Cheng, Ankur\
    \ Bapna, Orhan Firat, Mia Xu Chen, Dehao Chen, HyoukJoong Lee, Jiquan Ngiam, Quoc\
    \ V. Le, Yonghui Wu, and Zhifeng Chen. GPipe: Efficient Training of Giant Neural\
    \ Networks Using Pipeline Parallelism. Curran Associates Inc., Red Hook, NY, USA,\
    \ 2019. Abhinav Jangda, Jun Huang, Guodong Liu, Amir Hossein Nodehi Sabet, Saeed\
    \ Maleki, Youshan Miao, Madanlal Musuvathi, Todd Mytkowicz, and Olli Saarikivi.\
    \ Breaking the computation and communication abstraction barrier in distributed\
    \ machine learning workloads. In Proceedings of the 27th ACM International Conference\
    \ on Architectural Support for Programming Languages and Operating Systems, ASPLOS\
    \ '22, page 402--416, New York, NY, USA, 2022. Association for Computing Machinery.\
    \ Zhihao Jia, Matei Zaharia, and Alex Aiken. Beyond data and model parallelism\
    \ for deep neural networks. CoRR, abs/1807.05358, 2018. Yimin Jiang, Yibo Zhu,\
    \ Chang Lan, Bairen Yi, Yong Cui, and Chuanxiong Guo. A unified architecture for\
    \ accelerating distributed DNN training in heterogeneous GPU/CPU clusters. In\
    \ 14th USENIX Symposium on Operating Systems Design and Implementation (OSDI 20),\
    \ pages 463--479. USENIX Association, November 2020. Jared Kaplan, Sam McCandlish,\
    \ Tom Henighan, Tom B. Brown, Benjamin Chess, Rewon Child, Scott Gray, Alec Radford,\
    \ Jeffrey Wu, and Dario Amodei. Scaling laws for neural language models. CoRR,\
    \ abs/2001.08361, 2020. Vijay Korthikanti, Jared Casper, Sangkug Lym, Lawrence\
    \ McAfee, Michael Andersch, Mohammad Shoeybi, and Bryan Catanzaro. Reducing activation\
    \ recomputation in large transformer models, 2022. Woosuk Kwon, Gyeong-In Yu,\
    \ Eunji Jeong, and Byung-Gon Chun. Nimble: Lightweight and parallel gpu task scheduling\
    \ for deep learning. In Proceedings of the 34th International Conference on Neural\
    \ Information Processing Systems, NIPS'20, Red Hook, NY, USA, 2020. Curran Associates\
    \ Inc. Joel Lamy-Poirier. Breadth-first pipeline parallelism, 2023. Shen Li, Yanli\
    \ Zhao, Rohan Varma, Omkar Salpekar, Pieter Noordhuis, Teng Li, Adam Paszke, Jeff\
    \ Smith, Brian Vaughan, Pritam Damania, and Soumith Chintala. Pytorch distributed:\
    \ Experiences on accelerating data parallel training. CoRR, abs/2006.15704, 2020.\
    \ Shigang Li and Torsten Hoefler. Chimera: Efficiently training large-scale neural\
    \ networks with bidirectional pipelines. In Proceedings of the International Conference\
    \ for High Performance Computing, Networking, Storage and Analysis, SC '21, New\
    \ York, NY, USA, 2021. Association for Computing Machinery. Kshiteej Mahajan,\
    \ Ching-Hsiang Chu, Srinivas Sridharan, and Aditya Akella. Better together: Jointly\
    \ optimizing ML collective scheduling and execution planning using SYNDICATE.\
    \ In 20th USENIX Symposium on Networked Systems Design and Implementation (NSDI\
    \ 23), pages 809--824, Boston, MA, April 2023. USENIX Association. Deepak Narayanan,\
    \ Mohammad Shoeybi, Jared Casper, Patrick LeGresley, Mostofa Patwary, Vijay Korthikanti,\
    \ Dmitri Vainbrand, Prethvi Kashinkunti, Julie Bernauer, Bryan Catanzaro, Amar\
    \ Phanishayee, and Matei Zaharia. Efficient large-scale language model training\
    \ on gpu clusters using megatron-lm. In Proceedings of the International Conference\
    \ for High Performance Computing, Networking, Storage and Analysis, SC '21, New\
    \ York, NY, USA, 2021. Association for Computing Machinery. NVDIA. Massively scale\
    \ your deep learning training with nccl 2.4. https://developer.nvidia.com/blog/massively-scale-deep-learning-training-nccl-2-4/.\
    \ NVIDIA. Nvidia dgx a100 system architecture. https://images.nvidia.com/aem-dam/en-zz/Solutions/data-center/dgx-a100/dgxa100-system-architecture-white-paper.pdf,\
    \ 2020. NVIDIA. NVIDIA Collective Communication Library (NCCL) Documentation.\
    \ https://docs.nvidia.com/deeplearning/nccl/user-guide/docs/index.html, 2022.\
    \ NVIDIA. NVLINK. https://www.nvidia.com/en-us/data-center/nvlink/, 2022. NVIDIA.\
    \ NVSWITCH: The world's highest-bandwidth on-node switch. https://images.nvidia.com/content/pdf/nvswitch-technical-overview.pdf,\
    \ 2022. Hyungjun Oh, Junyeol Lee, Hyeongju Kim, and Jiwon Seo. Out-of-order backprop:\
    \ An effective scheduling technique for deep learning. In Proceedings of the Seventeenth\
    \ European Conference on Computer Systems, EuroSys '22, page 435--452, New York,\
    \ NY, USA, 2022. Association for Computing Machinery. Yanghua Peng, Yibo Zhu,\
    \ Yangrui Chen, Yixin Bao, Bairen Yi, Chang Lan, Chuan Wu, and Chuanxiong Guo.\
    \ A generic communication scheduler for distributed dnn training acceleration.\
    \ In Proceedings of the 27th ACM Symposium on Operating Systems Principles, SOSP\
    \ '19, page 16--29, New York, NY, USA, 2019. Association for Computing Machinery.\
    \ Samyam Rajbhandari, Jeff Rasley, Olatunji Ruwase, and Yuxiong He. Zero: Memory\
    \ optimizations toward training trillion parameter models. In Proceedings of the\
    \ International Conference for High Performance Computing, Networking, Storage\
    \ and Analysis, SC '20. IEEE Press, 2020. Jeff Rasley, Samyam Rajbhandari, Olatunji\
    \ Ruwase, and Yuxiong He. Deepspeed: System optimizations enable training deep\
    \ learning models with over 100 billion parameters. In Proceedings of the 26th\
    \ ACM SIGKDD International Conference on Knowledge Discovery & Data Mining, KDD\
    \ '20, page 3505--3506, New York, NY, USA, 2020. Association for Computing Machinery.\
    \ Aashaka Shah, Vijay Chidambaram, Meghan Cowan, Saeed Maleki, Madan Musuvathi,\
    \ Todd Mytkowicz, Jacob Nelson, Olli Saarikivi, and Rachee Singh. Synthesizing\
    \ collective communication algorithms for heterogeneous networks with taccl. arXiv\
    \ preprint, 2021. Shaohuai Shi, Xiaowen Chu, and Bo Li. Exploiting simultaneous\
    \ communications to accelerate data parallel distributed deep learning. IEEE INFOCOM\
    \ 2021 - IEEE Conference on Computer Communications, pages 1--10, 2021. Mohammad\
    \ Shoeybi, Mostofa Patwary, Raul Puri, Patrick LeGresley, Jared Casper, and Bryan\
    \ Catanzaro. Megatron-lm: Training multi-billion parameter language models using\
    \ model parallelism. CoRR, abs/1909.08053, 2019. Rajeev Thakur and William D Gropp.\
    \ Improving the performance of collective operations in mpich. In European Parallel\
    \ Virtual Machine/Message Passing Interface Users' Group Meeting, pages 257--267.\
    \ Springer, 2003. Hugo Touvron, Thibaut Lavril, Gautier Izacard, Xavier Martinet,\
    \ Marie-Anne Lachaux, Timoth\xE9e Lacroix, Baptiste Rozi\xE8re, Naman Goyal, Eric\
    \ Hambro, Faisal Azhar, Aurelien Rodriguez, Armand Joulin, Edouard Grave, and\
    \ Guillaume Lample. Llama: Open and efficient foundation language models, 2023.\
    \ Thao Nguyen Truong, Mohamed Wahib, and Ryousei Takano. Efficient mpi-allreduce\
    \ for large-scale deep learning on gpu-clusters. Concurrency and Computation:\
    \ Practice and Experience, 33, 12 2019. Yuichiro Ueno and Rio Yokota. Exhaustive\
    \ study of hierarchical allreduce patterns for large messages between gpus. In\
    \ 2019 19th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing,\
    \ pages 430--439, 2019. Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit,\
    \ Llion Jones, Aidan N Gomez, \u0141 ukasz Kaiser, and Illia Polosukhin. Attention\
    \ is all you need. In I. Guyon, U. Von Luxburg, S. Bengio, H. Wallach, R. Fergus,\
    \ S. Vishwanathan, and R. Garnett, editors, Advances in Neural Information Processing\
    \ Systems, volume 30. Curran Associates, Inc., 2017. Guanhua Wang, Shivaram Venkataraman,\
    \ Amar Phanishayee, Jorgen Thelin, Nikhil R. Devanur, and Ion Stoica. Blink: Fast\
    \ and generic collectives for distributed ML. CoRR, abs/1910.04940, 2019. Shibo\
    \ Wang, Jinliang Wei, Amit Sabne, Andy Davis, Berkin Ilbeyi, Blake Hechtman, Dehao\
    \ Chen, Karthik Srinivasa Murthy, Marcello Maggioni, Qiao Zhang, Sameer Kumar,\
    \ Tongfei Guo, Yuanzhong Xu, and Zongwei Zhou. Overlap communication with dependent\
    \ computation via decomposition in large deep learning models. In Proceedings\
    \ of the 28th ACM International Conference on Architectural Support for Programming\
    \ Languages and Operating Systems, Volume 1, ASPLOS 2023, page 93--106, New York,\
    \ NY, USA, 2022. Association for Computing Machinery. L. Zhang, S. Shi, X. Chu,\
    \ W. Wang, B. Li, and C. Liu. Dear: Accelerating distributed deep learning with\
    \ fine-grained all-reduce pipelining. In 2023 IEEE 43rd International Conference\
    \ on Distributed Computing Systems (ICDCS), pages 142--153, Los Alamitos, CA,\
    \ USA, jul 2023. IEEE Computer Society. Yanli Zhao, Andrew Gu, Rohan Varma, Liang\
    \ Luo, Chien-Chin Huang, Min Xu, Less Wright, Hamid Shojanazeri, Myle Ott, Sam\
    \ Shleifer, Alban Desmaison, Can Balioglu, Pritam Damania, Bernard Nguyen, Geeta\
    \ Chauhan, Yuchen Hao, Ajit Mathews, and Shen Li. Pytorch fsdp: Experiences on\
    \ scaling fully sharded data parallel. Proc. VLDB Endow., 16(12):3848--3860, aug\
    \ 2023. Lianmin Zheng, Zhuohan Li, Hao Zhang, Yonghao Zhuang, Zhifeng Chen, Yanping\
    \ Huang, Yida Wang, Yuanzhong Xu, Danyang Zhuo, Eric P. Xing, Joseph E. Gonzalez,\
    \ and Ion Stoica. Alpa: Automating inter- and Intra-Operator parallelism for distributed\
    \ deep learning. In 16th USENIX Symposium on Operating Systems Design and Implementation\
    \ (OSDI 22), pages 559--578, Carlsbad, CA, July 2022. USENIX Association."
  title: 'Centauri: Enabling Efficient Scheduling for Communication-Computation Overlap
    in Large Model Training via Communication Partitioning'
  url: https://dl.acm.org/doi/10.1145/3620666.3651379
- abstract: Memory allocation constitutes a substantial component of warehouse-scale
    computation. Optimizing the memory allocator not only reduces the datacenter tax,
    but also improves application performance, leading to significant cost savings.
  keywords: Software and its engineering Software organization and properties Contextual
    software domains Operating systems Memory management Allocation / deallocation
    strategies Main memory
  references: "Completely Fair Scheduler. https://docs.kernel.org/scheduler/sched-design-CFS.html.\
    \ Eigen Linear Algebra Library. https://eigen.tuxfamily.org. Implement NUMA Awareness\
    \ in TCMalloc. https://github.com/google/tcmalloc/commit/ef7a3f8d794c42705bf4327ca79fa17186904801.\
    \ Intel Memory Latency Checker. https://www.intel.com/content/www/us/en/developer/articles/tool/intelr-memory-latency-checker.html.\
    \ mi-malloc. https://microsoft.github.io/mimalloc/. Redis. https://redis.io. Restartable\
    \ Sequences. https://github.com/torvalds/linux/commit/d82991a8688ad128b46db1b42d5d84396487a508.\
    \ Restartable Sequences. https://dynamorio.org/page_rseq.html. Strace: Linux Syscall\
    \ Tracer. https://strace.io. TCMalloc. https://github.com/google/tcmalloc. The\
    \ GNU C Library. https://www.gnu.org/software/libc. Transparent Hugepage Support.\
    \ https://www.kernel.org/doc/html/next/admin-guide/mm/transhuge.html. Colin Adams,\
    \ Luis Alonso, Ben Atkin, John P. Banning, Sumeer Bhola, Rick Buskens, Ming Chen,\
    \ Xi Chen, Yoo Chung, Qin Jia, Nick Sakharov, George T. Talbot, Adam Jacob Tart,\
    \ and Nick Taylor, editors. Monarch: Google's Planet-Scale In-Memory Time Series\
    \ Database, 2020. Yehuda Afek, Dave Dice, and Adam Morrison. Cache index-aware\
    \ memory allocation. ACM SIGPLAN Notices, 46(11):55--64, 2011. Emery D Berger,\
    \ Kathryn S McKinley, Robert D Blumofe, and Paul R Wilson. Hoard: A scalable memory\
    \ allocator for multithreaded applications. ACM Sigplan Notices, 35(11):117--128,\
    \ 2000. Fay Chang, Jeffrey Dean, Sanjay Ghemawat, Wilson C. Hsieh, Deborah A.\
    \ Wallach, Mike Burrows, Tushar Chandra, Andrew Fikes, and Robert E. Gruber. Bigtable:\
    \ A distributed storage system for structured data. ACM Trans. Comput. Syst.,\
    \ 26(2), jun 2008. Shuang Chen, Christina Delimitrou, and Jos\xE9 F Mart\xEDnez.\
    \ Parties: Qos-aware resource partitioning for multiple interactive services.\
    \ In Proceedings of the Twenty-Fourth International Conference on Architectural\
    \ Support for Programming Languages and Operating Systems, pages 107--120, 2019.\
    \ Jonathan Corbet. Extending restartable sequences with virtual CPU IDs. https://lwn.net/Articles/885818,\
    \ 2022. James C. Corbett, Jeffrey Dean, Michael Epstein, Andrew Fikes, Christopher\
    \ Frost, JJ Furman, Sanjay Ghemawat, Andrey Gubarev, Christopher Heiser, Peter\
    \ Hochschild, Wilson Hsieh, Sebastian Kanthak, Eugene Kogan, Hongyi Li, Alexander\
    \ Lloyd, Sergey Melnik, David Mwaura, David Nagle, Sean Quinlan, Rajesh Rao, Lindsay\
    \ Rolig, Dale Woodford, Yasushi Saito, Christopher Taylor, Michal Szymaniak, and\
    \ Ruth Wang. Spanner: Google's globally-distributed database. In OSDI, 2012. Jeff\
    \ Defilippi. Why Chiplets and why now? https://community.arm.com/arm-community-blogs/b/infrastructure-solutions-blog/posts/why-chiplets-why-now.\
    \ Christina Delimitrou and Christos Kozyrakis. Qos-aware scheduling in heterogeneous\
    \ datacenters with paragon. ACM Transactions on Computer Systems (TOCS), 31(4):1--34,\
    \ 2013. Christina Delimitrou and Christos Kozyrakis. Quasar: Resource-Efficient\
    \ and QoS-Aware Cluster Management. In Proceedings of the Nineteenth International\
    \ Conference on Architectural Support for Programming Languages and Operating\
    \ Systems (ASPLOS), March 2014. Lieven Eeckhout. Is moore's law slowing down?\
    \ what's next? IEEE Micro, 37(04):4--5, 2017. Hadi Esmaeilzadeh, Emily Blem, Ren\xE9\
    e St. Amant, Karthikeyan Sankaralingam, and Doug Burger. Dark silicon and the\
    \ end of multicore scaling. In 2011 38th Annual International Symposium on Computer\
    \ Architecture (ISCA), pages 365--376, 2011. Jason Evans. A scalable concurrent\
    \ malloc (3) implementation for freebsd. In Proc. of the bsdcan conference, ottawa,\
    \ canada, 2006. Jason Evans. Scalable memory allocation using jemalloc. https://engineering.fb.com/2011/01/03/core-infra/scalable-memory-allocation-using-jemalloc/,\
    \ 2011. Michael Ferdman, Almutaz Adileh, Onur Kocberber, Stavros Volos, Mohammad\
    \ Alisafaee, Djordje Jevdjic, Cansu Kaynak, Adrian Daniel Popescu, Anastasia Ailamaki,\
    \ and Babak Falsafi. Clearing the clouds: a study of emerging scale-out workloads\
    \ on modern hardware. Acm sigplan notices, 47(4):37--48, 2012. Yu Gan, Yanqi Zhang,\
    \ Dailun Cheng, Ankitha Shetty, Priyal Rathi, Nayan Katarki, Ariana Bruno, Justin\
    \ Hu, Brian Ritchken, Brendon Jackson, et al. An open-source benchmark suite for\
    \ microservices and their hardware-software implications for cloud & edge systems.\
    \ In Proceedings of the Twenty-Fourth International Conference on Architectural\
    \ Support for Programming Languages and Operating Systems, pages 3--18, 2019.\
    \ Abraham Gonzalez, Aasheesh Kolli, Samira Khan, Sihang Liu, Vidushi Dadu, Sagar\
    \ Karandikar, Jichuan Chang, Krste Asanovic, and Parthasarathy Ranganathan. Profiling\
    \ hyperscale big data processing. In Proceedings of the 50th Annual International\
    \ Symposium on Computer Architecture, pages 1--16, 2023. Yacine Hadjadj, Chakib\
    \ Mustapha Anouar Zouaoui, Nasreddine Taleb, Sarah Mazari, Mohamed El Bahri, and\
    \ Miloud Chikr El Mezouar. Vc-malloc: A virtually contiguous memory allocator.\
    \ IEEE Transactions on Computers, 2023. Md E Haque, Yuxiong He, Sameh Elnikety,\
    \ Thu D Nguyen, Ricardo Bianchini, and Kathryn S McKinley. Exploiting heterogeneity\
    \ for tail latency and energy efficiency. In Proceedings of the 50th Annual IEEE/ACM\
    \ International Symposium on Microarchitecture, pages 625--638, 2017. John L Henning.\
    \ Spec cpu2006 benchmark descriptions. ACM SIGARCH Computer Architecture News,\
    \ 34(4):1--17, 2006. A.H. Hunter, Chris Kennelly, Paul Turner, Darryl Gove, Tipp\
    \ Moseley, and Parthasarathy Ranganathan. Beyond malloc efficiency to fleet efficiency:\
    \ a hugepage-aware memory allocator. In 15th USENIX Symposium on Operating Systems\
    \ Design and Implementation (OSDI 21), pages 257--273. USENIX Association, July\
    \ 2021. Svilen Kanev, Juan Pablo Darago, Kim Hazelwood, Parthasarathy Ranganathan,\
    \ Tipp Moseley, Gu-Yeon Wei, and David Brooks. Profiling a warehouse-scale computer.\
    \ In Proceedings of the 42nd Annual International Symposium on Computer Architecture,\
    \ ISCA '15, page 158--169, New York, NY, USA, 2015. Association for Computing\
    \ Machinery. Svilen Kanev, Sam Likun Xi, Gu-Yeon Wei, and David Brooks. Mallacc:\
    \ Accelerating memory allocation. SIGPLAN Not., 52(4):33--45, apr 2017. Harshad\
    \ Kasture and Daniel Sanchez. Tailbench: a benchmark suite and evaluation methodology\
    \ for latency-critical applications. In 2016 IEEE International Symposium on Workload\
    \ Characterization (IISWC), pages 1--10. IEEE, 2016. Changkyu Kim, Doug Burger,\
    \ and Stephen W. Keckler. An adaptive, non-uniform cache structure for wire-delay\
    \ dominated on-chip caches. SIGARCH Comput. Archit. News, 30(5):211--222, oct\
    \ 2002. Christos Kozyrakis, Aman Kansal, Sriram Sankar, and Kushagra Vaid. Server\
    \ engineering insights for large-scale online services. IEEE micro, 30(4):8--19,\
    \ 2010. Bradley C Kuszmaul. Supermalloc: A super fast multithreaded malloc for\
    \ 64-bit machines. In Proceedings of the 2015 International Symposium on Memory\
    \ Management, pages 41--55, 2015. Youngjin Kwon, Hangchen Yu, Simon Peter, Christopher\
    \ J. Rossbach, and Emmett Witchel. Coordinated and efficient huge page management\
    \ with ingens. In 12th USENIX Symposium on Operating Systems Design and Implementation\
    \ (OSDI 16), pages 705--721, Savannah, GA, November 2016. USENIX Association.\
    \ Jaekyu Lee, Hyesoon Kim, and Richard Vuduc. When prefetching works, when it\
    \ doesn't, and why. ACM Trans. Archit. Code Optim., 9(1), mar 2012. Daan Leijen,\
    \ Benjamin Zorn, and Leonardo de Moura. Mimalloc: Free list sharding in action.\
    \ In Programming Languages and Systems: 17th Asian Symposium, APLAS 2019, Nusa\
    \ Dua, Bali, Indonesia, December 1--4, 2019, Proceedings 17, pages 244--265. Springer,\
    \ 2019. Charles E. Leiserson, Neil C. Thompson, Joel S. Emer, Bradley C. Kuszmaul,\
    \ Butler W. Lampson, Daniel Sanchez, and Tao B. Schardl. There's plenty of room\
    \ at the top: What will drive computer performance after moore's law? Science,\
    \ 368(6495):eaam9744, 2020. Charles E Leiserson, Neil C Thompson, Joel S Emer,\
    \ Bradley C Kuszmaul, Butler W Lampson, Daniel Sanchez, and Tao B Schardl. There's\
    \ plenty of room at the top: What will drive computer performance after moore's\
    \ law? Science, 368(6495):eaam9744, 2020. Ruihao Li, Qinzhe Wu, Krishna Kavi,\
    \ Gayatri Mehta, Neeraja J Yadwadkar, and Lizy K John. Nextgen-malloc: Giving\
    \ memory allocator its own room in the house. In Proceedings of the 19th Workshop\
    \ on Hot Topics in Operating Systems, pages 135--142, 2023. Paul Li\xE9tar, Theodore\
    \ Butler, Sylvan Clebsch, Sophia Drossopoulou, Juliana Franco, Matthew J Parkinson,\
    \ Alex Shamis, Christoph M Wintersteiger, and David Chisnall. Snmalloc: a message\
    \ passing allocator. In Proceedings of the 2019 ACM SIGPLAN International Symposium\
    \ on Memory Management, pages 122--135, 2019. David Lo, Liqun Cheng, Rama Govindaraju,\
    \ Parthasarathy Ranganathan, and Christos Kozyrakis. Heracles: Improving resource\
    \ efficiency at scale. In Proceedings of the 42nd Annual International Symposium\
    \ on Computer Architecture, pages 450--462, 2015. Martin Maas, David G. Andersen,\
    \ Michael Isard, Mohammad Mahdi Javanmard, Kathryn S. McKinley, and Colin Raffel.\
    \ Learning-based memory allocation for c++ server workloads. In Proceedings of\
    \ the Twenty-Fifth International Conference on Architectural Support for Programming\
    \ Languages and Operating Systems, ASPLOS '20, page 541--556, New York, NY, USA,\
    \ 2020. Association for Computing Machinery. Martin Maas, Chris Kennelly, Khanh\
    \ Nguyen, Darryl Gove, Kathryn S McKinley, and Paul Turner. Adaptive huge-page\
    \ subrelease for non-moving memory allocators in warehouse-scale computers. In\
    \ Proceedings of the 2021 ACM SIGPLAN International Symposium on Memory Management,\
    \ pages 28--38, 2021. Samuel Naffziger, Noah Beck, Thomas Burd, Kevin Lepak, Gabriel\
    \ H. Loh, Mahesh Subramony, and Sean White. Pioneering chiplet technology and\
    \ design for the amd epyc\u2122 and ryzen\u2122 processor families. In Proceedings\
    \ of the 48th Annual International Symposium on Computer Architecture, ISCA '21,\
    \ page 57--70. IEEE Press, 2021. Christopher Olston, Noah Fiedel, Kiril Gorovoy,\
    \ Jeremiah Harmsen, Li Lao, Fangwei Li, Vinu Rajashekhar, Sukriti Ramesh, and\
    \ Jordan Soyke. Tensorflow-serving: Flexible, high-performance ml serving, 2017.\
    \ Maksim Panchenko, Rafael Auler, Bill Nell, and Guilherme Ottoni. Bolt: A practical\
    \ binary optimizer for data centers and beyond. In Proceedings of the 2019 IEEE/ACM\
    \ International Symposium on Code Generation and Optimization, CGO 2019, page\
    \ 2--14. IEEE Press, 2019. Ashish Panwar, Sorav Bansal, and K Gopinath. Hawkeye:\
    \ Efficient fine-grained os support for huge pages. In Proceedings of the Twenty-Fourth\
    \ International Conference on Architectural Support for Programming Languages\
    \ and Operating Systems, pages 347--360, 2019. Ashish Panwar, Aravinda Prasad,\
    \ and K Gopinath. Making huge pages actually useful. In Proceedings of the Twenty-Third\
    \ International Conference on Architectural Support for Programming Languages\
    \ and Operating Systems, pages 679--692, 2018. Bobby Powers, David Tench, Emery\
    \ D Berger, and Andrew McGregor. Mesh: Compacting memory management for c/c++\
    \ applications. In Proceedings of the 40th ACM SIGPLAN Conference on Programming\
    \ Language Design and Implementation, pages 333--346, 2019. Venkat Sri Sai Ram,\
    \ Ashish Panwar, and Arkaprava Basu. Trident: Harnessing architectural resources\
    \ for all page sizes in x86 processors. In MICRO-54: 54th Annual IEEE/ACM International\
    \ Symposium on Microarchitecture, pages 1106--1120, 2021. Gang Ren, Eric Tune,\
    \ Tipp Moseley, Yixin Shi, Silvius Rus, and Robert Hundt. Google-wide profiling:\
    \ A continuous profiling infrastructure for data centers. IEEE Micro, pages 65--79,\
    \ 2010. Bart Samwel, John Cieslewicz, Ben Handy, Jason Govig, Petros Venetis,\
    \ Chanjun Yang, Keith Peters, Jeff Shute, Daniel Tenedorio, Himani Apte, Felix\
    \ Weigel, David Wilhite, Jiacheng Yang, Jun Xu, Jiexing Li, Zhan Yuan, Craig Chasseur,\
    \ Qiang Zeng, Ian Rae, Anurag Biyani, Andrew Harn, Yang Xia, Andrey Gubichev,\
    \ Amr El-Helw, Orri Erling, Zhepeng Yan, Mohan Yang, Yiqun Wei, Thanh Do, Colin\
    \ Zheng, Goetz Graefe, Somayeh Sardashti, Ahmed M. Aly, Divy Agrawal, Ashish Gupta,\
    \ and Shiv Venkataraman. F1 query: declarative querying at scale. Proc. VLDB Endow.,\
    \ 11(12):1835--1848, aug 2018. Korakit Seemakhupt, Brent E Stephens, Samira Khan,\
    \ Sihang Liu, Hassan Wassel, Soheil Hassas Yeganeh, Alex C Snoeren, Arvind Krishnamurthy,\
    \ David E Culler, and Henry M Levy. A cloud-scale characterization of remote procedure\
    \ calls. In Proceedings of the 29th Symposium on Operating Systems Principles\
    \ (SOSP 23), pages 498--514, 2023. Han Shen, Krzysztof Pszeniczny, Rahman Lavaee,\
    \ Snehasish Kumar, Sriraman Tallam, and Xinliang David Li. Propeller: A profile\
    \ guided, relinking optimizer for warehouse-scale applications. In Proceedings\
    \ of the 28th ACM International Conference on Architectural Support for Programming\
    \ Languages and Operating Systems, Volume 2, ASPLOS 2023, page 617--631, New York,\
    \ NY, USA, 2023. Association for Computing Machinery. Teja Singh, Sundar Rangarajan,\
    \ Deepesh John, Russell Schreiber, Spence Oliver, Rajit Seahra, and Alex Schaefer.\
    \ 2.1 zen 2: The amd 7nm energy-efficient high-performance x86-64 microprocessor\
    \ core. In 2020 IEEE International Solid-State Circuits Conference-(ISSCC), pages\
    \ 42--44. IEEE, 2020. Akshitha Sriraman and Abhishek Dhanotia. Accelerometer:\
    \ Understanding acceleration opportunities for data center overheads at hyperscale.\
    \ In Proceedings of the Twenty-Fifth International Conference on Architectural\
    \ Support for Programming Languages and Operating Systems, ASPLOS '20, page 733--750,\
    \ New York, NY, USA, 2020. Association for Computing Machinery. Akshitha Sriraman,\
    \ Abhishek Dhanotia, and Thomas F. Wenisch. Soft-sku: Optimizing server architectures\
    \ for microservice diversity @scale. In Proceedings of the 46th International\
    \ Symposium on Computer Architecture, ISCA '19, page 513--526, New York, NY, USA,\
    \ 2019. Association for Computing Machinery. Akshitha Sriraman and Thomas F Wenisch.\
    \ \u03BC suite: a benchmark suite for microservices. In 2018 IEEE International\
    \ Symposium on Workload Characterization (IISWC), pages 1--12. IEEE, 2018. Christian\
    \ Szegedy, Vincent Vanhoucke, Sergey Ioffe, Jon Shlens, and Zbigniew Wojna. Rethinking\
    \ the inception architecture for computer vision. In Proceedings of the IEEE conference\
    \ on computer vision and pattern recognition, pages 2818--2826, 2016. Zi Yan,\
    \ Daniel Lustig, David Nellans, and Abhishek Bhattacharjee. Translation ranger:\
    \ Operating system support for contiguity-aware tlbs. In Proceedings of the 46th\
    \ International Symposium on Computer Architecture, pages 698--710, 2019. Hanmei\
    \ Yang, Xin Zhao, Jin Zhou, Wei Wang, Sandip Kundu, Bo Wu, Hui Guan, and Tongping\
    \ Liu. Numalloc: A faster numa memory allocator. In Proceedings of the 2023 ACM\
    \ SIGPLAN International Symposium on Memory Management, pages 97--110, 2023. Ahmad\
    \ Yasin. A top-down method for performance analysis and counters architecture.\
    \ In 2014 IEEE International Symposium on Performance Analysis of Systems and\
    \ Software (ISPASS), pages 35--44, 2014. Ahmad Yasin, Yosi Ben-Asher, and Avi\
    \ Mendelson. Deep-dive analysis of the data analytics workload in cloudsuite.\
    \ In 2014 IEEE International Symposium on Workload Characterization (IISWC), pages\
    \ 202--211. IEEE, 2014. Kaiyang Zhao, Kaiwen Xue, Ziqi Wang, Dan Schatzberg, Leon\
    \ Yang, Antonis Manousis, Johannes Weiner, Rik Van Riel, Bikash Sharma, Chunqiang\
    \ Tang, et al. Contiguitas: The pursuit of physical memory contiguity in datacenters.\
    \ In Proceedings of the 50th Annual International Symposium on Computer Architecture,\
    \ pages 1--15, 2023."
  title: Characterizing a Memory Allocator at Warehouse Scale
  url: https://dl.acm.org/doi/10.1145/3620666.3651350
- abstract: Recent innovation in large language models (LLMs), and their myriad use
    cases have rapidly driven up the compute demand for datacenter GPUs. Several cloud
    providers and other enterprises plan to substantially grow their datacenter capacity
    to support these new workloads. A key bottleneck resource in datacenters is power,
    which LLMs are quickly saturating due to their rapidly increasing model sizes.
  keywords: Applied computing Enterprise computing Enterprise information systems
    Data centers Computer systems organization Architectures Distributed architectures
    Cloud computing Hardware Power and energy Power estimation and optimization Enterprise
    level and data centers power issues Information systems Information retrieval
    Retrieval models and ranking Language models
  references: "Amazon SageMaker. https://aws.amazon.com/sagemaker, 2023. Azure Machine\
    \ Learning - ML as a Service. https://azure.microsoft.com/en-us/products/machine-learning,\
    \ 2023. AMD. ROCm Open Software Platform for GPU Compute. https://www.amd.com/en/graphics/servers-solutions-rocm.\
    \ Reza Yazdani Aminabadi, Samyam Rajbhandari, Ammar Ahmad Awan, Cheng Li, Du Li,\
    \ Elton Zheng, Olatunji Ruwase, Shaden Smith, Minjia Zhang, Jeff Rasley, and Yuxiong\
    \ He. DeepSpeed-Inference: Enabling Efficient Inference of Transformer Models\
    \ at Unprecedented Scale. In SC, 2022. Alex Andonian, Quentin Anthony, Stella\
    \ Biderman, Sid Black, Preetham Gali, Leo Gao, Eric Hallahan, Josh Levy-Kramer,\
    \ Connor Leahy, Lucas Nestler, Kip Parker, Michael Pieler, Shivanshu Purohit,\
    \ Tri Songz, Wang Phil, and Samuel Weinbach. GPT-NeoX: Large Scale Autoregressive\
    \ Language Modeling in PyTorch. https://www.github.com/eleutherai/gpt-neox, 2021.\
    \ Microsoft Azure. Azure OpenAI Service. https://azure.microsoft.com/en-us/products/ai-services/openai-service,\
    \ 2022. Luiz Andr\xE9 Barroso, Urs H\xF6lzle, and Parthasarathy Ranganathan. The\
    \ Datacenter as a Computer: Designing Warehouse-Scale Machines. Synthesis Lectures\
    \ on Computer Architecture, 2018. Emily M Bender, Timnit Gebru, Angelina McMillan-Major,\
    \ and Shmargaret Shmitchell. On the Dangers of Stochastic Parrots: Can Language\
    \ Models Be Too Big? In FAccT, 2021. Srikant Bharadwaj, Shomit Das, Kaushik Mazumdar,\
    \ Bradford Beckmann, and Stephen Kosonocky. Predict; Do Not React for Enabling\
    \ Efficient Fine Grain DVFS in GPUs. In ASPLOS, 2023. Tom B. Brown, Benjamin Mann,\
    \ Nick Ryder, Melanie Subbiah, Jared Kaplan, Prafulla Dhariwal, Arvind Neelakantan,\
    \ Pranav Shyam, Girish Sastry, Amanda Askell, Sandhini Agarwal, Ariel Herbert-Voss,\
    \ Gretchen Krueger, Tom Henighan, Rewon Child, Aditya Ramesh, Daniel M. Ziegler,\
    \ Jeffrey Wu, Clemens Winter, Christopher Hesse, Mark Chen, Eric Sigler, Mateusz\
    \ Litwin, Scott Gray, Benjamin Chess, Jack Clark, Christopher Berner, Sam McCandlish,\
    \ Alec Radford, Ilya Sutskever, and Dario Amodei. Language Models Are Few-Shot\
    \ Learners. In NeurIPS, 2020. Sangjin Choi, Inhoe Koo, Jeongseob Ahn, Myeongjae\
    \ Jeon, and Youngjin Kwon. EnvPipe: Performance-preserving DNN Training Framework\
    \ for Saving Energy. In USENIX ATC, 2023. Hyung Won Chung, Le Hou, Shayne Longpre,\
    \ Barret Zoph, Yi Tay, William Fedus, Eric Li, Xuezhi Wang, Mostafa Dehghani,\
    \ Siddhartha Brahma, et al. Scaling Instruction-Finetuned Language Models. arXiv\
    \ preprint arXiv:2210.11416, 2022. Tim Dettmers, Mike Lewis, Younes Belkada, and\
    \ Luke Zettlemoyer. LLM.int8(): 8-bit Matrix Multiplication for Transformers at\
    \ Scale. In NeurIPS, 2022. Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina\
    \ Toutanova. BERT: Pre-training of Deep Bidirectional Transformers for Language\
    \ Understanding. In NAACL, 2019. Xiaobo Fan, Wolf-Dietrich Weber, and Luiz Andre\
    \ Barroso. Power Provisioning for a Warehouse-sized Computer. In ISCA, 2007. International\
    \ Institute for Strategic Studies. Large Language Models: Fast Proliferation and\
    \ Budding International Competition. Strategic Comments, 2023. Xing Fu, Xiaorui\
    \ Wang, and Charles Lefurgy. How Much Power Oversubscription is Safe and Allowed\
    \ in Data Centers? In ICAC, 2011. GitHub. bitsandbytes: Memory decreases but latency\
    \ increases. https://github.com/TimDettmers/bitsandbytes/issues/6, 2022. Sriram\
    \ Govindan, Jeonghwan Choi, Bhuvan Urgaonkar, Anand Sivasubramaniam, and Andrea\
    \ Baldini. Statistical Profiling-based Techniques for Effective Power Provisioning\
    \ in Data Centers. In EuroSys, 2009. Sylvain Gugger, Lysandre Debut, Thomas Wolf,\
    \ Philipp Schmid, Zachary Mueller, and Sourab Mangrulkar. Accelerate: Training\
    \ and Inference at Scale Made Simple, Efficient and Adaptable. https://github.com/huggingface/accelerate,\
    \ 2022. Kim Hazelwood, Sarah Bird, David Brooks, Soumith Chintala, Utku Diril,\
    \ Dmytro Dzhulgakov, Mohamed Fawzy, Bill Jia, Yangqing Jia, Aditya Kalro, James\
    \ Law, Kevin Lee, Jason Lu, Pieter Noordhuis, Misha Smelyanskiy, Liang Xiong,\
    \ and Xiaodong Wang. Applied Machine Learning at Facebook: A Datacenter Infrastructure\
    \ Perspective. In HPCA, 2018. Miro Hodak, Masha Gorkovenko, and Ajay Dholakia.\
    \ Towards Power Efficiency in Deep Learning on Data Center Hardware. In BigData,\
    \ 2019. Chang-Hong Hsu, Qingyuan Deng, Jason Mars, and Lingjia Tang. SmoothOperator:\
    \ Reducing Power Fragmentation and Improving Power Utilization in Large-Scale\
    \ Datacenters. In ASPLOS, 2018. Qinghao Hu, Peng Sun, Shengen Yan, Yonggang Wen,\
    \ and Tianwei Zhang. Characterization and Prediction of Deep Learning Workloads\
    \ in Large-scale GPU Datacenters. In SC, 2021. Yanping Huang, Youlong Cheng, Ankur\
    \ Bapna, Orhan Firat, Dehao Chen, Mia Chen, HyoukJoong Lee, Jiquan Ngiam, Quoc\
    \ V Le, Yonghui Wu, et al. Gpipe: Efficient Training of Giant Neural Networks\
    \ Using Pipeline Parallelism. In NeurIPS, 2019. Intel, Hewlett Packard, NEC, and\
    \ Dell. Intelligent Platform Management Interface Specification (IPMI). https://www.intel.in/content/www/in/en/products/docs/servers/ipmi/ipmi-second-gen-interface-spec-v2-rev1-1.html,\
    \ 2013. Ali Jahanshahi, Hadi Zamani Sabzi, Chester Lau, and Daniel Wong. GPU-NEST:\
    \ Characterizing Energy Efficiency of Multi-GPU Inference Servers. In CAL, 2020.\
    \ Majid Jalili, Ioannis Manousakis, \xCD\xF1igo Goiri, Pulkit A. Misra, Ashish\
    \ Raniwala, Husam Alissa, Bharath Ramakrishnan, Phillip Tuma, Christian Belady,\
    \ Marcus Fontoura, and Ricardo Bianchini. Cost-Efficient Overclocking in Immersion-Cooled\
    \ Datacenters. In ISCA, 2021. Myeongjae Jeon, Shivaram Venkataraman, Amar Phanishayee,\
    \ Junjie Qian, Wencong Xiao, and Fan Yang. Analysis of Large-Scale Multi-Tenant\
    \ GPU clusters for DNN Training Workloads. In USENIX ATC, 2019. Kashif Nizam Khan,\
    \ Mikael Hirki, Tapio Niemi, Jukka K. Nurminen, and Zhonghong Ou. RAPL in Action:\
    \ Experiences in Using RAPL for Power Measurements. 2018. Alok Gautam Kumbhare,\
    \ Reza Azimi, Ioannis Manousakis, Anand Bonde, Felipe Frujeri, Nithish Mahalingam,\
    \ Pulkit A. Misra, Seyyed Ahmad Javadi, Bianca Schroeder, Marcus Fontoura, and\
    \ Ricardo Bianchini. Prediction-Based Power Oversubscription in Cloud Platforms.\
    \ In USENIX ATC, 2021. Woosuk Kwon, Zhuohan Li, Siyuan Zhuang, Ying Sheng, Lianmin\
    \ Zheng, Cody Hao Yu, Joseph E. Gonzalez, Hao Zhang, and Ion Stoica. Efficient\
    \ Memory Management for Large Language Model Serving with PagedAttention. In SOSP,\
    \ 2023. Baolin Li, Rohin Arora, Siddharth Samsi, Tirthak Patel, William Arcand,\
    \ David Bestor, Chansup Byun, Rohan Basu Roy, Bill Bergeron, John Holodnak, Michael\
    \ Houle, Matthew Hubbell, Michael Jones, Jeremy Kepner, Anna Klein, Peter Michaleas,\
    \ Joseph McDonald, Lauren Milechin, Julie Mullen, Andrew Prout, Benjamin Price,\
    \ Albert Reuther, Antonio Rosa, Matthew Weiss, Charles Yee, Daniel Edelman, Allan\
    \ Vanterpool, Anson Cheng, Vijay Gadepally, and Devesh Tiwari. AI-Enabling Workloads\
    \ on Large-Scale GPU-Accelerated System: Characterization, Opportunities, and\
    \ Implications. In HPCA, 2022. Shaohong Li, Xi Wang, Xiao Zhang, Vasileios Kontorinis,\
    \ Sreekumar Kodakara, David Lo, and Parthasarathy Ranganathan. Thunderbolt: Throughput-Optimized,\
    \ Quality-of-Service-Aware Power Capping at Scale. In OSDI, 2020. Shen Li, Yanli\
    \ Zhao, Rohan Varma, Omkar Salpekar, Pieter Noordhuis, Teng Li, Adam Paszke, Jeff\
    \ Smith, Brian Vaughan, Pritam Damania, and Soumith Chintala. Pytorch Distributed:\
    \ Experiences on Accelerating Data Parallel Training. In VLDB, 2020. Yang Li,\
    \ Charles R Lefurgy, Karthick Rajamani, Malcolm S Allen-Ware, Guillermo J Silva,\
    \ Daniel D Heimsoth, Saugata Ghose, and Onur Mutlu. A Scalable Priority-aware\
    \ Approach to Managing Data Center Server Power. In HPCA, 2019. Yinhan Liu, Myle\
    \ Ott, Naman Goyal, Jingfei Du, Mandar Joshi, Danqi Chen, Omer Levy, Mike Lewis,\
    \ Luke Zettlemoyer, and Veselin Stoyanov. RoBERTa: A Robustly Optimized BERT Pretraining\
    \ Approach. arXiv preprint arXiv:1907.11692, 2019. Meta. Introducing the AI Research\
    \ SuperCluster --- Meta's Cutting-edge AI Supercomputer for AI Research. https://ai.facebook.com/blog/ai-rsc/.\
    \ Microsoft. DeepSpeed: Model Implementations for Inference (MII). https://github.com/microsoft/DeepSpeed-MII.\
    \ Seyed Morteza Nabavinejad, Sherief Reda, and Masoumeh Ebrahimi. Coordinated\
    \ Batching and DVFS for DNN Inference on GPU Accelerators. TPDS, 2022. Bin Nie,\
    \ Ji Xue, Saurabh Gupta, Christian Engelmann, Evgenia Smirni, and Devesh Tiwari.\
    \ Characterizing Temperature, Power, and Soft-error Behaviors in Data Center Systems:\
    \ Insights, Challenges, and Opportunities. In MASCOTS, 2017. NVIDIA. Data Center\
    \ GPU Driver. https://docs.nvidia.com/datacenter/tesla/pdf/NVIDIA_Data_Center_GPU_Driver_Release_Notes_450_v1.pdf.\
    \ NVIDIA. Data Center GPU Manager (DCGM). https://developer.nvidia.com/dcgm. NVIDIA.\
    \ DGX A100: The Universal System for AI Infrastructure. https://resources.nvidia.com/en-us-dgx-systems/dgx-ai.\
    \ NVIDIA. DGX H100. https://www.nvidia.com/en-us/data-center/dgx-h100/. NVIDIA.\
    \ NVIDIA A100 80GB PCIe GPU Product Brief. https://www.nvidia.com/content/dam/en-zz/Solutions/Data-Center/a100/pdf/PB-10577-001_v02.pdf.\
    \ NVIDIA. System Management Interface (nvidia-smi). https://developer.nvidia.com/nvidia-system-management-interface.\
    \ OpenAI. Scaling Kubernetes to 7,500 Nodes. https://openai.com/research/scaling-kubernetes-to-7500-nodes.\
    \ Pratyush Patel, Esha Choukse, Chaojie Zhang, \xCD\xF1igo Goiri, Aashaka Shah,\
    \ Saeed Maleki, and Ricardo Bianchini. Splitwise: Efficient Generative LLM Inference\
    \ Using Phase Splitting. arXiv preprint arXiv:2311.18677, 2023. Pratyush Patel,\
    \ Esha Choukse, Chaojie Zhang, \xCD\xF1igo Goiri, Brijesh Warrier, Nithish Mahalingam,\
    \ and Ricardo Bianchini. POLCA: Power Oversubscription in LLM Cloud Providers.\
    \ arXiv preprint arXiv:2308.12908, 2023. Pratyush Patel, Zibo Gong, Syeda Rizvi,\
    \ Esha Choukse, Pulkit Misra, Thomas Anderson, and Akshitha Sriraman. Towards\
    \ Improved Power Management in Cloud GPUs. In CAL, 2023. Tapasya Patki, Zachary\
    \ Frye, Harsh Bhatia, Francesco Di Natale, James Glosli, Helgi Ingolfsson, and\
    \ Barry Rountree. Comparing GPU Power and Frequency Capping: A Case Study with\
    \ the MuMMI Workflow. In WORK, 2019. David Patterson, Joseph Gonzalez, Urs H\xF6\
    lzle, Quoc Le, Chen Liang, Lluis-Miquel Munguia, Daniel Rothchild, David R So,\
    \ Maud Texier, and Jeff Dean. The Carbon Footprint of Machine Learning Training\
    \ Will Plateau, Then Shrink. Computer, 2022. Martin Peres. Reverse Engineering\
    \ Power Management on NVIDIA GPUs - A Detailed Overview. In XDC, 2013. Pavlos\
    \ Petoumenos, Lev Mukhanov, Zheng Wang, Hugh Leather, and Dimitrios S. Nikolopoulos.\
    \ Power Capping: What Works, What Does Not. In ICPADS, 2015. Google Cloud Platform.\
    \ Vertex AI. https://cloud.google.com/vertex-ai, 2023. Alec Radford, Jeffrey Wu,\
    \ Rewon Child, David Luan, Dario Amodei, and Ilya Sutskever. Language Models are\
    \ Unsupervised Multitask Learners, 2019. Parthasarathy Ranganathan, Phil Leech,\
    \ David Irwin, and Jeffrey Chase. Ensemble-level Power Management for Dense Blade\
    \ Servers. In ISCA, 2006. Tirias Research. Why Your AI infrastructure Needs Both\
    \ Training and Inference. 2019. Philipp Schmid. Fine-tune FLAN-T5 XL/XXL using\
    \ DeepSpeed & Hugging Face Transformers. https://www.philschmid.de/fine-tune-flan-t5-deepspeed.\
    \ Amazon Web Services. Amazon EC2 Update - Inf1 Instances with AWS Inferentia\
    \ Chips for High Performance Cost-Effective Inferencing. https://aws.amazon.com/blogs/aws/amazon-ec2-update-inf1-instances-with-aws-inferentia-chips-for-high-performance-cost-effective-inferencing/.\
    \ Amazon Web Services. AWS Trainium: High-performance Machine Learning Training\
    \ Accelerator, Purpose Built by AWS. https://aws.amazon.com/machine-learning/trainium/.\
    \ Mohammad Shoeybi, Mostofa Patwary, Raul Puri, Patrick LeGresley, Jared Casper,\
    \ and Bryan Catanzaro. Megatron-LM: Training Multi-billion Parameter Language\
    \ Models Using Model Parallelism. arXiv preprint arXiv:1909.08053, 2019. Dharma\
    \ Shukla, Muthian Sivathanu, Srinidhi Viswanatha, Bhargav Gulavani, Rimma Nehme,\
    \ Amey Agrawal, Chen Chen, Nipun Kwatra, Ramachandran Ramjee, Pankaj Sharma, Atul\
    \ Katiyar, Vipul Modi, Vaibhav Sharma, Abhishek Singh, Shreshth Singhal, Kaustubh\
    \ Welankar, Lu Xun, Ravi Anupindi, Karthik Elangovan, and Mark Russinovich. Singularity:\
    \ Planet-scale, Preemptive and Elastic Scheduling of AI Workloads. arXiv preprint\
    \ arXiv:2202.07848, 2022. Prasoon Sinha, Akhil Guliani, Rutwik Jain, Brandon Tran,\
    \ Matthew D Sinclair, and Shivaram Venkataraman. Not All GPUs Are Created Equal:\
    \ Characterizing Variability in Large-scale, Accelerator-rich Systems. In SC,\
    \ 2022. Hugo Touvron, Louis Martin, Kevin Stone, Peter Albert, Amjad Almahairi,\
    \ Yasmine Babaei, Nikolay Bashlykov, Soumya Batra, Prajjwal Bhargava, Shruti Bhosale,\
    \ Dan Bikel, Lukas Blecher, Cristian Canton Ferrer, Moya Chen, Guillem Cucurull,\
    \ David Esiobu, Jude Fernandes, Jeremy Fu, Wenyin Fu, Brian Fuller, Cynthia Gao,\
    \ Vedanuj Goswami, Naman Goyal, Anthony Hartshorn, Saghar Hosseini, Rui Hou, Hakan\
    \ Inan, Marcin Kardas, Viktor Kerkez, Madian Khabsa, Isabel Kloumann, Artem Korenev,\
    \ Punit Singh Koura, Marie-Anne Lachaux, Thibaut Lavril, Jenya Lee, Diana Liskovich,\
    \ Yinghai Lu, Yuning Mao, Xavier Martinet, Todor Mihaylov, Pushkar Mishra, Igor\
    \ Molybog, Yixin Nie, Andrew Poulton, Jeremy Reizenstein, Rashi Rungta, Kalyan\
    \ Saladi, Alan Schelten, Ruan Silva, Eric Michael Smith, Ranjan Subramanian, Xiaoqing\
    \ Ellen Tan, Binh Tang, Ross Taylor, Adina Williams, Jian Xiang Kuan, Puxin Xu,\
    \ Zheng Yan, Iliyan Zarov, Yuchen Zhang, Angela Fan, Melanie Kambadur, Sharan\
    \ Narang, Aurelien Rodriguez, Robert Stojnic, Sergey Edunov, and Thomas Scialom.\
    \ Llama 2: Open Foundation and Fine-tuned Chat Models. arXiv preprint arXiv:2307.09288,\
    \ 2023. Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones,\
    \ Aidan N Gomez, \u0141ukasz Kaiser, and Illia Polosukhin. Attention is All You\
    \ Need. In NeurIPS, 2017. Lan Vu, Hari Sivaraman, and Rishi Bidarkar. GPU Virtualization\
    \ for High Performance General Purpose Computing on the ESX Hypervisor. In HPC,\
    \ 2014. Thomas Wolf, Lysandre Debut, Victor Sanh, Julien Chaumond, Clement Delangue,\
    \ Anthony Moi, Pierric Cistac, Tim Rault, R\xE9mi Louf, Morgan Funtowicz, Joe\
    \ Davison, Sam Shleifer, Patrick von Platen, Clara Ma, Yacine Jernite, Julien\
    \ Plu, Canwen Xu, Teven Le Scao, Sylvain Gugger, Mariama Drame, Quentin Lhoest,\
    \ and Alexander M. Rush. Transformers: State-of-the-art Natural Language Processing.\
    \ In EMNLP, 2020. BigScience Workshop, Teven Le Scao, Angela Fan, Christopher\
    \ Akiki, Ellie Pavlick, Suzana Ili\u0107, Daniel Hesslow, Roman Castagn\xE9, Alexandra\
    \ Sasha Luccioni, Fran\xE7ois Yvon, Matthias Gall\xE9, Jonathan Tow, Alexander\
    \ M. Rush, Stella Biderman, Albert Webson, Pawan Sasanka Ammanamanchi, Thomas\
    \ Wang, Beno\xEEt Sagot, Niklas Muennighoff, Albert Villanova del Moral, Olatunji\
    \ Ruwase, Rachel Bawden, Stas Bekman, Angelina McMillan-Major, Iz Beltagy, Huu\
    \ Nguyen, Lucile Saulnier, Samson Tan, Pedro Ortiz Suarez, Victor Sanh, Hugo Lauren\xE7\
    on, Yacine Jernite, Julien Launay, Margaret Mitchell, and Colin Raffel. BLOOM:\
    \ A 176B-Parameter Open-access Multilingual Language Model. arXiv preprint arXiv:2211.05100,\
    \ 2022. Jie You, Jae-Won Chung, and Mosharaf Chowdhury. Zeus: Understanding and\
    \ Optimizing GPU Energy Consumption of DNN Training. In NSDI, 2023. Junyeol Yu,\
    \ Jongseok Kim, and Euiseong Seo. Know Your Enemy To Save Cloud Energy: Energy-Performance\
    \ Characterization of Machine Learning Serving. In HPCA, 2023. Chaojie Zhang,\
    \ Alok Gautam Kumbhare, Ioannis Manousakis, Deli Zhang, Pulkit A Misra, Rod Assis,\
    \ Kyle Woolcock, Nithish Mahalingam, Brijesh Warrier, David Gauthier, Lalu Kunnath,\
    \ Steve Solomon, Osvaldo Morales, Marcus Fontoura, and Ricardo Bianchini. Flex:\
    \ High-Availability Datacenters With Zero Reserved Power. In ISCA, 2021. Susan\
    \ Zhang, Stephen Roller, Naman Goyal, Mikel Artetxe, Moya Chen, Shuohui Chen,\
    \ Christopher Dewan, Mona Diab, Xian Li, Xi Victoria Lin, Todor Mihaylov, Myle\
    \ Ott, Sam Shleifer, Kurt Shuster, Daniel Simig, Punit Singh Koura, Anjali Sridhar,\
    \ Tianlu Wang, and Luke Zettlemoyer. OPT: Open Pre-trained Transformer Language\
    \ Models. arXiv preprint arXiv:2205.01068, 2022."
  title: Characterizing Power Management Opportunities for LLMs in the Cloud
  url: https://dl.acm.org/doi/10.1145/3620666.3651329
- abstract: "Dynamic analyses are a standard approach to analyzing and testing concurrent\
    \ programs. Such techniques observe program traces \u03C3 and analyze them to\
    \ infer the presence or absence of bugs. At its core, each analysis maintains\
    \ a partial order P that represents order dependencies between the events of \u03C3\
    . Naturally, the scalability of the analysis largely depends on maintaining P\
    \ efficiently. The standard data structure for this task has thus far been Vector\
    \ Clocks. These, however, are slow for analyses that follow a non-streaming style,\
    \ costing O(n) time for inserting (and propagating) each new ordering in P, where\
    \ n is the size of \u03C3, while they cannot handle the deletion of existing orderings."
  keywords: Software and its engineering Software creation and management Software
    verification and validation Theory of computation Semantics and reasoning Program
    reasoning Program analysis Theory and algorithms for application domains
  references: "[n.d.]. CSSTs GitHub Repository. https://github.com/hcantunc/cssts.\
    \ Parosh Aziz Abdulla, Mohamed Faouzi Atig, Bengt Jonsson, Magnus L\xE5ng, Tuan\
    \ Phong Ngo, and Konstantinos Sagonas. 2019. Optimal Stateless Model Checking\
    \ for Reads-from Equivalence under Sequential Consistency. Proc. ACM Program.\
    \ Lang. 3, OOPSLA (2019), 29. Anurag Agarwal and Vijay K. Garg. 2005. Efficient\
    \ Dependency Tracking for Relevant Events in Shared-Memory Systems. In Proceedings\
    \ of the Twenty-Fourth Annual ACM Symposium on Principles of Distributed Computing\
    \ (Las Vegas, NV, USA) (PODC '05). Association for Computing Machinery, New York,\
    \ NY, USA, 19--28. Pratyush Agarwal, Krishnendu Chatterjee, Shreya Pathak, Andreas\
    \ Pavlogiannis, and Viktor Toman. 2021. Stateless Model Checking Under a Reads-Value-From\
    \ Equivalence. In Computer Aided Verification, Alexandra Silva and K. Rustan M.\
    \ Leino (Eds.). Vol. 12759. Springer International Publishing, Cham, 341--366.\
    \ Lars Arge, Johannes Fischer, Peter Sanders, and Nodari Sitchinava. 2013. On\
    \ (Dynamic) Range Minimum Queries in External Memory. In Algorithms and Data Structures,\
    \ Frank Dehne, Roberto Solis-Oba, and J\xF6rg-R\xFCdiger Sack (Eds.). Springer\
    \ Berlin Heidelberg, Berlin, Heidelberg, 37--48. Swarnendu Biswas, Jipeng Huang,\
    \ Aritra Sengupta, and Michael D. Bond. 2014. DoubleChecker: Efficient Sound and\
    \ Precise Atomicity Checking. In Proceedings of the 35th ACM SIGPLAN Conference\
    \ on Programming Language Design and Implementation (Edinburgh, United Kingdom)\
    \ (PLDI '14). Association for Computing Machinery, New York, NY, USA, 28--39.\
    \ Truc Lam Bui, Krishnendu Chatterjee, Tushar Gautam, Andreas Pavlogiannis, and\
    \ Viktor Toman. 2021. The Reads-from Equivalence for the TSO and PSO Memory Models.\
    \ Proceedings of the ACM on Programming Languages 5, OOPSLA (2021), 1--30. Yan\
    \ Cai, Hao Yun, Jinqiu Wang, Lei Qiao, and Jens Palsberg. 2021. Sound and Efficient\
    \ Concurrency Bug Prediction. In Proceedings of the 29th ACM Joint Meeting on\
    \ European Software Engineering Conference and Symposium on the Foundations of\
    \ Software Engineering (Athens, Greece) (ESEC/FSE 2021). Association for Computing\
    \ Machinery, New York, NY, USA, 255--267. Soham Chakraborty, Shankara Narayanan\
    \ Krishna, Umang Mathur, and Andreas Pavlogiannis. 2024. How Hard Is Weak-Memory\
    \ Testing? Proceedings of the ACM on Programming Languages 8, POPL (2024), 66:1978--66:2009.\
    \ Marek Chalupa, Krishnendu Chatterjee, Andreas Pavlogiannis, Nishant Sinha, and\
    \ Kapil Vaidya. 2018. Data-Centric Dynamic Partial Order Reduction. Proceedings\
    \ of the ACM on Programming Languages 2, POPL (2018), 1--30. Mark Christiaens\
    \ and Koenraad De Bosschere. 2001. Accordion Clocks: Logical Clocks for Data Race\
    \ Detection. In Proceedings of the 7th International Euro-Par Conference Manchester\
    \ on Parallel Processing (Euro-Par '01). Springer-Verlag, Berlin, Heidelberg,\
    \ 494--503. Berk \xC7irisci, Constantin Enea, Azadeh Farzan, and Suha Orhun Mutluergil.\
    \ 2020. Root Causing Linearizability Violations. In Computer Aided Verification,\
    \ Shuvendu K. Lahiri and Chao Wang (Eds.). Springer International Publishing,\
    \ Cham, 350--375. Ariel Eizenberg, Yuanfeng Peng, Toma Pigli, William Mansky,\
    \ and Joseph Devietti. 2017. BARRACUDA: Binary-Level Analysis of Runtime RAces\
    \ in CUDA Programs. In Proceedings of the 38th ACM SIGPLAN Conference on Programming\
    \ Language Design and Implementation (PLDI 2017). Association for Computing Machinery,\
    \ New York, NY, USA, 126--140. Michael Emmi and Constantin Enea. 2019. Weak-Consistency\
    \ Specification via Visibility Relaxation. Proc. ACM Program. Lang. 3, POPL (2019),\
    \ 28. Cormac Flanagan and Stephen N. Freund. 2009. FastTrack: Efficient and Precise\
    \ Dynamic Race Detection. In Proceedings of the 30th ACM SIGPLAN Conference on\
    \ Programming Language Design and Implementation (Dublin, Ireland) (PLDI '09).\
    \ Association for Computing Machinery, New York, NY, USA, 121--133. Cormac Flanagan,\
    \ Stephen N. Freund, and Jaeheon Yi. 2008. Velodrome: A Sound and Complete Dynamic\
    \ Atomicity Checker for Multithreaded Programs. In Proceedings of the 29th ACM\
    \ SIGPLAN Conference on Programming Language Design and Implementation (Tucson,\
    \ AZ, USA) (PLDI '08). Association for Computing Machinery, New York, NY, USA,\
    \ 293--303. Mingyu Gao, Soham Chakraborty, and Burcu Kulahcioglu Ozkan. 2023.\
    \ Probabilistic Concurrency Testing for Weak Memory Programs. In Proceedings of\
    \ the 28th ACM International Conference on Architectural Support for Programming\
    \ Languages and Operating Systems, Volume 2 (Vancouver, BC, Canada) (ASPLOS 2023).\
    \ Association for Computing Machinery, New York, NY, USA, 603--616. Phillip B.\
    \ Gibbons and Ephraim Korach. 1997. Testing Shared Memories. SIAM J. Comput. 26,\
    \ 4 (1997), 1208--1244. Jeff Huang. 2018. UFO: Predictive Concurrency Use-after-Free\
    \ Detection. In Proceedings of the 40th International Conference on Software Engineering\
    \ (Gothenburg, Sweden) (ICSE '18). Association for Computing Machinery, New York,\
    \ NY, USA, 609--619. Christian Gram Kalhauge and Jens Palsberg. 2018. Sound Deadlock\
    \ Prediction. Proc. ACM Program. Lang. 2, OOPSLA (2018), 29. Leslie Lamport. 1978.\
    \ Time, Clocks, and the Ordering of Events in a Distributed System. Commun. ACM\
    \ 21, 7 (1978), 558--565. Guangpu Li, Shan Lu, Madanlal Musuvathi, Suman Nath,\
    \ and Rohan Padhye. 2019. Efficient Scalable Thread-Safety-Violation Detection:\
    \ Finding Thousands of Concurrency Bugs during Testing. In Proceedings of the\
    \ 27th ACM Symposium on Operating Systems Principles (SOSP '19). Association for\
    \ Computing Machinery, New York, NY, USA, 162--180. Weiyu Luo and Brian Demsky.\
    \ 2021. C11Tester: A Race Detector for C/C++ Atomics. In Proceedings of the 26th\
    \ ACM International Conference on Architectural Support for Programming Languages\
    \ and Operating Systems (Virtual, USA) (ASPLOS '21). Association for Computing\
    \ Machinery, New York, NY, USA, 630--646. Umang Mathur, Dileep Kini, and Mahesh\
    \ Viswanathan. 2018. What Happens-after the First Race? Enhancing the Predictive\
    \ Power of Happens-before Based Dynamic Race Detection. Proc. ACM Program. Lang.\
    \ 2, OOPSLA (2018), 29. Umang Mathur, Andreas Pavlogiannis, H\xFCnkar Can Tun\xE7\
    , and Mahesh Viswanathan. 2022. A Tree Clock Data Structure for Causal Orderings\
    \ in Concurrent Executions. In Proceedings of the 27th ACM International Conference\
    \ on Architectural Support for Programming Languages and Operating Systems (Lausanne,\
    \ Switzerland) (ASPLOS '22). Association for Computing Machinery, New York, NY,\
    \ USA, 710--725. Umang Mathur, Andreas Pavlogiannis, and Mahesh Viswanathan. 2020.\
    \ The Complexity of Dynamic Data Race Prediction. In Proceedings of the 35th Annual\
    \ ACM/IEEE Symposium on Logic in Computer Science. ACM, Saarbr\xFCcken Germany,\
    \ 713--727. Umang Mathur and Mahesh Viswanathan. 2020. Atomicity Checking in Linear\
    \ Time Using Vector Clocks. In Proceedings of the Twenty-Fifth International Conference\
    \ on Architectural Support for Programming Languages and Operating Systems (Lausanne,\
    \ Switzerland) (ASPLOS '20). Association for Computing Machinery, New York, NY,\
    \ USA, 183--199. Friedemann Mattern. 1989. Virtual Time and Global States of Distributed\
    \ Systems. In Parallel and Distributed Algorithms: proceedings of the International\
    \ Workshop on Parallel & Distributed Algorithms, M. Cosnard et. al. (Ed.). Elsevier\
    \ Science Publishers B. V., 215--226. Madanlal Musuvathi, Shaz Qadeer, Thomas\
    \ Ball, Gerard Basler, Piramanayagam Arumuga Nainar, and Iulian Neamtiu. 2008.\
    \ Finding and Reproducing Heisenbugs in Concurrent Programs. In Proceedings of\
    \ the 8th USENIX Conference on Operating Systems Design and Implementation (San\
    \ Diego, California) (OSDI'08). USENIX Association, USA, 267--280. Brian Norris\
    \ and Brian Demsky. 2013. CDSchecker: Checking Concurrent Data Structures Written\
    \ with C/C++ Atomics. In Proceedings of the 2013 ACM SIGPLAN International Conference\
    \ on Object Oriented Programming Systems Languages & Applications (OOPSLA '13).\
    \ Association for Computing Machinery, New York, NY, USA, 131--150. Andreas Pavlogiannis.\
    \ 2019. Fast, Sound, and Effectively Complete Dynamic Race Prediction. Proc. ACM\
    \ Program. Lang. 4, POPL (2019), 29. Jake Roemer, Kaan Gen\xE7, and Michael D.\
    \ Bond. 2020. SmartTrack: Efficient Predictive Race Detection. In Proceedings\
    \ of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation\
    \ (PLDI 2020). Association for Computing Machinery, New York, NY, USA, 747--762.\
    \ Jake Roemer, Kaan Gen\xE7, and Michael D. Bond. 2018. High-Coverage, Unbounded\
    \ Sound Predictive Race Detection. In Proceedings of the 39th ACM SIGPLAN Conference\
    \ on Programming Language Design and Implementation (Philadelphia, PA, USA) (PLDI\
    \ 2018). Association for Computing Machinery, New York, NY, USA, 374--389. Amitabha\
    \ Roy, Stephan Zeisset, Charles J. Fleckenstein, and John C. Huang. 2006. Fast\
    \ and Generalized Polynomial Time Memory Consistency Verification. In Computer\
    \ Aided Verification, Thomas Ball and Robert B. Jones (Eds.). Springer Berlin\
    \ Heidelberg, Berlin, Heidelberg, 503--516. Zheng Shi, Umang Mathur, and Andreas\
    \ Pavlogiannis. 2024. Optimistic Prediction of Synchronization-Reversal Data Races.\
    \ H\xFCnkar Can Tun\xE7, Parosh Aziz Abdulla, Soham Chakraborty, Shankaranarayanan\
    \ Krishna, Umang Mathur, and Andreas Pavlogiannis. 2023. Optimal Reads-From Consistency\
    \ Checking for C11-Style Memory Models. Proceedings of the ACM on Programming\
    \ Languages 7, PLDI (2023), 137:761--137:785. H\xFCnkar Can Tun\xE7, Umang Mathur,\
    \ Andreas Pavlogiannis, and Mahesh Viswanathan. 2023. Sound Dynamic Deadlock Prediction\
    \ in Linear Time. Proc. ACM Program. Lang. 7, PLDI (2023), 26. H\xFCnkar Can Tun\xE7\
    , Ameya Prashant Deshmukh, Berk Cirisci, Constantin Enea, and Andreas Pavlogiannis.\
    \ 2024. CSSTs: A Dynamic Data Structure for Partial Orders in Concurrent Execution\
    \ Analysis. (2024). Artifact. H\xFCnkar Can Tun\xE7, Ameya Prashant Deshmukh,\
    \ Berk \xC7irisci, Constantin Enea, and Andreas Pavlogiannis. 2024. CSSTs: A Dynamic\
    \ Data Structure for Partial Orders in Concurrent Execution Analysis. Technical\
    \ Report. Kunpeng Yu, Chenxu Wang, Yan Cai, Xiapu Luo, and Zijiang Yang. 2021.\
    \ Detecting Concurrency Vulnerabilities Based on Partial Orders of Memory and\
    \ Thread Events. In Proceedings of the 29th ACM Joint Meeting on European Software\
    \ Engineering Conference and Symposium on the Foundations of Software Engineering\
    \ (Athens, Greece) (ESEC/FSE 2021). Association for Computing Machinery, New York,\
    \ NY, USA, 280--291. Rachid Zennou, Mohamed Faouzi Atig, Ranadeep Biswas, Ahmed\
    \ Bouajjani, Constantin Enea, and Mohammed Erradi. 2020. Boosting Sequential Consistency\
    \ Checking Using Saturation. In Automated Technology for Verification and Analysis,\
    \ Dang Van Hung and Oleg Sokolsky (Eds.). Springer International Publishing, Cham,\
    \ 360--376. Rachid Zennou, Ahmed Bouajjani, Constantin Enea, and Mohammed Erradi.\
    \ 2019. Gradual Consistency Checking. In Computer Aided Verification, Isil Dillig\
    \ and Serdar Tasiran (Eds.). Springer International Publishing, Cham, 267--285."
  title: 'CSSTs: A Dynamic Data Structure for Partial Orders in Concurrent Execution
    Analysis'
  url: https://dl.acm.org/doi/10.1145/3620666.3651358
- abstract: Deep neural networks (DNNs) have been widely-adopted in various safety-critical
    applications such as computer vision and autonomous driving. However, as technology
    scales and applications diversify, coupled with the increasing heterogeneity of
    underlying hardware architectures, silent data corruption (SDC) has been emerging
    as a pronouncing threat to the reliability of DNNs. Recent reports from industry
    hyperscalars underscore the difficulty in addressing SDC due to their "stealthy"
    nature and elusive manifestation. In this paper, we propose Dr. DNA, a novel approach
    to enhance the reliability of DNN systems by detecting and mitigating SDCs. Specifically,
    we formulate and extract a set of unique SDC signatures from the Distribution
    of Neuron Activations (DNA), based on which we propose early-stage detection and
    mitigation of SDCs during DNN inference. We perform an extensive evaluation across
    3 vision tasks, 5 different datasets, and 10 different models, under 4 different
    error models. Results show that Dr. DNA achieves 100% SDC detection rate for most
    cases, 95% detection rate on average and >90% detection rate across all cases,
    representing 20% - 70% improvement over baselines. Dr. DNA can also mitigate the
    impact of SDCs by effectively recovering DNN model performance with <1% memory
    overhead and <2.5% latency overhead.
  keywords: ''
  references: "Ali Asgari Khoshouyeh, Florian Geissler, Syed Qutub, Michael Paulitsch,\
    \ Prashant Nair, and Karthik Pattabiraman. Structural coding: A low-cost scheme\
    \ to protect cnns from large-granularity memory faults. In Proceedings of the\
    \ International Conference for High Performance Computing, Networking, Storage\
    \ and Analysis, pages 1--17, 2023. Zitao Chen, Guanpeng Li, and Karthik Pattabiraman.\
    \ A low-cost fault corrector for deep neural networks through range restriction.\
    \ In 2021 51st Annual IEEE/IFIP International Conference on Dependable Systems\
    \ and Networks (DSN), pages 1--13. IEEE, 2021. Zitao Chen, Guanpeng Li, Karthik\
    \ Pattabiraman, and Nathan De-Bardeleben. Binfi: An efficient fault injector for\
    \ safety-critical machine learning systems. In Proceedings of the International\
    \ Conference for High Performance Computing, Networking, Storage and Analysis,\
    \ pages 1--23, 2019. Jungwook Choi, Zhuo Wang, Swagath Venkataramani, Pierce I-Jen\
    \ Chuang, Vijayalakshmi Srinivasan, and Kailash Gopalakrishnan. Pact: Parameterized\
    \ clipping activation for quantized neural networks. arXiv preprint arXiv:1805.06085,\
    \ 2018. Jeff Dean and Amin Vahdat. Exciting directions for ml models and the implications\
    \ for computing hardware. In Keynote 1, Hot Chips 2023, 2023. Harish Dattatraya\
    \ Dixit, Laura Boyle, Gautham Vunnam, Sneha Pendharkar, Matt Beadon, and Sriram\
    \ Sankar. Detecting silent data corruptions in the wild. arXiv preprint arXiv:2203.08989,\
    \ 2022. Harish Dattatraya Dixit, Sneha Pendharkar, Matt Beadon, Chris Mason, Tejasvi\
    \ Chakravarthy, Bharath Muthiah, and Sriram Sankar. Silent data corruptions at\
    \ scale. arXiv preprint arXiv:2102.11245, 2021. Alexey Dosovitskiy, Lucas Beyer,\
    \ Alexander Kolesnikov, Dirk Weissenborn, Xiaohua Zhai, Thomas Unterthiner, Mostafa\
    \ Dehghani, Matthias Minderer, Georg Heigold, Sylvain Gelly, et al. An image is\
    \ worth 16\xD716 words: Transformers for image recognition at scale. arXiv preprint\
    \ arXiv:2010.11929, 2020. Jannik Fritsch, Tobias Kuehnl, and Andreas Geiger. A\
    \ new performance measure and evaluation benchmark for road detection algorithms.\
    \ In 16th International IEEE Conference on Intelligent Transportation Systems\
    \ (ITSC 2013), pages 1693--1700. IEEE, 2013. Florian Geissler, Syed Qutub, Michael\
    \ Paulitsch, and Karthik Pattabiraman. A low-cost strategic monitoring approach\
    \ for scalable and interpretable error detection in deep neural networks. In International\
    \ Conference on Computer Safety, Reliability, and Security, pages 75--88. Springer,\
    \ 2023. Florian Geissler, Syed Qutub, Sayanta Roychowdhury, Ali Asgari, Yang Peng,\
    \ Akash Dhamasia, Ralf Graefe, Karthik Pattabiraman, and Michael Paulitsch. Towards\
    \ a safety case for hardware fault tolerance in convolutional neural networks\
    \ using activation range supervision. arXiv preprint arXiv:2108.07019, 2021. Huifeng\
    \ Guo, Ruiming Tang, Yunming Ye, Zhenguo Li, and Xiuqiang He. Deepfm: a factorization-machine\
    \ based neural network for ctr prediction. arXiv preprint arXiv:1703.04247, 2017.\
    \ Puneet Gupta et al. Underdesigned and opportunistic computing in presence of\
    \ hardware variability. TCAD, 2012. Peter Hazucha et al. Neutron soft error rate\
    \ measurements in a 90-nm cmos process and scaling trends in sram from 0.25-/spl\
    \ mu/m to 90-nm generation. In IEDM, 2003. Kaiming He, Xiangyu Zhang, Shaoqing\
    \ Ren, and Jian Sun. Deep residual learning for image recognition. In Proceedings\
    \ of the IEEE conference on computer vision and pattern recognition, pages 770--778,\
    \ 2016. Yi He, Prasanna Balaprakash, and Yanjing Li. Fidelity: Efficient resilience\
    \ analysis framework for deep learning accelerators. In 2020 53rd Annual IEEE/ACM\
    \ International Symposium on Microarchitecture (MICRO), pages 270--281. IEEE,\
    \ 2020. Yi He, Mike Hutton, Steven Chan, Robert De Gruijl, Rama Govindaraju, Nishant\
    \ Patil, and Yanjing Li. Understanding and mitigating hardware failures in deep\
    \ learning training systems. In Proceedings of the 50th Annual International Symposium\
    \ on Computer Architecture, pages 1--16, 2023. Zhezhi He, Adnan Siraj Rakin, Jingtao\
    \ Li, Chaitali Chakrabarti, and Deliang Fan. Defending and harnessing the bit-flip\
    \ based adversarial weight attack. In Proceedings of the IEEE/CVF Conference on\
    \ Computer Vision and Pattern Recognition, pages 14095--14103, 2020. Le-Ha Hoang,\
    \ Muhammad Abdullah Hanif, and Muhammad Shafique. Ft-clipact: Resilience analysis\
    \ of deep neural networks and improving their fault tolerance using clipped activation.\
    \ In 2020 Design, Automation & Test in Europe Conference & Exhibition (DATE),\
    \ pages 1241--1246. IEEE, 2020. Peter H Hochschild, Paul Turner, Jeffrey C Mogul,\
    \ Rama Govindaraju, Parthasarathy Ranganathan, David E Culler, and Amin Vahdat.\
    \ Cores that don't count. In Proceedings of the Workshop on Hot Topics in Operating\
    \ Systems, pages 9--16, 2021. Andrew G Howard, Menglong Zhu, Bo Chen, Dmitry Kalenichenko,\
    \ Weijun Wang, Tobias Weyand, Marco Andreetto, and Hartwig Adam. Mobilenets: Efficient\
    \ convolutional neural networks for mobile vision applications. arXiv preprint\
    \ arXiv:1704.04861, 2017. Navid Khoshavi, Arman Roohi, Connor Broyles, Saman Sargolzaei,\
    \ Yu Bi, and David Z Pan. Shieldenn: Online accelerated framework for fault-tolerant\
    \ deep neural network architectures. In 2020 57th ACM/IEEE Design Automation Conference\
    \ (DAC), pages 1--6. IEEE, 2020. Sung Kim, Patrick Howe, Thierry Moreau, Armin\
    \ Alaghi, Luis Ceze, and Visvesh Sathe. Matic: Learning around errors for efficient\
    \ low-voltage neural network accelerators. In 2018 Design, Automation & Test in\
    \ Europe Conference & Exhibition (DATE), pages 1--6. IEEE, 2018. Troya \xC7a\u01E7\
    \u0131l K\xF6yl\xFC, Cezar Rodolfo Wedig Reinbrecht, Said Hamdioui, and Mottaqiallah\
    \ Taouil. Deterministic and statistical strategies to protect anns against fault\
    \ injection attacks. In 2021 18th International Conference on Privacy, Security\
    \ and Trust (PST), pages 1--10. IEEE, 2021. Guanpeng Li, Siva Kumar Sastry Hari,\
    \ Michael Sullivan, Timothy Tsai, Karthik Pattabiraman, Joel Emer, and Stephen\
    \ W Keckler. Understanding error propagation in deep learning neural network (dnn)\
    \ accelerators and applications. In Proceedings of the International Conference\
    \ for High Performance Computing, Networking, Storage and Analysis, pages 1--12,\
    \ 2017. Jingtao Li, Adnan Siraj Rakin, Yan Xiong, Liangliang Chang, Zhezhi He,\
    \ Deliang Fan, and Chaitali Chakrabarti. Defending bit-flip attack through dnn\
    \ weight reconstruction. In 2020 57th ACM/IEEE Design Automation Conference (DAC),\
    \ pages 1--6. IEEE, 2020. Robert E Lyons and Wouter Vanderkulk. The use of triple-modular\
    \ redundancy to improve computer reliability. IBM journal of research and development,\
    \ 6(2):200--209, 1962. Abdulrahman Mahmoud, Neeraj Aggarwal, Alex Nobbe, Jose\
    \ Rodrigo Sanchez Vicarte, Sarita V Adve, Christopher W Fletcher, Iuri Frosio,\
    \ and Siva Kumar Sastry Hari. Pytorchfi: A runtime perturbation tool for dnns.\
    \ In 2020 50th Annual IEEE/IFIP International Conference on Dependable Systems\
    \ and Networks Workshops (DSN-W), pages 25--31. IEEE, 2020. Abdulrahman Mahmoud,\
    \ Siva Kumar Sastry Hari, Christopher W Fletcher, Sarita V Adve, Charbel Sakr,\
    \ Naresh Shanbhag, Pavlo Molchanov, Michael B Sullivan, Timothy Tsai, and Stephen\
    \ W Keckler. Hardnn: Feature map vulnerability evaluation in cnns. arXiv preprint\
    \ arXiv:2002.09786, 2020. Abdulrahman Mahmoud, Siva Kumar Sastry Hari, Christopher\
    \ W Fletcher, Sarita V Adve, Charbel Sakr, Naresh R Shanbhag, Pavlo Molchanov,\
    \ Michael B Sullivan, Timothy Tsai, and Stephen W Keckler. Optimizing selective\
    \ protection for cnn resilience. In ISSRE, pages 127--138, 2021. Abdulrahman Mahmoud,\
    \ Thierry Tambe, Tarek Aloui, David Brooks, and Gu-Yeon Wei. Goldeneye: A platform\
    \ for evaluating emerging numerical data formats in dnn accelerators. In 2022\
    \ 52nd Annual IEEE/IFIP International Conference on Dependable Systems and Networks\
    \ (DSN), pages 206--214. IEEE, 2022. Maxim Naumov, Dheevatsa Mudigere, Hao-Jun\
    \ Michael Shi, Jianyu Huang, Narayanan Sundaraman, Jongsoo Park, Xiaodong Wang,\
    \ Udit Gupta, Carole-Jean Wu, Alisson G Azzolini, et al. Deep learning recommendation\
    \ model for personalization and recommendation systems. arXiv preprint arXiv:1906.00091,\
    \ 2019. Elbruz Ozen and Alex Orailoglu. Boosting bit-error resilience of dnn accelerators\
    \ through median feature selection. IEEE Transactions on Computer-Aided Design\
    \ of Integrated Circuits and Systems, 39(11):3250--3262, 2020. Elbruz Ozen and\
    \ Alex Orailoglu. Just say zero: Containing critical bit-error propagation in\
    \ deep neural networks with anomalous feature suppression. In Proceedings of the\
    \ 39th International Conference on Computer-Aided Design, pages 1--9, 2020. Benjamin\
    \ Ramtoula, Matthew Gadd, Paul Newman, and Daniele De Martini. Visual dna: Representing\
    \ and comparing images using distributions of neuron activations. In Proceedings\
    \ of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages\
    \ 11113--11123, 2023. Brandon Reagen, Udit Gupta, Lillian Pentecost, Paul Whatmough,\
    \ Sae Kyu Lee, Niamh Mulholland, David Brooks, and Gu-Yeon Wei. Ares: A framework\
    \ for quantifying the resilience of deep neural networks. In Proceedings of the\
    \ 55th Annual Design Automation Conference, pages 1--6, 2018. Brandon Reagen,\
    \ Paul Whatmough, Robert Adolf, Saketh Rama, Hyunkwang Lee, Sae Kyu Lee, Jos\xE9\
    \ Miguel Hern\xE1ndez-Lobato, Gu-Yeon Wei, and David Brooks. Minerva: Enabling\
    \ low-power, highly-accurate deep neural network accelerators. ACM SIGARCH Computer\
    \ Architecture News, 44(3):267--278, 2016. Joseph Redmon, Santosh Divvala, Ross\
    \ Girshick, and Ali Farhadi. You only look once: Unified, real-time object detection.\
    \ In Proceedings of the IEEE conference on computer vision and pattern recognition,\
    \ pages 779--788, 2016. Olga Russakovsky, Jia Deng, Hao Su, Jonathan Krause, Sanjeev\
    \ Satheesh, Sean Ma, Zhiheng Huang, Andrej Karpathy, Aditya Khosla, Michael Bernstein,\
    \ et al. Imagenet large scale visual recognition challenge. International journal\
    \ of computer vision, 115:211--252, 2015. Christoph Schorn, Andre Guntoro, and\
    \ Gerd Ascheid. Efficient on-line error detection and mitigation for deep neural\
    \ network accelerators. In Computer Safety, Reliability, and Security: 37th International\
    \ Conference, SAFECOMP 2018, V\xE4ster\xE5s, Sweden, September 19-21, 2018, Proceedings\
    \ 37, pages 205--219. Springer, 2018. Pei Sun, Henrik Kretzschmar, Xerxes Dotiwalla,\
    \ Aurelien Chouard, Vijaysai Patnaik, Paul Tsui, James Guo, Yin Zhou, Yuning Chai,\
    \ Benjamin Caine, et al. Scalability in perception for autonomous driving: Waymo\
    \ open dataset. In Proceedings of the IEEE/CVF conference on computer vision and\
    \ pattern recognition, pages 2446--2454, 2020. Emil Talpes, Debjit Das Sarma,\
    \ Ganesh Venkataramanan, Peter Bannon, Bill McGee, Benjamin Floering, Ankit Jalote,\
    \ Christopher Hsiong, Sahil Arora, Atchyuth Gorti, et al. Compute solution for\
    \ tesla's full self-driving computer. IEEE Micro, 40(2):25--35, 2020. Mingxing\
    \ Tan and Quoc Le. Efficientnet: Rethinking model scaling for convolutional neural\
    \ networks. In International conference on machine learning, pages 6105--6114.\
    \ PMLR, 2019. Ilya O Tolstikhin, Neil Houlsby, Alexander Kolesnikov, Lucas Beyer,\
    \ Xiaohua Zhai, Thomas Unterthiner, Jessica Yung, Andreas Steiner, Daniel Keysers,\
    \ Jakob Uszkoreit, et al. Mlp-mixer: An all-mlp architecture for vision. Advances\
    \ in neural information processing systems, 34:24261--24272, 2021. Hugo Touvron,\
    \ Matthieu Cord, Matthijs Douze, Francisco Massa, Alexandre Sablayrolles, and\
    \ Herv\xE9 J\xE9gou. Training data-efficient image transformers & distillation\
    \ through attention. In International conference on machine learning, pages 10347--10357.\
    \ PMLR, 2021. Aniruddha N Udipi et al. Lot-ecc: Localized and tiered reliability\
    \ mechanisms for commodity memory systems. ACM SIGARCH Computer Architecture News,\
    \ 2012. Takumi Uezono, Yi He, and Yanjing Li. Achieving automotive safety requirements\
    \ through functional in-field self-test for deep learning accelerators. In 2022\
    \ IEEE International Test Conference (ITC), pages 465--473. IEEE, 2022. Jialai\
    \ Wang, Ziyuan Zhang, Meiqi Wang, Han Qiu, Tianwei Zhang, Qi Li, Zongpeng Li,\
    \ Tao Wei, and Chao Zhang. Aegis: Mitigating targeted bit-flip attacks against\
    \ deep neural networks. arXiv preprint arXiv:2302.13520, 2023. Shaobu Wang, Guangyan\
    \ Zhang, Junyu Wei, Yang Wang, Jiesheng Wu, and Qingchao Luo. Understanding silent\
    \ data corruptions in a large production cpu population. In Proceedings of the\
    \ 29th Symposium on Operating Systems Principles, pages 216--230, 2023. Jinyu\
    \ Zhan, Ruoxu Sun, Wei Jiang, Yucheng Jiang, Xunzhao Yin, and Cheng Zhuo. Improving\
    \ fault tolerance for reliable dnn using boundary-aware activation. IEEE Transactions\
    \ on Computer-Aided Design of Integrated Circuits and Systems, 41(10):3414--3425,\
    \ 2021. Fangzhen Zhao, Chenyi Zhang, Naipeng Dong, Zefeng You, and Zhenxin Wu.\
    \ A uniform framework for anomaly detection in deep neural networks. Neural Processing\
    \ Letters, 54(4):3467--3488, 2022. Dan Zuras, Mike Cowlishaw, Alex Aiken, Matthew\
    \ Applegate, David Bailey, Steve Bass, Dileep Bhandarkar, Mahesh Bhat, David Bindel,\
    \ Sylvie Boldo, et al. Ieee standard for floating-point arithmetic. IEEE Std,\
    \ 754(2008):1--70, 2008."
  title: 'Dr. DNA: Combating Silent Data Corruptions in Deep Learning using Distribution
    of Neuron Activations'
  url: https://dl.acm.org/doi/10.1145/3620666.3651349
- abstract: "Sparse Matrix-Matrix Multiplication (SpMM) is a building-block operation\
    \ in scientific computing and machine learning applications. Recent advancements\
    \ in hardware, notably Tensor Cores (TCs), have created promising opportunities\
    \ for accelerating SpMM. However, harnessing these hardware accelerators to speed\
    \ up general SpMM necessitates considerable effort. In this paper, we undertake\
    \ a comprehensive analysis of the state-of-the-art techniques for accelerating\
    \ TC-based SpMM and identify crucial performance gaps. Drawing upon these insights,\
    \ we propose DTC-SpMM, a novel approach with systematic optimizations tailored\
    \ for accelerating general SpMM on TCs. DTC-SpMM encapsulates diverse aspects,\
    \ including efficient compression formats, reordering methods, and runtime pipeline\
    \ optimizations. Our extensive experiments on modern GPUs with a diverse range\
    \ of benchmark matrices demonstrate remarkable performance improvements in SpMM\
    \ acceleration by TCs in conjunction with our proposed optimizations. The case\
    \ study also shows that DTC-SpMM speeds up end-to-end GNN training by up to 1.91\xD7\
    \ against popular GNN frameworks."
  keywords: Computer systems organization Architectures Parallel architectures Single
    instruction, multiple data Computing methodologies Parallel computing methodologies
    Parallel algorithms Shared memory algorithms
  references: "Sergi Abadal, Akshay Jain, Robert Guirado, Jorge L\xF3pez-Alonso, and\
    \ Eduard Alarc\xF3n. Computing graph neural networks: A survey from algorithms\
    \ to accelerators. ACM Computing Surveys (CSUR), 54(9):1--38, 2021. AMD. AOCL:\
    \ AMD optimizing CPU libraries, 2020. Accessed on July 26, 2023. Roberto L Castro,\
    \ Diego Andrade, and Basilio B Fraguela. Probing the efficacy of hardware-aware\
    \ weight pruning to optimize the spmm routine on ampere gpus. In Proceedings of\
    \ the International Conference on Parallel Architectures and Compilation Techniques,\
    \ pages 135--147, 2022. Zhaodong Chen, Zheng Qu, Liu Liu, Yufei Ding, and Yuan\
    \ Xie. Efficient tensor core-based gpu kernels for structured sparsity under reduced\
    \ precision. In Proceedings of the International Conference for High Performance\
    \ Computing, Networking, Storage and Analysis, pages 1--14, 2021. Rewon Child,\
    \ Scott Gray, Alec Radford, and Ilya Sutskever. Generating long sequences with\
    \ sparse transformers. arXiv preprint arXiv:1904.10509, 2019. Guohao Dai, Guyue\
    \ Huang, Shang Yang, Zhongming Yu, Hengrui Zhang, Yufei Ding, Yuan Xie, Huazhong\
    \ Yang, and Yu Wang. Heuristic adaptability to input dynamics for spmm on gpus.\
    \ In Proceedings of the 59th ACM/IEEE Design Automation Conference, pages 595--600,\
    \ 2022. Ming Dun, Xu Zhang, Huawei Cao, Yuan Zhang, Junying Huang, and Xiaochun\
    \ Ye. Adaptive sparse deep neural network inference on resource-constrained cost-efficient\
    \ gpus. In 2023 IEEE High Performance Extreme Computing Conference (HPEC), pages\
    \ 1--7. IEEE, 2023. Ruibo Fan, Wei Wang, and Xiaowen Chu. Fast sparse gpu kernels\
    \ for accelerated training of graph neural networks. In 2023 IEEE International\
    \ Parallel and Distributed Processing Symposium (IPDPS), pages 501--511. IEEE,\
    \ 2023. Alex Fender, Brad Rees, and Joe Eaton. Rapids cugraph. In Massive Graph\
    \ Analytics, pages 483--493. Chapman and Hall/CRC, 2022. Matthias Fey and Jan\
    \ Eric Lenssen. Fast Graph Representation Learning with PyTorch Geometric, May\
    \ 2019. Trevor Gale, Matei Zaharia, Cliff Young, and Erich Elsen. Sparse gpu kernels\
    \ for deep learning. In SC20: International Conference for High Performance Computing,\
    \ Networking, Storage and Analysis, pages 1--14. IEEE, 2020. Scott Gray, Alec\
    \ Radford, and Diederik P Kingma. Block-sparse gpu kernels, 2017. Will Hamilton,\
    \ Zhitao Ying, and Jure Leskovec. Inductive representation learning on large graphs.\
    \ Advances in neural information processing systems, 30, 2017. Mohammed Heyouni\
    \ and Azeddine Essai. Matrix krylov subspace methods for linear systems with multiple\
    \ right-hand sides. Numerical Algorithms, 40:137--156, 2005. Mert Hidayeto\u011F\
    lu, Carl Pearson, Vikram Sharma Mailthody, Eiman Ebrahimi, Jinjun Xiong, Rakesh\
    \ Nagi, and Wen-mei Hwu. At-scale sparse deep neural network inference with efficient\
    \ gpu implementation. In 2020 IEEE High Performance Extreme Computing Conference\
    \ (HPEC), pages 1--7. IEEE, 2020. Mert Hidayetoglu, Carl Pearson, Vikram Sharma\
    \ Mailthody, Eiman Ebrahimi, Jinjun Xiong, Rakesh Nagi, and Wen-mei W Hwu. Efficient\
    \ inference on gpus for the sparse deep neural network graph challenge 2020. CoRR,\
    \ 2020. Changwan Hong, Aravind Sukumaran-Rajam, Bortik Bandyopadhyay, Jinsung\
    \ Kim, S\xFCreyya Emre Kurt, Israt Nisa, Shivani Sabhlok, \xDCmit V \xC7ataly\xFC\
    rek, Srinivasan Parthasarathy, and P Sadayappan. Efficient sparse-matrix multi-vector\
    \ product on gpus. In Proceedings of the 27th International Symposium on High-Performance\
    \ Parallel and Distributed Computing, pages 66--79, 2018. Changwan Hong, Aravind\
    \ Sukumaran-Rajam, Israt Nisa, Kunal Singh, and P Sadayappan. Adaptive sparse\
    \ tiling for sparse matrix multiplication. In Proceedings of the 24th Symposium\
    \ on Principles and Practice of Parallel Programming, pages 300--314, 2019. HPMLL.\
    \ DTC-SpMM_ASPLOS24. https://github.com/HPMLL/DTC-SpMM_ASPLOS24.git, 2024. Weihua\
    \ Hu, Matthias Fey, Marinka Zitnik, Yuxiao Dong, Hongyu Ren, Bowen Liu, Michele\
    \ Catasta, and Jure Leskovec. Open graph benchmark: Datasets for machine learning\
    \ on graphs. Advances in neural information processing systems, 33:22118--22133,\
    \ 2020. Yuwei Hu, Zihao Ye, Minjie Wang, Jiali Yu, Da Zheng, Mu Li, Zheng Zhang,\
    \ Zhiru Zhang, and Yida Wang. Featgraph: A flexible and efficient backend for\
    \ graph neural network systems. In SC20: International Conference for High Performance\
    \ Computing, Networking, Storage and Analysis, pages 1--13. IEEE, 2020. Guyue\
    \ Huang, Guohao Dai, Yu Wang, and Huazhong Yang. Ge-spmm: General-purpose sparse\
    \ matrix-matrix multiplication on gpus for graph neural networks. In SC20: International\
    \ Conference for High Performance Computing, Networking, Storage and Analysis,\
    \ pages 1--12. IEEE, 2020. Kezhao Huang, Jidong Zhai, Zhen Zheng, Youngmin Yi,\
    \ and Xipeng Shen. Understanding and bridging the gaps in current gnn performance\
    \ optimizations. In Proceedings of the 26th ACM SIGPLAN Symposium on Principles\
    \ and Practice of Parallel Programming, pages 119--132, 2021. Muhammad Huzaifa,\
    \ Johnathan Alsop, Abdulrahman Mahmoud, Giordano Salvador, Matthew D Sinclair,\
    \ and Sarita V Adve. Inter-kernel reuse-aware thread block scheduling. ACM Transactions\
    \ on Architecture and Code Optimization (TACO), 17(3):1--27, 2020. Zhe Jia, Marco\
    \ Maggioni, Benjamin Staiger, and Daniele P Scarpazza. Dissecting the nvidia volta\
    \ gpu architecture via microbenchmarking. arXiv preprint arXiv:1804.06826, 2018.\
    \ Peng Jiang, Changwan Hong, and Gagan Agrawal. A novel data transformation and\
    \ execution strategy for accelerating sparse matrix multiplication on gpus. In\
    \ Proceedings of the 25th ACM SIGPLAN symposium on principles and practice of\
    \ parallel programming, pages 376--388, 2020. Ramakrishnan Kannan, Grey Ballard,\
    \ and Haesun Park. A high-performance parallel algorithm for nonnegative matrix\
    \ factorization. ACM SIGPLAN Notices, 51(8):1--11, 2016. George Karypis and Vipin\
    \ Kumar. Metis: A software package for partitioning unstructured graphs, partitioning\
    \ meshes, and computing fill-reducing orderings of sparse matrices. 1997. Jeremy\
    \ Kepner, Simon Alford, Vijay Gadepally, Michael Jones, Lauren Milechin, Ryan\
    \ Robinett, and Sid Samsi. Sparse deep neural network graph challenge. In 2019\
    \ IEEE High Performance Extreme Computing Conference (HPEC), pages 1--7. IEEE,\
    \ 2019. Arpandeep Khatua, Vikram Sharma Mailthody, Bhagyashree Taleka, Tengfei\
    \ Ma, Xiang Song, and Wen-mei Hwu. Igb: Addressing the gaps in labeling, features,\
    \ heterogeneity, and size of public graph datasets for deep learning research.\
    \ In Proceedings of the 29th ACM SIGKDD Conference on Knowledge Discovery and\
    \ Data Mining, pages 4284--4295, 2023. Thomas N Kipf and Max Welling. Semi-supervised\
    \ classification with graph convolutional networks. arXiv preprint arXiv:1609.02907,\
    \ 2016. Scott P Kolodziej, Mohsen Aznaveh, Matthew Bullock, Jarrett David, Timothy\
    \ A Davis, Matthew Henderson, Yifan Hu, and Read Sandstrom. The suitesparse matrix\
    \ collection website interface. Journal of Open Source Software, 4(35):1244, 2019.\
    \ Mariia Krainiuk, Mehdi Goli, and Vincent R Pascuzzi. oneapi open-source math\
    \ library interface. In 2021 International Workshop on Performance, Portability\
    \ and Productivity in HPC (P3HPC), pages 22--32. IEEE, 2021. Jure Leskovec and\
    \ Rok Sosi\u010D. Snap: A general-purpose network analysis and graph-mining library.\
    \ ACM Transactions on Intelligent Systems and Technology (TIST), 8(1):1--20, 2016.\
    \ Ang Li, Shuaiwen Leon Song, Weifeng Liu, Xu Liu, Akash Kumar, and Henk Corporaal.\
    \ Locality-aware cta clustering for modern gpus. ACM SIGARCH Computer Architecture\
    \ News, 45(1):297--311, 2017. Shigang Li, Kazuki Osawa, and Torsten Hoefler. Efficient\
    \ quantized sparse matrix operations on tensor cores. In SC22: International Conference\
    \ for High Performance Computing, Networking, Storage and Analysis, pages 1--15.\
    \ IEEE, 2022. Maxim Naumov, L Chien, Philippe Vandermersch, and Ujval Kapasi.\
    \ Cusparse library. In GPU Technology Conference, 2010. NVIDIA. NVIDIA volta gpu\
    \ architecture whitepaper. https://images.nvidia.com/content/volta-architecture/pdf/volta-architecture-whitepaper.pdf,\
    \ 2017. Accessed on July 27, 2023. NVIDIA. NVIDIA ampere GA102 GPU architecture\
    \ whitepaper. https://images.nvidia.com/aem-dam/en-zz/Solutions/data-center/nvidia-ampere-architecture-whitepaper.pdf,\
    \ 2020. Accessed on July 27, 2023. NVIDIA. NVIDIA ampere GA102 GPU architecture\
    \ whitepaper. https://www.nvidia.com/content/PDF/nvidia-ampere-ga-102-gpu-architecture-whitepaper-v2.pdf,\
    \ 2020. Accessed on July 27, 2023. NVIDIA. NVIDIA ada gpu architecture whitepaper.\
    \ https://images.nvidia.com/aem-dam/Solutions/geforce/ada/nvidia-ada-gpu-architecture.pdf,\
    \ 2023. Accessed on July 27, 2023. NVIDIA. NVIDIA CUDA C Programming Guide. https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html,\
    \ 2023. Accessed on July 5, 2023. NVIDIA. PTX ISA: CUDA Toolkit documentation,\
    \ 2023. Accessed on July 27, 2023. NVIDIA. Accelerating matrix multiplication\
    \ with block-sparse format and NVIDIA tensor cores. https://developer.nvidia.com/blog/accelerating-matrix-multiplication-with-block-sparse-format-and-nvidia-tensor-cores/,\
    \ Publication date not provided. Accessed on July 27, 2023. Adam Paszke, Sam Gross,\
    \ Francisco Massa, Adam Lerer, James Bradbury, Gregory Chanan, Trevor Killeen,\
    \ Zeming Lin, Natalia Gimelshein, Luca Antiga, et al. Pytorch: An imperative style,\
    \ high-performance deep learning library. Advances in neural information processing\
    \ systems, 32, 2019. Xinyu Que, Fabio Checconi, Fabrizio Petrini, and John A Gunnels.\
    \ Scalable community detection with the louvain algorithm. In 2015 IEEE International\
    \ Parallel and Distributed Processing Symposium, pages 28--37. IEEE, 2015. Min\
    \ Shi, Yufei Tang, Xingquan Zhu, Yu Huang, David Wilson, Yuan Zhuang, and Jianxun\
    \ Liu. Genetic-gnn: Evolutionary architecture search for graph neural networks.\
    \ Knowledge-Based Systems, 247:108752, 2022. Wei Sun, Ang Li, Tong Geng, Sander\
    \ Stuijk, and Henk Corporaal. Dissecting tensor cores via microbenchmarks: Latency,\
    \ throughput and numeric behaviors. IEEE Transactions on Parallel and Distributed\
    \ Systems, 34(1):246--261, 2022. Yufei Sun, Long Zheng, Qinggang Wang, Xiangyu\
    \ Ye, Yu Huang, Pengcheng Yao, Xiaofei Liao, and Hai Jin. Accelerating sparse\
    \ deep neural network inference using gpu tensor cores. In 2022 IEEE High Performance\
    \ Extreme Computing Conference (HPEC), pages 1--7. IEEE, 2022. Yi Tay, Mostafa\
    \ Dehghani, Dara Bahri, and Donald Metzler. Efficient transformers: A survey.\
    \ ACM Comput. Surv., 55(6), dec 2022. Vijay Thakkar, Pradeep Ramani, Cris Cecka,\
    \ Aniket Shivam, Honghao Lu, Ethan Yan, Jack Kosaian, Mark Hoemmen, Haicheng Wu,\
    \ Andrew Kerr, Matt Nicely, Duane Merrill, Dustyn Blasig, Fengqi Qiao, Piotr Majcher,\
    \ Paul Springer, Markus Hohnerbach, Jin Wang, and Manish Gupta. CUTLASS, January\
    \ 2023. F Vazquez, EM Garzon, and JJ Fernandez. A matrix approach to tomographic\
    \ reconstruction and its implementation on gpus. Journal of Structural Biology,\
    \ 170(1):146--151, 2010. Minjie Yu Wang. Deep graph library: Towards efficient\
    \ and scalable deep learning on graphs. In ICLR workshop on representation learning\
    \ on graphs and manifolds, 2019. Yang Wang, Chen Zhang, Zhiqiang Xie, Cong Guo,\
    \ Yunxin Liu, and Jingwen Leng. Dual-side sparse tensor core. In 2021 ACM/IEEE\
    \ 48th Annual International Symposium on Computer Architecture (ISCA), pages 1083--1095.\
    \ IEEE, 2021. Yuke Wang, Boyuan Feng, Gushu Li, Shuangchen Li, Lei Deng, Yuan\
    \ Xie, and Yufei Ding. GNNAdvisor: An adaptive and efficient runtime system for\
    \ GNN acceleration on GPUs. In 15th USENIX symposium on operating systems design\
    \ and implementation (OSDI 21), pages 515--531, 2021. Yuke Wang, Boyuan Feng,\
    \ Zheng Wang, Tong Geng, Kevin Barker, Ang Li, and Yufei Ding. {MGG}: Accelerating\
    \ graph neural networks with {Fine-Grained} {Intra-Kernel} {Communication-Computation}\
    \ pipelining on {Multi-GPU} platforms. In 17th USENIX Symposium on Operating Systems\
    \ Design and Implementation (OSDI 23), pages 779--795, 2023. Yuke Wang, Boyuan\
    \ Feng, Zheng Wang, Guyue Huang, and Yufei Ding. TC-GNN: Bridging sparse GNN computation\
    \ and dense tensor cores on GPUs. In 2023 USENIX Annual Technical Conference (USENIX\
    \ ATC 23), pages 149--164, 2023. Zeyi Wen, Jiashuai Shi, Qinbin Li, Bingsheng\
    \ He, and Jian Chen. Thundersvm: A fast svm library on gpus and cpus. The Journal\
    \ of Machine Learning Research, 19(1):797--801, 2018. Haojun Xia, Zhen Zheng,\
    \ Yuchao Li, Donglin Zhuang, Zhongzhu Zhou, Xiafei Qiu, Yong Li, Wei Lin, and\
    \ Shuaiwen Leon Song. Flash-llm: Enabling cost-effective and highly-efficient\
    \ large generative model inference with unstructured sparsity. arXiv preprint\
    \ arXiv:2309.10285, 2023. Da Yan, Wei Wang, and Xiaowen Chu. Demystifying tensor\
    \ cores to optimize half-precision matrix multiply. In 2020 IEEE International\
    \ Parallel and Distributed Processing Symposium (IPDPS), pages 634--643. IEEE,\
    \ 2020. Da Yan, Wei Wang, and Xiaowen Chu. Optimizing batched winograd convolution\
    \ on gpus. In Proceedings of the 25th ACM SIGPLAN symposium on principles and\
    \ practice of parallel programming, pages 32--44, 2020. Carl Yang, Ayd\u0131n\
    \ Bulu\xE7, and John D Owens. Design principles for sparse matrix multiplication\
    \ on the gpu. In European Conference on Parallel Processing, pages 672--687. Springer,\
    \ 2018. Zihao Ye, Ruihang Lai, Junru Shao, Tianqi Chen, and Luis Ceze. Sparsetir:\
    \ Composable abstractions for sparse compilation in deep learning. In Proceedings\
    \ of the 28th ACM International Conference on Architectural Support for Programming\
    \ Languages and Operating Systems, Volume 3, ASPLOS 2023, page 660--678, New York,\
    \ NY, USA, 2023. Association for Computing Machinery. Yingfang Yuan, Wenjun Wang,\
    \ George M Coghill, and Wei Pang. A novel genetic algorithm with hierarchical\
    \ evaluation strategy for hyperparameter optimisation of graph neural networks.\
    \ arXiv preprint arXiv:2101.09300, 2021. Orestis Zachariadis, Nitin Satpute, Juan\
    \ G\xF3mez-Luna, and Joaqu\xEDn Olivares. Accelerating sparse matrix-matrix multiplication\
    \ with gpu tensor cores. Computers & Electrical Engineering, 88:106848, 2020.\
    \ Ningxin Zheng, Bin Lin, Quanlu Zhang, Lingxiao Ma, Yuqing Yang, Fan Yang, Yang\
    \ Wang, Mao Yang, and Lidong Zhou. SparTA: Deep-Learning model sparsity via Tensor-with-Sparsity-Attribute.\
    \ In 16th USENIX Symposium on Operating Systems Design and Implementation (OSDI\
    \ 22), pages 213--232, 2022."
  title: 'DTC-SpMM: Bridging the Gap in Accelerating General Sparse Matrix Multiplication
    with Tensor Cores'
  url: https://dl.acm.org/doi/10.1145/3620666.3651378
- abstract: 'Batteryless energy harvesting systems enable a wide array of new sensing,
    computation, and communication platforms untethered by power delivery or battery
    maintenance demands. Energy harvesters charge a buffer capacitor from an unreliable
    environmental source until enough energy is stored to guarantee a burst of operation
    despite changes in power input. Current platforms use a fixed-size buffer chosen
    at design time to meet constraints on charge time or application longevity, but
    static energy buffers are a poor fit for the highly volatile power sources found
    in real-world deployments: fixed buffers waste energy both as heat when they reach
    capacity during a power surplus and as leakage when they fail to charge the system
    during a power deficit.'
  keywords: ''
  references: "Saad Ahmed, Qurat ul Ain, Junaid Haroon Siddiqui, Luca Mottola, and\
    \ Muhammad Hamad Alizai. Intermittent computing with dynamic voltage and frequency\
    \ scaling. In Proceedings of the 2020 International Conference on Embedded Wireless\
    \ Systems and Networks, EWSN '20, page 97--107, USA, 2020. Junction Publishing.\
    \ Miran Alhaideri, Michael Rushanan, Denis Foo Kune, and Kevin Fu. The moo and\
    \ cement shoes: Future directions of a practical sense-control-actuate application,\
    \ September 2013. Presented at First International Workshop on the Swarm at the\
    \ Edge of the Cloud (SEC'13 @ ESWeek), Montreal. Anon. Rf traces, October 2022.\
    \ https://anonymous.4open.science/r/rf_traces-4B3E/README.md. Abu Bakar, Alexander\
    \ G. Ross, Kasim Sinan Yildirim, and Josiah Hester. Rehash: A flexible, developer\
    \ focused, heuristic adaptation platform for intermittently powered computing.\
    \ Proc. ACM Interact. Mob. Wearable Ubiquitous Technol., 5(3), sep 2021. James\
    \ Blackman. What is mmtc in 5g nr, and how does it impact nb-iot and lte-m, October\
    \ 2019. https://enterpriseiotinsights.com/20191016/channels/fundamentals/what-is-mmtc-in-5g-nr-and-how-does-it-impact-nb-iot-and-lte-m.\
    \ Michael Buettner, Ben Greenstein, and David Wetherall. Dewdrop: An energy-aware\
    \ runtime for computational rfid. In Proceedings of the 8th USENIX Conference\
    \ on Networked Systems Design and Implementation, NSDI'11, page 197--210, USA,\
    \ 2011. USENIX Association. Alexei Colin, Emily Ruppel, and Brandon Lucia. A reconfigurable\
    \ energy storage architecture for energy-harvesting devices. In Proceedings of\
    \ the Twenty-Third International Conference on Architectural Support for Programming\
    \ Languages and Operating Systems, ASPLOS '18, page 767--781, New York, NY, USA,\
    \ 2018. Association for Computing Machinery. Abracon Corporation. AB08X5 Real-Time\
    \ Clock Family, October 2014. https://abracon.com/Precisiontiming/AB08X5-RTC.PDF.\
    \ Jasper de Winkel, Carlo Delle Donne, Kasim Sinan Yildirim, Przemys\u0142aw Pawe\u0142\
    czak, and Josiah Hester. Reliable timekeeping for intermittent computing. In Proceedings\
    \ of the Twenty-Fifth International Conference on Architectural Support for Programming\
    \ Languages and Operating Systems, ASPLOS '20, page 53--67, New York, NY, USA,\
    \ 2020. Association for Computing Machinery. Jasper de Winkel, Vito Kortbeek,\
    \ Josiah Hester, and Przemys\u0142aw Pawe\u0142czak. Battery-free game boy. Proc.\
    \ ACM Interact. Mob. Wearable Ubiquitous Technol., 4(3), sep 2020. H. Desai and\
    \ B. Lucia. A power-aware heterogeneous architecture scaling model for energy-harvesting\
    \ computers. IEEE Computer Architecture Letters, 19(1):68--71, 2020. Analog Devices.\
    \ 0.5 \u2126 CMOS 1.65 V to 3.6 V Dual SPDT/2:1 Mux in Mini LFCSP Package, March\
    \ 2012. https://www.analog.com/media/en/technical-documentation/data-sheets/adg824.pdf.\
    \ Knowles Electronics. SPU0414HR5H-SB, December 2012. https://www.mouser.com/datasheet/2/218/knowles_01232019_SPU0414HR5H_SB-1891952.pdf.\
    \ M. Gorlatova, A. Wallwater, and G. Zussman. Networking low-power energy harvesting\
    \ devices: Measurements and algorithms. In 2011 Proceedings IEEE INFOCOM, pages\
    \ 1602--1610, 2011. Wang Song Hao and Ronald Garcia. Development of a digital\
    \ and battery-free smart flowmeter. Energies, 7(6):3695--3709, 2014. Josiah Hester,\
    \ Timothy Scott, and Jacob Sorber. Ekho: Realistic and repeatable experimentation\
    \ for tiny energy-harvesting sensors. In Proceedings of the 12th ACM Conference\
    \ on Embedded Network Sensor Systems, SenSys '14, page 330--331, New York, NY,\
    \ USA, 2014. Association for Computing Machinery. Josiah Hester, Lanny Sitanayah,\
    \ and Jacob Sorber. Tragedy of the coulombs: Federating energy storage for tiny,\
    \ intermittently-powered sensors. In ACM Conference on Embedded Networked Sensor\
    \ Systems, SenSys, pages 5--16, 2015. Josiah Hester and Jacob Sorber. Flicker:\
    \ Rapid prototyping for the batteryless internet-of-things. In Proceedings of\
    \ the 15th ACM Conference on Embedded Network Sensor Systems, SenSys '17, New\
    \ York, NY, USA, 2017. Association for Computing Machinery. Matthew Hicks. Clank:\
    \ Architectural support for intermittent computation. In International Symposium\
    \ on Computer Architecture, ISCA, pages 228--240, 2017. Fraunhofer IIS. RFicient\
    \ Basic, Ultra-Low-Power WakeUp Receiver, January 2019. https://www.iis.fraunhofer.de/content/dam/iis/en/doc/il/ics/ic-design/Datenblaetter/Factsheet_WakeUp_v4.pdf.\
    \ Texas Instruments. Msp430g2\xD752, msp430g2\xD712 mixed signal microcontroller\
    \ datasheet (rev. g), May 2013. https://www.ti.com/lit/ds/symlink/msp430g2252.pdf.\
    \ Texas Instruments. Lm66100 5.5-v, 1.5-a 79-milliohm, low iq ideal diode with\
    \ input polarity protection, June 2019. https://www.ti.com/lit/ds/symlink/lm66100.pdf.\
    \ Texas Instruments. MSP430FR599x, MSP430FR596x Mixed-Signal Microcontrollers,\
    \ January 2021. https://www.ti.com/lit/ds/symlink/msp430fr5994.pdf. Texas Instruments.\
    \ Tlv703x and tlv704x small-size, nanopower, low-voltage comparators, July 2021.\
    \ https://www.ti.com/lit/ds/symlink/tlv7044.pdf. Joseph Kahn, Randy Katz, and\
    \ Kristofer Pister. Next Century Challenges: Mobile Networking for \"Smart Dust\"\
    . In Conference on Mobile Computing and Networking (MobiCom), 1999. Kemet. Supercapacitors\
    \ fm series, July 2020. https://www.mouser.com/datasheet/2/212/1/KEM_S6012_FM-1103835.pdf.\
    \ Silicon Labs. EFM32 Gecko Family EFM32WG Data Sheet, December 2021. https://www.silabs.com/documents/public/data-sheets/efm32wg-datasheet.pdf.\
    \ Brandon Lucia and Benjamin Ransford. A simpler, safer programming and execution\
    \ model for intermittent systems. In Conference on Programming Language Design\
    \ and Implementation, PLDI, pages 575--585, 2015. K. Ma, Y. Zheng, S. Li, K. Swaminathan,\
    \ X. Li, Y. Liu, J. Sampson, Y. Xie, and V. Narayanan. Architecture exploration\
    \ for ambient energy harvesting nonvolatile processors. In IEEE International\
    \ Symposium on High Performance Computer Architecture, HPCA, pages 526--537, Feb\
    \ 2015. Kiwan Maeng, Alexei Colin, and Brandon Lucia. Alpaca: Intermittent execution\
    \ without checkpoints. In International Conference on Object-Oriented Programming,\
    \ Systems, Languages, and Applications, OOPSLA, pages 96:1--96:30, October 2017.\
    \ Kiwan Maeng and Brandon Lucia. Adaptive dynamic checkpointing for safe efficient\
    \ intermittent computing. In USENIX Conference on Operating Systems Design and\
    \ Implementation, OSDI, pages 129--144, November 2018. Kiwan Maeng and Brandon\
    \ Lucia. Adaptive low-overhead scheduling for periodic and reactive intermittent\
    \ execution. In Proceedings of the 41st ACM SIGPLAN Conference on Programming\
    \ Language Design and Implementation, PLDI 2020, page 1005--1021, New York, NY,\
    \ USA, 2020. Association for Computing Machinery. Microchip. PIC18(L)F65/66K40,\
    \ November 2017. https://ww1.microchip.com/downloads/en/DeviceDoc/40001842D.pdf.\
    \ Microsemi. ZL70251 Ultra-Low-Power Sub-GHz RF Transceiver, March 2018. https://www.microsemi.com/document-portal/doc_view/132900-zl70251-datasheet.\
    \ Murata. GRM31CR60J227ME11L Chip Monolithic Ceramic Capacitor for General. https://search.murata.co.jp/Ceramy/image/img/A01X/G101/ENG/GRM31CR60J227ME11-01.pdf.\
    \ Murata. Supercapacitors FM Series, July 2020. https://www.mouser.com/datasheet/2/212/1/KEM_S6012_FM-1103835.pdf.\
    \ Phillip Nadeua, Dina El-Damaj, Deal Glettig, Yong Lin Kong, Stacy Mo, Cody Cleveland,\
    \ Lucas Booth, Niclas Roxhed, Robert Langer, Anantha P. Chandrakasan, and Giovanni\
    \ Traverso. Prolonged energy harvesting for ingestible devices. Nature Biomedical\
    \ Engineering, 1(0022), Feb 2017. Nichicon. ALUMINUM ELECTROLYTIC CAPACITORS.\
    \ https://www.nichicon.co.jp/english/products/pdfs/e-kl.pdf. Panasonic. Panasonic\
    \ coin type lithium batteries, August 2005. https://datasheet.octopart.com/CR1616-Panasonic-datasheet-9751741.pdf.\
    \ Powercast. P2110B 915 MHz RF Powerharvester Receiver, December 2016. https://www.powercastco.com/wp-content/uploads/2016/12/P2110B-Datasheet-Rev-3.pdf.\
    \ Powercast. TX91501B - 915 MHz Powercaster Transmitter, October 2019. https://www.powercastco.com/wp-content/uploads/2019/10/User-Manual-TX-915-01B-Rev-A-1.pdf.\
    \ Powercast. 915 mhz dipole antenna datasheet, November 2020. https://www.powercastco.com/wp-content/uploads/2020/11/DA-915-01-Antenna-Datasheet_new_web.pdf.\
    \ Benjamin Ransford, Jacob Sorber, and Kevin Fu. Mementos: System Support for\
    \ Long-Running Computation on RFID-Scale Devices. In Architectural Support for\
    \ Programming Languages and Operating Systems (ASPLOS), 2011. ROHM Semiconductor.\
    \ Low Voltage Standard CMOS Voltage Detector ICs, October 2021. https://fscdn.rohm.com/en/products/databook/datasheet/ic/power/voltage_detector/bu48xxg-e.pdf.\
    \ Henry Sodano, Gyuhae Park, and Daniel Inman. Estimation of Electric Charge Output\
    \ for Piezoelectric Energy Harvesting. In Strain, Volume 40, 2004. ST. Small signal\
    \ schottky diode, October 2001. https://www.st.com/content/ccc/resource/technical/document/datasheet/group1/11/76/e4/a3/df/07/49/14/CD00000767/files/CD00000767.pdf/jcr:content/translations/en.CD00000767.pdf.\
    \ Voltaic. Voltaic systems p121 r1g, April 2020. https://voltaicsystems.com/content/VoltaicSystemsP121R1G.pdf.\
    \ Harrison Williams, Xun Jian, and Matthew Hicks. Forget failure: Exploiting sram\
    \ data remanence for low-overhead intermittent computation. In Proceedings of\
    \ the Twenty-Fifth International Conference on Architectural Support for Programming\
    \ Languages and Operating Systems, ASPLOS '20, page 69--84, New York, NY, USA,\
    \ 2020. Association for Computing Machinery. Harrison Williams, Michael Moukarzel,\
    \ and Matthew Hicks. Failure sentinels: Ubiquitous just-in-time intermittent computation\
    \ via low-cost hardware support for voltage monitoring. In International Symposium\
    \ on Computer Architecture, ISCA, pages 665--678, 2021. Joel Van Der Woude and\
    \ Matthew Hicks. Intermittent computation without hardware support or programmer\
    \ intervention. In USENIX Symposium on Operating Systems Design and Implementation,\
    \ OSDI, pages 17--32, November 2016. X. Wu, I. Lee, Q. Dong, K. Yang, D. Kim,\
    \ J. Wang, Y. Peng, Y. Zhang, M. Saliganc, M. Yasuda, K. Kumeno, F. Ohno, S. Miyoshi,\
    \ M. Kawaminami, D. Sylvester, and D. Blaauw. A 0.04mm316nw wireless and batteryless\
    \ sensor system with integrated cortex-m0+ processor and optical communication\
    \ for cellular temperature measurement. In 2018 IEEE Symposium on VLSI Circuits,\
    \ pages 191--192, 2018. Fan Yang, Ashok Samraj Thangarajan, Wouter Joosen, Christophe\
    \ Huygens, Danny Hughes, Gowri Sankar Ramachandran, and Bhaskar Krishnamachari.\
    \ Astar: Sustainable battery free energy harvesting for heterogeneous platforms\
    \ and dynamic environments. In Proceedings of the 2019 International Conference\
    \ on Embedded Wireless Systems and Networks, EWSN '19, page 71--82, USA, 2019.\
    \ Junction Publishing. Fan Yang, Ashok Samraj Thangarajan, Sam Michiels, Wouter\
    \ Joosen, and Danny Hughes. Morphy: Software defined charge storage for the iot.\
    \ In Proceedings of the 19th ACM Conference on Embedded Networked Sensor Systems,\
    \ SenSys '21, page 248--260, New York, NY, USA, 2021. Association for Computing\
    \ Machinery."
  title: Energy-Adaptive Buffering for Efficient, Responsive, and Persistent Batteryless
    Systems
  url: https://dl.acm.org/doi/10.1145/3620666.3651370
- abstract: Control-flow hijacking and data-oriented attacks are becoming more sophisticated.
    These attacks, especially data-oriented attacks, can result in critical security
    threats, such as leaking an SSL key. Data-oriented attacks are hard to defend
    against with acceptable performance due to the sheer amount of data pointers present.
    The root cause of such attacks is using pointers in unintended ways; fundamentally,
    these attacks rely on abusing pointers to violate the original scope they were
    used in or the original types that they were declared as.
  keywords: ''
  references: "Apple LLVM. https://github.com/apple/swift-llvm. Llvm pointer authentication.\
    \ https://llvm.org/docs/PointerAuth.html. PyTorch Benchmarks. https://github.com/pytorch/benchmark.\
    \ Baggy bounds checking: An efficient and Backwards-Compatible defense against\
    \ Out-of-Bounds errors. In 18th USENIX Security Symposium (USENIX Security 09),\
    \ Montreal, Quebec, August 2009. USENIX Association. Clang 13. ShadowCallStack,\
    \ 2021. https://clang.llvm.org/docs/ShadowCallStack.html. Mart\xEDn Abadi, Mihai\
    \ Budiu, Ulfar Erlingsson, and Jay Ligatti. Control-flow integrity. In Proceedings\
    \ of the 12th ACM Conference on Computer and Communications Security (CCS), Alexandria,\
    \ VA, November 2005. Periklis Akritidis, Cristian Cadar, Costin Raiciu, Manuel\
    \ Costa, and Miguel Castro. Preventing memory error exploits with wit. In 2008\
    \ IEEE Symposium on Security and Privacy (sp 2008), pages 263--277, 2008. Apple.\
    \ Apple Mac Mini M1, 2020. https://www.apple.com/shop/buy-mac/mac-mini/apple-m1-chip-with-8-core-cpu-and-8-core-gpu-256gb.\
    \ Apple. Apple unleashes M1, 2020. https://www.apple.com/newsroom/2020/11/apple-unleashes-m1/.\
    \ Apple. Operating system integrity, 2021. https://support.apple.com/en-hk/guide/security/sec8b776536b/1/web.\
    \ Arm. Fixed Virtual Platforms. https://developer.arm.com/tools-and-software/simulation-models/fixed-virtual-platforms.\
    \ Arm. Top Byte Ignore, 2018. https://en.wikichip.org/wiki/arm/tbi. Arm. PACBTI,\
    \ 2020. https://community.arm.com/arm-community-blogs/b/architectures-and-processors-blog/posts/armv8-1-m-pointer-authentication-and-branch-target-identification-extension.\
    \ Andrea Bittau, Adam Belay, Ali Mashtizadeh, David Mazi\xE8res, and Dan Boneh.\
    \ Hacking blind. In Proceedings of the 35th IEEE Symposium on Security and Privacy\
    \ (Oakland), San Jose, CA, May 2014. Tyler Bletsch, Xuxian Jiang, Vince W. Freeh,\
    \ and Zhenkai Liang. Jump-Oriented Programming: A New Class of Code-Reuse Attack.\
    \ In Proceedings of the 6th ACM Symposium on Information, Computer and Communications\
    \ Security (ASIACCS), page 30--40, Hong Kong, China, March 2011. James Bucek,\
    \ Klaus-Dieter Lange, and J\xF3akim v. Kistowski. Spec cpu2017: Next-generation\
    \ compute benchmark. In Companion of the 2018 ACM/SPEC International Conference\
    \ on Performance Engineering, ICPE '18, page 41--42, New York, NY, USA, 2018.\
    \ Association for Computing Machinery. Nathan Burow, Scott A Carr, Joseph Nash,\
    \ Per Larsen, Michael Franz, Stefan Brunthaler, and Mathias Payer. Control-flow\
    \ integrity: Precision, security, and performance. ACM Computing Surveys (CSUR),\
    \ 50(1):16, 2017. Nathan Burow, Derrick McKee, Scott A. Carr, and Mathias Payer.\
    \ CFIXX: Object Type Integrity for C++ Virtual Dispatch. In Proceedings of the\
    \ 2018 Annual Network and Distributed System Security Symposium (NDSS), San Diego,\
    \ CA, February 2018. Nicholas Carlini, Antonio Barresi, Mathias Payer, David Wagner,\
    \ and Thomas R Gross. Control-Flow Bending: On the Effectiveness of Control-Flow\
    \ Integrity. In Proceedings of the 24th USENIX Security Symposium (Security),\
    \ Washington, DC, August 2015. Nicholas Carlini and David Wagner. Rop is still\
    \ dangerous: Breaking modern defenses. In Proceedings of the 23rd USENIX Security\
    \ Symposium (Security), San Diego, CA, August 2014. Scott A. Carr and Mathias\
    \ Payer. Datashield: Configurable data confidentiality and integrity. In Proceedings\
    \ of the 2017 ACM on Asia Conference on Computer and Communications Security,\
    \ ASIA CCS '17, page 193--204, New York, NY, USA, 2017. Association for Computing\
    \ Machinery. Miguel Castro, Manuel Costa, and Tim Harris. Securing Software by\
    \ Enforcing Data-flow Integrity. In Proceedings of the 7th USENIX Symposium on\
    \ Operating Systems Design and Implementation (OSDI), pages 147--160, Seattle,\
    \ WA, November 2006. Shuo Chen, Jun Xu, and Emre C. Sezer. Non-Control-Data attacks\
    \ are realistic threats. In 14th USENIX Security Symposium (USENIX Security 05),\
    \ Baltimore, MD, July 2005. USENIX Association. Shuo Chen, Jun Xu, and Emre C.\
    \ Sezer. Non-Control-Data attacks are realistic threats. In 14th USENIX Security\
    \ Symposium (USENIX Security 05), Baltimore, MD, July 2005. USENIX Association.\
    \ Yueqiang Cheng, Zongwei Zhou, Yu Miao, Xuhua Ding, and Robert H Deng. Ropecker:\
    \ A generic and practical approach for defending against rop attack. In Proceedings\
    \ of the 2014 Annual Network and Distributed System Security Symposium (NDSS),\
    \ San Diego, CA, February 2014. Crispin Cowan, Steve Beattie, John Johansen, and\
    \ Perry Wagle. Point-Guard\u2122: Protecting pointers from buffer overflow vulnerabilities.\
    \ In 12th USENIX Security Symposium (USENIX Security 03), Washington, D.C., August\
    \ 2003. USENIX Association. Stephen J Crane, Stijn Volckaert, Felix Schuster,\
    \ Christopher Liebchen, Per Larsen, Lucas Davi, Ahmad-Reza Sadeghi, Thorsten Holz,\
    \ Bjorn De Sutter, and Michael Franz. It's a TRaP: Table Randomization and Protection\
    \ Against Function-reuse Attacks. In Proceedings of the 36th IEEE Symposium on\
    \ Security and Privacy (Oakland), San Jose, CA, May 2015. Lucas Davi, Ahmad-Reza\
    \ Sadeghi, Daniel Lehmann, and Fabian Monrose. Stitching the gadgets: On the ineffectiveness\
    \ of coarse-grained control-flow integrity protection. In Proceedings of the 23rd\
    \ USENIX Security Symposium (Security), San Diego, CA, August 2014. Joe Devietti,\
    \ Colin Blundell, Milo M. K. Martin, and Steve Zdancewic. Hardbound: Architectural\
    \ support for spatial safety of the c programming language. In Proceedings of\
    \ the 13th International Conference on Architectural Support for Programming Languages\
    \ and Operating Systems, ASPLOS XIII, page 103--114, 2008. Dinakar Dhurjati, Sumant\
    \ Kowshik, and Vikram Adve. Safecode: Enforcing alias analysis for weakly typed\
    \ languages. In Proceedings of the 27th ACM SIGPLAN Conference on Programming\
    \ Language Design and Implementation, PLDI '06, page 144--157, New York, NY, USA,\
    \ 2006. Association for Computing Machinery. Ren Ding, Chenxiong Qian, Chengyu\
    \ Song, Bill Harris, Taesoo Kim, and Wenke Lee. Efficient protection of path-sensitive\
    \ control security. In Proceedings of the 26th USENIX Security Symposium (Security),\
    \ pages 131--148, Vancouver, BC, Canada, August 2017. Gregory J. Duck and Roland\
    \ H. C. Yap. Effectivesan: Type and memory error detection using dynamically typed\
    \ c/c++. In Proceedings of the 39th ACM SIGPLAN Conference on Programming Language\
    \ Design and Implementation, PLDI 2018, page 181--195, New York, NY, USA, 2018.\
    \ Association for Computing Machinery. Zakir Durumeric, Frank Li, James Kasten,\
    \ Johanna Amann, Jethro Beekman, Mathias Payer, Nicolas Weaver, David Adrian,\
    \ Vern Paxson, Michael Bailey, and J. Alex Halderman. The matter of heartbleed.\
    \ In Proceedings of the 2014 Conference on Internet Measurement Conference, IMC\
    \ '14, page 475--488, New York, NY, USA, 2014. Association for Computing Machinery.\
    \ Isaac Evans, Fan Long, Ulziibayar Otgonbaatar, Howard Shrobe, Martin Rinard,\
    \ Hamed Okhravi, and Stelios Sidiroglou-Douskos. Control Jujutsu: On the Weaknesses\
    \ of Fine-Grained Control Flow Integrity. In Proceedings of the 22nd ACM Conference\
    \ on Computer and Communications Security (CCS), page 901--913, Denver, Colorado,\
    \ October 2015. Xinyang Ge, Weidong Cui, and Trent Jaeger. Griffin: Guarding control\
    \ flows using intel processor trace. In Proceedings of the 22nd ACM International\
    \ Conference on Architectural Support for Programming Languages and Operating\
    \ Systems (ASPLOS), Xi'an, China, April 2017. Will Glozer. a HTTP benchmarking\
    \ tool, 2019. https://github.com/wg/wrk. Enes G\xF6ktas, Elias Athanasopoulos,\
    \ Herbert Bos, and Georgios Portokalidis. Out of control: Overcoming control-flow\
    \ integrity. In Proceedings of the 35th IEEE Symposium on Security and Privacy\
    \ (Oakland), San Jose, CA, May 2014. Jens Grossklags and Claudia Eckert. \u03C4\
    CFI: Type-Assisted Control Flow Integrity for x86-64 Binaries. In Proceedings\
    \ of the 21th International Symposium on Research in Attacks, Intrusions and Defenses\
    \ (RAID), Heraklion, Crete, Greece, September 2018. Yufei Gu, Qingchuan Zhao,\
    \ Yinqian Zhang, and Zhiqiang Lin. Pt-cfi: Transparent backward-edge control flow\
    \ violation detection using intel processor trace. In Proceedings of the 7th ACM\
    \ Conference on Data and Application Security and Privacy (CODASPY), Scottsdale,\
    \ AZ, March 2017. Khilan Gudka, Robert N.M. Watson, Jonathan Anderson, David Chisnall,\
    \ Brooks Davis, Ben Laurie, Ilias Marinos, Peter G. Neumann, and Alex Richardson.\
    \ Clean application compartmentalization with soaap. In Proceedings of the 22nd\
    \ ACM SIGSAC Conference on Computer and Communications Security, CCS '15, page\
    \ 1016--1031, New York, NY, USA, 2015. Association for Computing Machinery. John\
    \ L. Henning. Spec cpu2006 benchmark descriptions. SIGARCH Comput. Archit. News,\
    \ 34(4):1--17, September 2006. Konrad Hohentanner, Philipp Zieris, and Julian\
    \ Horsch. Pacsafe: Leveraging arm pointer authentication for memory safety in\
    \ c/c++, 2022. Hong Hu, Chenxiong Qian, Carter Yagemann, Simon Pak Ho Chung, William\
    \ R. Harris, Taesoo Kim, and Wenke Lee. Enforcing Unique Code Target Property\
    \ for Control-Flow Integrity. In Proceedings of the 25th ACM Conference on Computer\
    \ and Communications Security (CCS), Toronto, ON, Canada, October 2018. Hong Hu,\
    \ Shweta Shinde, Sendroiu Adrian, Zheng Leong Chua, Prateek Saxena, and Zhenkai\
    \ Liang. Data-oriented programming: On the expressiveness of non-control data\
    \ attacks. In Security and Privacy (SP), 2016 IEEE Symposium on, pages 969--986.\
    \ IEEE, 2016. Qualcomm Technologies Inc. Pointer Authentication on ARMv8.3, 2017.\
    \ https://www.qualcomm.com/media/documents/files/whitepaper-pointer-authentication-on-armv8-3.pdf.\
    \ Intel. Support for Intel\xAE Memory Protection Extensions (Intel\xAE MPX) Technology,\
    \ 2015. https://www.intel.com/content/www/us/en/support/articles/000059823/processors.html.\
    \ Mohannad Ismail, Andrew Quach, Christopher Jelesnianski, Yeongjin Jang, and\
    \ Changwoo Min. Tightly seal your sensitive pointers with PACTight. In 31st USENIX\
    \ Security Symposium (USENIX Security 22), pages 3717--3734, Boston, MA, August\
    \ 2022. USENIX Association. Mohannad Ismail, Jinwoo Yom, Christopher Jelesnianski,\
    \ Yeongjin Jang, and Changwoo Min. Vip: Safeguard value invariant property for\
    \ thwarting critical memory corruption attacks. In Proceedings of the 2021 ACM\
    \ SIGSAC Conference on Computer and Communications Security, CCS '21, 2021. Jonathan\
    \ Corbet. x86 NX support, 2004. https://lwn.net/Articles/87814/. Mustakimur Rahman\
    \ Khandaker, Wenqing Liu, Abu Naser, Zhi Wang, and Jie Yang. Origin-sensitive\
    \ Control Flow Integrity. In Proceedings of the 28th USENIX Security Symposium\
    \ (Security), Santa Clara, CA, August 2019. Yonghae Kim, Jaekyu Lee, and Hyesoon\
    \ Kim. Hardware-based always-on heap memory safety. In 2020 53rd Annual IEEE/ACM\
    \ International Symposium on Microarchitecture (MICRO), pages 1153--1166, 2020.\
    \ Paul Kocher, Jann Horn, Anders Fogh, Daniel Genkin, Daniel Gruss, Werner Haas,\
    \ Mike Hamburg, Moritz Lipp, Stefan Mangard, Thomas Prescher, Michael Schwarz,\
    \ and Yuval Yarom. Spectre attacks: Exploiting speculative execution. In 40th\
    \ IEEE Symposium on Security and Privacy (S&P'19), 2019. Volodymyr Kuznetsov,\
    \ L\xE1szl\xF3 Szekeres, Mathias Payer, George Candea, R Sekar, and Dawn Song.\
    \ Code-Pointer Integrity. In Proceedings of the 11th USENIX Symposium on Operating\
    \ Systems Design and Implementation (OSDI), Broomfield, Colorado, October 2014.\
    \ Yuan Li, Wende Tan, Zhizheng Lv, Songtao Yang, Mathias Payer, Ying Liu, and\
    \ Chao Zhang. Pacmem: Enforcing spatial and temporal memory safety via arm pointer\
    \ authentication. In Proceedings of the 2022 ACM SIGSAC Conference on Computer\
    \ and Communications Security, CCS '22, page 1901--1915, New York, NY, USA, 2022.\
    \ Association for Computing Machinery. Hans Liljestrand, Thomas Nyman, Kui Wang,\
    \ Carlos Chinea Perez, Jan-Erik Ekberg, and N. Asokan. PAC it up: Towards pointer\
    \ integrity using ARM pointer authentication. In Proceedings of the 28th USENIX\
    \ Security Symposium (Security), pages 177--194, Santa Clara, CA, August 2019.\
    \ Yutao Liu, Peitao Shi, Xinran Wang, Haibo Chen, Binyu Zang, and Haibing Guan.\
    \ Transparent and efficient CFI enforcement with intel processor trace. In Proceedings\
    \ of the 23rd IEEE Symposium on High Performance Computer Architecture (HPCA),\
    \ Austin, TX, February 2017. Zhengyang Liu and John Criswell. Flexible and efficient\
    \ memory object metadata. page 36--46, jun 2017. Ali Jose Mashtizadeh, Andrea\
    \ Bittau, Dan Boneh, and David Mazi\xE8res. CCFI: Cryptographically Enforced Control\
    \ Flow Integrity. In Proceedings of the 22nd ACM Conference on Computer and Communications\
    \ Security (CCS), Denver, Colorado, October 2015. Uwe Mayer. Linux/Unix nbench,\
    \ 2017. https://www.math.utah.edu/~mayer/linux/bmark.html. Faisal Memon. NGINX\
    \ Plus Sizing Guide: How We Tested, 2016. https://www.nginx.com/blog/nginx-plus-sizing-guide-how-we-tested/.\
    \ Microsoft Support. A detailed description of the Data Execution Prevention (DEP)\
    \ feature in Windows XP Service Pack 2, Windows XP Tablet PC Edition 2005, and\
    \ Windows Server 2003, 2017. https://support.microsoft.com/en-us/help/875352/a-detailed-description-of-the-data-execution-prevention-dep-feature-in.\
    \ Alyssa Milburn, Erik Van Der Kouwe, and Cristiano Giuffrida. Mitigating information\
    \ leakage vulnerabilities with type-based data isolation. In 2022 IEEE Symposium\
    \ on Security and Privacy (SP), pages 1049--1065, 2022. Santosh Nagarakatte, Milo\
    \ MK Martin, and Steve Zdancewic. Everything you want to know about pointer-based\
    \ checking. In 1st Summit on Advances in Programming Languages (SNAPL 2015). Schloss\
    \ Dagstuhl-Leibniz-Zentrum fuer Informatik, 2015. Ben Niu and Gang Tan. Modular\
    \ control-flow integrity. In Proceedings of the 2014 ACM SIGPLAN Conference on\
    \ Programming Language Design and Implementation (PLDI), Edinburgh, UK, June 2014.\
    \ Ben Niu and Gang Tan. Per-input control-flow integrity. In Proceedings of the\
    \ 22nd ACM Conference on Computer and Communications Security (CCS), Denver, Colorado,\
    \ October 2015. Vasilis Pappas, Michalis Polychronakis, and Angelos D Keromytis.\
    \ Transparent ROP Exploit Mitigation Using Indirect Branch Tracing. In Proceedings\
    \ of the 22th USENIX Security Symposium (Security), Washington, DC, August 2013.\
    \ Aravind Prakash, Xunchao Hu, and Heng Yin. vfGuard: Strict Protection for Virtual\
    \ Function Calls in COTS C++ Binaries. In Proceedings of the 2015 Annual Network\
    \ and Distributed System Security Symposium (NDSS), San Diego, CA, February 2015.\
    \ Joseph Ravichandran, Weon Taek Na, Jay Lang, and Mengjia Yan. Pacman: Attacking\
    \ arm pointer authentication with speculative execution. In Proceedings of the\
    \ 49th Annual International Symposium on Computer Architecture, ISCA '22, page\
    \ 685--698, New York, NY, USA, 2022. Association for Computing Machinery. Robert\
    \ Rudd, Richard Skowyra, David Bigelow, Veer Dedhia, Thomas Hobson, Stephen Crane,\
    \ Christopher Liebchen, Per Larsen, Lucas Davi, Michael Franz, et al. Address-Oblivious\
    \ Code Reuse: On the Effectiveness of Leakage Resilient Diversity. In Proceedings\
    \ of the 2017 Annual Network and Distributed System Security Symposium (NDSS),\
    \ San Diego, CA, February--March 2017. Jonathan Salwan. Ropgadget: Gadgets finder\
    \ and auto-roper, 2019. https://github.com/JonathanSalwan/ROPgadget. Cole Schlesinger,\
    \ Karthik Pattabiraman, Nikhil Swamy, David Walker, and Benjamin Zorn. Modular\
    \ protections against non-control data attacks. In 2011 IEEE 24th Computer Security\
    \ Foundations Symposium, pages 131--145, 2011. Cole Schlesinger, Karthik Pattabiraman,\
    \ Nikhil Swamy, David Walker, and Benjamin Zorn. Modular protections against non-control\
    \ data attacks. Journal of Computer Security, 22(5):699--742, 2014. Felix Schuster,\
    \ Thomas Tendyck, Christopher Liebchen, Lucas Davi, Ahmad-Reza Sadeghi, and Thorsten\
    \ Holz. Counterfeit Object-oriented Programming: On the Difficulty of Preventing\
    \ Code Reuse Attacks in C++ Applications. In Proceedings of the 36th IEEE Symposium\
    \ on Security and Privacy (Oakland), San Jose, CA, May 2015. Kevin Z Snow, Fabian\
    \ Monrose, Lucas Davi, Alexandra Dmitrienko, Christopher Liebchen, and Ahmad-Reza\
    \ Sadeghi. Just-in-time Code Reuse: On the Effectiveness of Fine-grained Address\
    \ Space Layout Randomization. In Proceedings of the 34th IEEE Symposium on Security\
    \ and Privacy (Oakland), San Francisco, CA, May 2013. Chengyu Song, Hyungon Moon,\
    \ Monjur Alam, Insu Yun, Byoungyoung Lee, Taesoo Kim, Wenke Lee, and Yunheung\
    \ Pack. HDFI: Hardware-Assisted Data-flow Isolation. In Proceedings of the 37th\
    \ IEEE Symposium on Security and Privacy (Oakland), San Jose, CA, May 2016. Laszlo\
    \ Szekeres, Mathias Payer, Tao Wei, and Dawn Song. Sok: Eternal war in memory.\
    \ In Proceedings of the 34th IEEE Symposium on Security and Privacy (Oakland),\
    \ San Francisco, CA, May 2013. The Clang Team. Clang 10 documentation: CONTROL\
    \ FLOW INTEGRITY, 2019. https://clang.llvm.org/docs/ControlFlowIntegrity.html.\
    \ Caroline Tice, Tom Roeder, Peter Collingbourne, Stephen Checkoway, \xDAlfar\
    \ Erlingsson, Luis Lozano, and Geoff Pike. Enforcing Forward-Edge Control-Flow\
    \ Integrity in GCC & LLVM. In Proceedings of the 23rd USENIX Security Symposium\
    \ (Security), San Diego, CA, August 2014. Erik van der Kouwe, Taddeus Kroes, Chris\
    \ Ouwehand, Herbert Bos, and Cristiano Giuffrida. Type-after-type: Practical and\
    \ complete type-safe memory reuse. In Proceedings of the 34th Annual Computer\
    \ Security Applications Conference, ACSAC '18, page 17--27, New York, NY, USA,\
    \ 2018. Association for Computing Machinery. Victor van der Veen, Dennis Andriesse,\
    \ Enes G\xF6kta\u015F, Ben Gras, Lionel Sambuc, Asia Slowinska, Herbert Bos, and\
    \ Cristiano Giuffrida. Practical context-sensitive CFI. In Proceedings of the\
    \ 22nd ACM Conference on Computer and Communications Security (CCS), Denver, Colorado,\
    \ October 2015. Victor van der Veen, Dennis Andriesse, Manolis Stamatogiannakis,\
    \ Xi Chen, Herbert Bos, and Cristiano Giuffrdia. The dynamics of innocent flesh\
    \ on the bone: Code reuse ten years later. In Proceedings of the 24th ACM Conference\
    \ on Computer and Communications Security (CCS), Dallas, TX, October--November\
    \ 2017. Victor van der Veen, Enes G\xF6ktas, Moritz Contag, Andre Pawoloski, Xi\
    \ Chen, Sanjay Rawat, Herbert Bos, Thorsten Holz, Elias Athanasopoulos, and Cristiano\
    \ Giuffrida. A tough call: Mitigating advanced code-reuse attacks at the binary\
    \ level. In Proceedings of the 37th IEEE Symposium on Security and Privacy (Oakland),\
    \ San Jose, CA, May 2016. Jonathan Woodruff, Robert N.M. Watson, David Chisnall,\
    \ Simon W. Moore, Jonathan Anderson, Brooks Davis, Ben Laurie, Peter G. Neumann,\
    \ Robert Norton, and Michael Roe. The cheri capability model: Revisiting risc\
    \ in an age of risk. SIGARCH Comput. Archit. News, page 457--468, jun 2014. Sungbae\
    \ Yoo, Jinbum Park, Seolheui Kim, Yeji Kim, and Taesoo Kim. In-Kernel Control-Flow\
    \ integrity on commodity OSes using ARM pointer authentication. In 31st USENIX\
    \ Security Symposium (USENIX Security 22), pages 89--106, Boston, MA, August 2022.\
    \ USENIX Association. Chao Zhang, Tao Wei, Zhaofeng Chen, Lei Duan, Laszlo Szekeres,\
    \ Stephen McCamant, Dawn Song, and Wei Zou. Practical control flow integrity and\
    \ randomization for binary executables. In Proceedings of the 34th IEEE Symposium\
    \ on Security and Privacy (Oakland), San Francisco, CA, May 2013. Mingwei Zhang\
    \ and R Sekar. Control Flow Integrity for COTS Binaries. In Proceedings of the\
    \ 22th USENIX Security Symposium (Security), Washington, DC, August 2013. Tong\
    \ Zhang, Dongyoon Lee, and Changhee Jung. BOGO: Buy Spatial Memory Safety, Get\
    \ Temporal Memory Safety (Almost) Free. In Proceedings of the 24th ACM International\
    \ Conference on Architectural Support for Programming Languages and Operating\
    \ Systems (ASPLOS), page 631--644, Providence, RI, April 2019."
  title: Enforcing C/C++ Type and Scope at Runtime for Control-Flow and Data-Flow
    Integrity
  url: https://dl.acm.org/doi/10.1145/3620666.3651342
- abstract: As deep learning models become increasingly complex, the deep learning
    compilers are critical for enhancing the system efficiency and unlocking hidden
    optimization opportunities. Although excellent speedups have been achieved in
    inference workloads, existing compilers face significant limitations in training.
    Firstly, the training computation graph involves intricate operations challenging
    to fuse, such as normalization, loss functions, and reductions, which limit optimization
    opportunities like kernel fusion. Secondly, the training graph's additional edges
    connecting forward and backward operators pose challenges in finding optimal and
    feasible partitions for kernel fusion. More importantly, existing compilers cannot
    either generate kernels with state-of-the-art performance on modern GPUs or accommodate
    diverse fusion patterns.
  keywords: ''
  references: "Riyadh Baghdadi, Jessica Ray, Malek Ben Romdhane, Emanuele Del Sozzo,\
    \ Abdurrahman Akkas, Yunming Zhang, Patricia Suriana, Shoaib Kamil, and Saman\
    \ Amarasinghe. Tiramisu: A polyhedral compiler for expressing fast and portable\
    \ code. In 2019 IEEE/ACM International Symposium on Code Generation and Optimization\
    \ (CGO), pages 193--205. IEEE, 2019. Preston Briggs and Keith D Cooper. Effective\
    \ partial redundancy elimination. ACM SIGPLAN Notices, 29(6):159--170, 1994. Tapabrata\
    \ Chakraborti, Brendan McCane, Steven Mills, and Umapada Pal. Coconet: A collaborative\
    \ convolutional network. arXiv preprint arXiv:1901.09886, 2019. Tianqi Chen, Thierry\
    \ Moreau, Ziheng Jiang, Lianmin Zheng, Eddie Yan, Meghan Cowan, Haichen Shen,\
    \ Leyuan Wang, Yuwei Hu, Luis Ceze, et al. Tvm: an automated end-to-end optimizing\
    \ compiler for deep learning. In Proceedings of the 13th USENIX conference on\
    \ Operating Systems Design and Implementation, pages 579--594, 2018. Zhaodong\
    \ Chen, Zheng Qu, Liu Liu, Yufei Ding, and Yuan Xie. Efficient tensor core-based\
    \ gpu kernels for structured sparsity under reduced precision. In Proceedings\
    \ of the International Conference for High Performance Computing, Networking,\
    \ Storage and Analysis, pages 1--14, 2021. Jacob Devlin, Ming-Wei Chang, Kenton\
    \ Lee, and Kristina Toutanova. Bert: Pre-training of deep bidirectional transformers\
    \ for language understanding. In Proceedings of the 2019 Conference of the North\
    \ American Chapter of the Association for Computational Linguistics: Human Language\
    \ Technologies, Volume 1 (Long and Short Papers), pages 4171--4186, 2019. Alexey\
    \ Dosovitskiy, Lucas Beyer, Alexander Kolesnikov, Dirk Weissenborn, Xiaohua Zhai,\
    \ Thomas Unterthiner, Mostafa Dehghani, Matthias Minderer, Georg Heigold, Sylvain\
    \ Gelly, et al. An image is worth 16\xD716 words: Transformers for image recognition\
    \ at scale. In International Conference on Learning Representations. Kaiming He,\
    \ Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image\
    \ recognition. In Proceedings of the IEEE conference on computer vision and pattern\
    \ recognition, pages 770--778, 2016. Julien Herrmann, Jonathan Kho, Bora U\xE7\
    ar, Kamer Kaya, and \xDCmit V \xC7ataly\xFCrek. Acyclic partitioning of large\
    \ directed acyclic graphs. In 2017 17th IEEE/ACM international symposium on cluster,\
    \ cloud and grid computing (CCGRID), pages 371--380. IEEE, 2017. Guyue Huang,\
    \ Guohao Dai, Yu Wang, and Huazhong Yang. Gespmm: General-purpose sparse matrix-matrix\
    \ multiplication on gpus for graph neural networks. In SC20: International Conference\
    \ for High Performance Computing, Networking, Storage and Analysis, pages 1--12.\
    \ IEEE, 2020. Sergey Ioffe and Christian Szegedy. Batch normalization: Accelerating\
    \ deep network training by reducing internal covariate shift. In International\
    \ conference on machine learning, pages 448--456. pmlr, 2015. Wonkyung Jung, Daejin\
    \ Jung, Byeongho Kim, Sunjung Lee, Wonjong Rhee, and Jung Ho Ahn. Restructuring\
    \ batch normalization to accelerate cnn training. Proceedings of Machine Learning\
    \ and Systems, 1:14--26, 2019. Brian W Kernighan and Shen Lin. An efficient heuristic\
    \ procedure for partitioning graphs. The Bell system technical journal, 49(2):291--307,\
    \ 1970. Thomas N Kipf and Max Welling. Semi-supervised classification with graph\
    \ convolutional networks. In International Conference on Learning Representations.\
    \ Chris Lattner, Mehdi Amini, Uday Bondhugula, Albert Cohen, Andy Davis, Jacques\
    \ Pienaar, River Riddle, Tatiana Shpeisman, Nicolas Vasilache, and Oleksandr Zinenko.\
    \ Mlir: A compiler infrastructure for the end of moore's law. arXiv preprint arXiv:2002.11054,\
    \ 2020. Mingzhen Li, Yi Liu, Xiaoyan Liu, Qingxiao Sun, Xin You, Hailong Yang,\
    \ Zhongzhi Luan, Lin Gan, Guangwen Yang, and Depei Qian. The deep learning compiler:\
    \ A comprehensive survey. IEEE Transactions on Parallel and Distributed Systems,\
    \ 32(3):708--727, 2020. Jingzhou Liu, Wei-Cheng Chang, Yuexin Wu, and Yiming Yang.\
    \ Deep learning for extreme multi-label text classification. In Proceedings of\
    \ the 40th international ACM SIGIR conference on research and development in information\
    \ retrieval, pages 115--124, 2017. Clair E Miller, Albert W Tucker, and Richard\
    \ A Zemlin. Integer programming formulation of traveling salesman problems. Journal\
    \ of the ACM (JACM), 7(4):326--329, 1960. Jenny Nossack and Erwin Pesch. A branch-and-bound\
    \ algorithm for the acyclic partitioning problem. Computers & operations research,\
    \ 41:174--184, 2014. Muhammad Osama, Duane Merrill, Cris Cecka, Michael Garland,\
    \ and John D Owens. Stream-k: Work-centric parallel decomposition for dense matrix-matrix\
    \ multiplication on the gpu. In Proceedings of the 28th ACM SIGPLAN Annual Symposium\
    \ on Principles and Practice of Parallel Programming, pages 429--431, 2023. M\
    \ Yusuf \xD6zkaya and \xDCmit V \xC7ataly\xFCrek. A simple and elegant mathematical\
    \ formulation for the acyclic dag partitioning problem. arXiv preprint arXiv:2207.13638,\
    \ 2022. Adam Paszke, Sam Gross, Francisco Massa, Adam Lerer, James Bradbury, Gregory\
    \ Chanan, Trevor Killeen, Zeming Lin, Natalia Gimelshein, Luca Antiga, Alban Desmaison,\
    \ Andreas Kopf, Edward Yang, Zachary DeVito, Martin Raison, Alykhan Tejani, Sasank\
    \ Chilamkurthy, Benoit Steiner, Lu Fang, Junjie Bai, and Soumith Chintala. PyTorch:\
    \ An Imperative Style, High-Performance Deep Learning Library. In H. Wallach,\
    \ H. Larochelle, A. Beygelzimer, F. d'Alch\xE9 Buc, E. Fox, and R. Garnett, editors,\
    \ Advances in Neural Information Processing Systems 32, pages 8024--8035. Curran\
    \ Associates, Inc., 2019. URL: http://papers.neurips.cc/paper/9015-pytorch-an-imperative-style-high-performance-deep-learning-library.pdf.\
    \ Kishore Punniyamurthy, Bradford M Beckmann, and Khaled Hamidouche. Gpu-initiated\
    \ fine-grained overlap of collective communication with computation. arXiv preprint\
    \ arXiv:2305.06942, 2023. Nino Shervashidze, Pascal Schweitzer, Erik Jan Van Leeuwen,\
    \ Kurt Mehlhorn, and Karsten M Borgwardt. Weisfeiler-lehman graph kernels. Journal\
    \ of Machine Learning Research, 12(9), 2011. Vijay Thakkar, Pradeep Ramani, Cris\
    \ Cecka, Aniket Shivam, Honghao Lu, Ethan Yan, Jack Kosaian, Mark Hoemmen, Haicheng\
    \ Wu, Andrew Kerr, Matt Nicely, Duane Merrill, Dustyn Blasig, Fengqi Qiao, Piotr\
    \ Majcher, Paul Springer, Markus Hohnerbach, Jin Wang, and Manish Gupta. CUTLASS,\
    \ 1 2023. URL: https://github.com/NVIDIA/cutlass. Philippe Tillet, Hsiang-Tsung\
    \ Kung, and David Cox. Triton: an intermediate language and compiler for tiled\
    \ neural network computations. In Proceedings of the 3rd ACM SIGPLAN International\
    \ Workshop on Machine Learning and Programming Languages, pages 10--19, 2019.\
    \ Nicolas Vasilache, Oleksandr Zinenko, Theodoros Theodoridis, Priya Goyal, Zachary\
    \ DeVito, William S Moses, Sven Verdoolaege, Andrew Adams, and Albert Cohen. Tensor\
    \ comprehensions: Framework-agnostic high-performance machine learning abstractions.\
    \ arXiv preprint arXiv:1802.04730, 2018. Guibin Wang, YiSong Lin, and Wei Yi.\
    \ Kernel fusion: An effective method for better power efficiency on multithreaded\
    \ gpu. In 2010 IEEE/ACM Int'l Conference on Green Computing and Communications\
    \ & Int'l Conference on Cyber, Physical and Social Computing, pages 344--350.\
    \ IEEE, 2010. Jiarong Xing, Leyuan Wang, Shang Zhang, Jack Chen, Ang Chen, and\
    \ Yibo Zhu. Bolt: Bridging the gap between auto-tuners and hardware-native performance.\
    \ Proceedings of Machine Learning and Systems, 4:204--216, 2022. Bing Xu, Ying\
    \ Zhang, Hao Lu, Yang Chen, Terry Chen, Mike Iovine, Mu-Chu Lee, and Zhijing Li.\
    \ AITemplate, 10 2022. URL: https://github.com/facebookincubator/AITemplate. Lianmin\
    \ Zheng, Chengfan Jia, Minmin Sun, Zhao Wu, Cody Hao Yu, Ameer Haj-Ali, Yida Wang,\
    \ Jun Yang, Danyang Zhuo, Koushik Sen, et al. Ansor: Generating high-performance\
    \ tensor programs for deep learning. In Proceedings of the 14th USENIX Conference\
    \ on Operating Systems Design and Implementation, pages 863--879, 2020."
  title: 'EVT: Accelerating Deep Learning Training with Epilogue Visitor Tree'
  url: https://dl.acm.org/doi/10.1145/3620666.3651369
